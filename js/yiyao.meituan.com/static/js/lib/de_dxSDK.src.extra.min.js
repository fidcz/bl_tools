/*! For license information please see dxSDK.src.extra.min.js.LICENSE.txt */ ! function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define("MTDX", [], e) : "object" == typeof exports ? exports.MTDX = e() : t.MTDX = e()
}(window, (function() {
    return (() => {
        var t = {
                499: (t, e, i) => {
                    "use strict";
                    var s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                            return typeof t
                        } : function(t) {
                            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                        },
                        n = function() {
                            function t(t, e) {
                                for (var i = 0; i <
                                    e.length; i++) {
                                    var s = e[i];
                                    s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                                }
                            }
                            return function(e, i, s) {
                                return i && t(e.prototype, i), s && t(e, s), e
                            }
                        }();
                    var a = i(8345),
                        o = i(4520),
                        r = i(1081).i,
                        u = i(6107),
                        h = i(2651),
                        d = i(5283),
                        c = ["region", "operator", "network", "container", "os", "unionId"],
                        p = d + "//catfront.dianping.com",
                        l = d + "//catfront.51ping.com",
                        f = function() {
                            function t(e) {
                                ! function(t, e) {
                                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                }(this, t), this.url = p, this.filters = [], this._config = {
                                    devMode: !1,
                                    project: "",
                                    webVersion: "",
                                    pageUrl: "",
                                    logan: {
                                        enable: !1
                                    },
                                    disabledFilters: [],
                                    noScriptError: !0,
                                    ignoreList: {
                                        js: ["Illegal invocation"],
                                        ajax: ["https?://report.meituan.com/"],
                                        resource: ["https?://hls.dianping.com/", "https?://frep.meituan.net/"]
                                    },
                                    resourceReg: /(.51ping|.dianping|.dpfile|.meituan|.sankuai|.kuxun|.maoyan|.neixin|.mobike|.dper.com)/,
                                    disableCache: !1,
                                    invalid: {
                                        ajax: !0
                                    },
                                    autoCatch: {
                                        page: !0,
                                        ajax: !0,
                                        js: !0,
                                        resource: !0,
                                        console: !1,
                                        pv: !0
                                    },
                                    ajax: {
                                        invalid: !0,
                                        flag: !1,
                                        duration: 2e3
                                    },
                                    image: {
                                        flag: !1,
                                        duration: 5e3,
                                        fileSize: 100,
                                        filter: function() {
                                            return !1
                                        }
                                    },
                                    resource: {
                                        sample: .1,
                                        sampleConfigurable: !1,
                                        sampleApi: .1,
                                        combo: !0,
                                        delay: 1e3
                                    },
                                    page: {
                                        auto: !0,
                                        sample: .5,
                                        delay: 0,
                                        timeThreshold: 5,
                                        mainResourceNumber: 5,
                                        sensoryIndex: !0,
                                        getFirstScreenTime90: !1,
                                        fstPerfSample: .5,
                                        fstPerfAnalysis: !1,
                                        logSlowView: !1,
                                        disableSensoryImageIndex: !0,
                                        ignoreIframe: !0,
                                        logFirstScreen: !1,
                                        interactToStopObserver: !0
                                    },
                                    error: {
                                        sample: 1,
                                        delay: 1e3,
                                        combo: !1,
                                        maxSize: 10240,
                                        maxNum: 100,
                                        maxTime: 6e4
                                    },
                                    metric: {
                                        sample: .5,
                                        combo: !0,
                                        delay: 1500
                                    },
                                    pageId: "owl-" + h()
                                }, this.baseQuery = {
                                    v: 1,
                                    sdk: r
                                }, this.apiPaths = {
                                    log: "/api/log",
                                    error: "/api/log",
                                    page: "/api/speed",
                                    resource: "/batch",
                                    metric: "/api/metric",
                                    pv: "/api/pv",
                                    fstInfo: "/raptorapi/fstSpeed",
                                    fstLog: "/raptorapi/fstLog"
                                }, this.extensions = {}, this.userConfig = {}, this.config = {}, e ? this.set(e) : this.config = this._config
                            }
                            return n(t, [{
                                key: "removeFilter",
                                value: function(t) {
                                    for (var e = 0; e < this.filters.length; e++) {
                                        if (this.filters[e].key === t) return void this.filters.splice(e, 1)
                                    }
                                }
                            }, {
                                key: "addFilter",
                                value: function(t, e) {
                                    if (t && e instanceof Function && this.config.disabledFilters && -1 === this.config.disabledFilters.indexOf(t)) {
                                        for (var i = -1, s = 0; s < this.filters.length; s++) {
                                            var n = this.filters[s];
                                            n.key === t && (i = s, n.fn = e)
                                        } - 1 === i && this.filters.push({
                                            key: t,
                                            fn: e
                                        })
                                    }
                                }
                            }, {
                                key: "get",
                                value: function(t) {
                                    return t ? this.config[t] : this.config
                                }
                            }, {
                                key: "set",
                                value: function(t) {
                                    for (var e in t)
                                        if (t.hasOwnProperty(e)) {
                                            if ("devMode" === e && (this.setApiDomain(t[e]), t[e] && o.setDebug()), "ext" === e && this.setExtension(t[e]), "resourceReg" === e) try {
                                                this.userConfig[e] = new RegExp(t[e])
                                            } catch (t) {
                                                o.ignore(t)
                                            }
                                            "webVersion" === e && t[e] && (this.baseQuery.webVersion = t[e]), "object" !== s(t[e]) || t[e] instanceof RegExp || t[e] instanceof Array ? this.userConfig[e] = t[e] : "pageUrl" !== e && (this.userConfig[e] = a(this.userConfig[e], t[e]))
                                        } this.update()
                                }
                            }, {
                                key: "setApiDomain",
                                value: function(t) {
                                    this.url = t ? l : p
                                }
                            }, {
                                key: "getExtension",
                                value: function(t) {
                                    return t ? this.extensions[t] : this.extensions
                                }
                            }, {
                                key: "setExtension",
                                value: function(t) {
                                    for (var e in t)
                                        if (t.hasOwnProperty(e)) {
                                            var i = t[e];
                                            "latlng" === e ? (this.extensions.region = i, this.baseQuery.useLatlng = !0) : -1 !== c.indexOf(e) && (this.extensions[e] = i)
                                        }
                                }
                            }, {
                                key: "getApiPath",
                                value: function(t) {
                                    var e = this.apiPaths[t];
                                    return u.stringify(this.url + e, this.baseQuery)
                                }
                            }, {
                                key: "update",
                                value: function() {
                                    for (var t in this.config = this._config, this.userConfig) {
                                        var e = this.userConfig[t];
                                        "object" != (void 0 === e ? "undefined" : s(e)) || e instanceof RegExp || e instanceof Array ? this.config[t] = e : this.config[t] = a(this.config[t], this.userConfig[t])
                                    }
                                }
                            }]), t
                        }();
                    t.exports = f
                },
                1292: t => {
                    "use strict";
                    t.exports = {
                        SCRIPT: "jsError",
                        AJAX: "ajaxError",
                        RESOURCE: "resourceError"
                    }
                },
                6265: t => {
                    "use strict";
                    t.exports = {
                        ERROR: "error",
                        INFO: "info",
                        WARN: "warn",
                        DEBUG: "debug"
                    }
                },
                5283: t => {
                    "use strict";
                    var e = window.location.protocol ? window.location.protocol : "http:";
                    e = new RegExp("http").test(e) ? e : "http:", t.exports = e
                },
                1081: (t, e) => {
                    "use strict";
                    e.i = "1.9.1"
                },
                1328: (t, e, i) => {
                    "use strict";
                    var s = i(5147),
                        n = i(2684);
                    t.exports = {
                        getExt: function() {
                            var t = s("network");
                            if (!t) {
                                var e = n.getUserAgent(),
                                    i = /NetType\/([a-zA-Z0-9]+)/;
                                e && i.test(e) && (t = e.match(i)[1])
                            }
                            var a = s("uuid") || s("unionid") || s("dpid") || s("_lxsdk_cuid"),
                                o = {};
                            return t && (o.network = t), a && (o.unionId = a), o
                        }
                    }
                },
                3429: t => {
                    "use strict";
                    t.exports = function(t) {
                        if (t) {
                            var e = t.cfgManager;
                            if (!1 !== e.get("autoCatch").js) {
                                var i = window.onerror;
                                window.onerror = function() {
                                    t.parseWindowError.apply(t, arguments), i && i.apply(window, arguments)
                                }, (window.addEventListener || window.attachEvent)("unhandledrejection", (function() {
                                    t.parsePromiseUnhandled.apply(t, arguments)
                                }))
                            }
                            if (!0 === e.get("autoCatch").console) {
                                if (!window.console || !window.console.error) return;
                                var s = window.console.error;
                                window.console.error = function() {
                                    t.parseConsoleError.apply(t, arguments), s && s.apply(window.console, arguments)
                                }
                            }
                        }
                    }
                },
                7193: (t, e, i) => {
                    "use strict";
                    var s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                            return typeof t
                        } : function(t) {
                            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                        },
                        n = function() {
                            function t(t, e) {
                                for (var i = 0; i <
                                    e.length; i++) {
                                    var s = e[i];
                                    s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                                }
                            }
                            return function(e, i, s) {
                                return i && t(e.prototype, i), s && t(e, s), e
                            }
                        }();
                    var a = i(170),
                        o = i(8345),
                        r = i(9212),
                        u = i(5912),
                        h = i(1292),
                        d = i(4520),
                        c = i(2684),
                        p = i(6107),
                        l = i(562),
                        f = "error",
                        _ = function(t) {
                            return "c=" + encodeURIComponent(JSON.stringify(t))
                        },
                        g = function() {
                            var t = arguments.length >
                                0 && void 0 !== arguments[0] ? arguments[0] : {};
                            if (t && t.data) return t.beforeSend && t.beforeSend(), a({
                                type: "POST",
                                url: t.url,
                                header: {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                },
                                data: _(t.data),
                                success: t.success,
                                fail: t.fail,
                                xhrRewritten: t.xhrRewritten
                            })
                        },
                        m = function() {
                            function t(e, i) {
                                ! function(t, e) {
                                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                }(this, t), this.parent = i, this.cfgManager = e, this.cache = [], this.cacheSending = {}, this.comboTimeout = 0, this.timeLimit = Date.now(), this.errorCount = 0, this.isTimeLimit = !1, this.detectLeave()
                            }
                            return n(t, [{
                                key: "parseWindowError",
                                value: function(t, e, i, s, n) {
                                    try {
                                        n && n.stack ? ("Invalid_Error" !== (n = this._processError(n)).sec_category && (n.rowNum = n.rowNum || i, n.colNum = n.colNum || s, n.resourceUrl = n.resourceUrl || e), this._push(n)) : "string" == typeof t && this._push({
                                            category: h.SCRIPT,
                                            sec_category: t,
                                            resourceUrl: e,
                                            rowNum: i,
                                            colNum: s
                                        })
                                    } catch (t) {
                                        this.reportSystemError(t)
                                    }
                                }
                            }, {
                                key: "parsePromiseUnhandled",
                                value: function(t) {
                                    if (t && "unhandledrejection" === t.type) try {
                                        var e = t.reason;
                                        if (e) {
                                            var i = "unhandledrejection",
                                                s = "";
                                            if (e instanceof Error) {
                                                var n = e.message || e.name || "";
                                                n && this.cfgManager.get(f).formatUnhandledRejection && (i = "[unhandledrejection] " + n), s = e.stack || e.toString() || ""
                                            } else s = e;
                                            this._push({
                                                category: h.SCRIPT,
                                                sec_category: i,
                                                content: s
                                            })
                                        }
                                    } catch (t) {
                                        d.ignore(t)
                                    }
                                }
                            }, {
                                key: "parseConsoleError",
                                value: function() {
                                    try {
                                        var t = [].slice.call(arguments);
                                        if (!t || !t.length) return;
                                        for (var e = [], i = 0; i <
                                            t.length; i++) {
                                            var s = t[i];
                                            "string" != typeof t[i] && (s = t[i] instanceof window.Error ? JSON.stringify(t[i].stack) : JSON.stringify(t[i])), e.push(s)
                                        }
                                        e && e.length && this._push({
                                            category: h.SCRIPT,
                                            sec_category: "consoleError",
                                            content: e.join(" ")
                                        })
                                    } catch (t) {
                                        this.reportSystemError(t)
                                    }
                                }
                            }, {
                                key: "detectLeave",
                                value: function() {
                                    var t = this;
                                    try {
                                        var e = window.onbeforeunload;
                                        window.onbeforeunload = function() {
                                            var i = t.addCacheExtension(),
                                                s = t.cacheSending;
                                            if (Object.keys(s).length)
                                                for (var n in s)
                                                    if (s.hasOwnProperty(n) && s[n]) try {
                                                        var a = s[n],
                                                            o = a.xhr,
                                                            r = a.cache;
                                                        o.abort(), r instanceof Array && r.length && (i = i.concat(r))
                                                    } catch (t) {
                                                        d.ignore(t)
                                                    }
                                            if (i && i.length)
                                                if (window.navigator && window.navigator.sendBeacon && t.cfgManager.get("useSendBeacon")) {
                                                    var h = t.cfgManager.getApiPath(f),
                                                        c = p.stringify(h, {
                                                            pageId: t.cfgManager.get("pageId"),
                                                            beacon: 1
                                                        });
                                                    window.navigator.sendBeacon(c, _(i))
                                                } else t.cfgManager.get("disableCache") || u.add(i, t.cfgManager.get("webVersion"));
                                            e && e.call()
                                        }
                                    } catch (t) {
                                        d.ignore(t)
                                    }
                                }
                            }, {
                                key: "checkCache",
                                value: function() {
                                    var t = this.cfgManager;
                                    if (!t.get("disableCache")) {
                                        var e = u.get();
                                        if ("object" === (void 0 === e ? "undefined" : s(e)) && Object.keys(e).length) {
                                            var i = function(i) {
                                                var s = e[i];
                                                s instanceof Array && s.length ? setTimeout((function() {
                                                    try {
                                                        var e = t.getApiPath(f),
                                                            n = t.get("webVersion") || "",
                                                            a = "no-version" === i ? "" : i;
                                                        n !== a && (e = p.replaceParam(e, "webVersion", a)), g({
                                                            url: e,
                                                            data: s,
                                                            success: function() {
                                                                u.clearItem(i)
                                                            },
                                                            xhrRewritten: !!t.get("autoCatch").ajax
                                                        })
                                                    } catch (t) {
                                                        d.ignore(t)
                                                    }
                                                }), 1500) : u.clearItem(i)
                                            };
                                            for (var n in e) i(n)
                                        }
                                    }
                                }
                            }, {
                                key: "reportSystemError",
                                value: function(t) {
                                    t && t.stack && (this.cache.push(new r({
                                        project: "owl",
                                        pageUrl: "default",
                                        realUrl: c.getHref(),
                                        sec_category: t.msg || t.name || "parseError",
                                        content: JSON.stringify(t.stack)
                                    })), this.send(!0))
                                }
                            }, {
                                key: "_processError",
                                value: function(t) {
                                    var e = function(t) {
                                        var e = "object" === (void 0 === t ? "undefined" : s(t)) ? JSON.stringify(t) : t;
                                        return {
                                            category: h.SCRIPT,
                                            sec_category: "Invalid_Error",
                                            content: e
                                        }
                                    };
                                    try {
                                        return function(t) {
                                            var i = t.line,
                                                s = t.column,
                                                n = t.message || t.name || "";
                                            if (t.stack) {
                                                var a = t.stack.match("https?://[^\n]+");
                                                a = a ? a[0] : "";
                                                var o = /https?:\/\/(\S)*\.js/,
                                                    r = "";
                                                o.test(a) && (r = a.match(o)[0]);
                                                var u = a.match(":(\\d+):(\\d+)");
                                                u || (u = [0, 0, 0]);
                                                var d = t && t.stack || "";
                                                return {
                                                    category: h.SCRIPT,
                                                    sec_category: n,
                                                    content: d,
                                                    rowNum: void 0 !== i ? i : u[1],
                                                    colNum: void 0 !== s ? s : u[2],
                                                    resourceUrl: r
                                                }
                                            }
                                            return e(t)
                                        }(t)
                                    } catch (i) {
                                        return this.reportSystemError(t), e(t)
                                    }
                                }
                            }, {
                                key: "_push",
                                value: function(t, e) {
                                    t = this.parse(t), this.push(new r(t), e)
                                }
                            }, {
                                key: "_pushResource",
                                value: function() {
                                    var t = this.cfgManager.get("resource").sample;
                                    Math.random() >
                                        t || this._push.apply(this, arguments)
                                }
                            }, {
                                key: "parse",
                                value: function(t) {
                                    return t.project || (t.project = this.cfgManager.get("project")), t.pageUrl || (t.pageUrl = this.cfgManager.get("pageUrl") || "default"), t.unionId || (t.unionId = this.cfgManager.getExtension("unionId")), t.realUrl = c.getHref(), t
                                }
                            }, {
                                key: "push",
                                value: function(t) {
                                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                        i = this.cfgManager;
                                    if (t && !(Math.random() > i.get(f).sample))
                                        if (t instanceof r || (t instanceof Error ? t = this._processError(t) : "string" == typeof t ? t = {
                                                sec_category: t
                                            } : "object" === (void 0 === t ? "undefined" : s(t)) && (t = {
                                                sec_category: t.name || "",
                                                content: t.msg || ""
                                            }), t = this.parse(t), t = new r(t)), t && t.content && t.content.length >= i.get(f).maxSize) l.log("[Error]: 错误长度大于" + i.get(f).maxSize);
                                        else {
                                            t.update(e), l.log("[Error]: " + JSON.stringify(t.toJson()));
                                            var n = !0;
                                            if (i.get("noScriptError") && 0 === t.sec_category.indexOf("Script error")) return !1;
                                            var a = i.filters;
                                            if (a && a.length)
                                                for (var o = 0; o <
                                                    a.length; o++) {
                                                    var u = a[o];
                                                    if (!u.fn(t)) return !1
                                                }
                                            var h = i.get("ignoreList").js;
                                            if (h && h.length)
                                                for (var d = 0; d < h.length; d++) {
                                                    var c = h[d];
                                                    if (0 === t.sec_category.indexOf(c)) {
                                                        n = !1;
                                                        break
                                                    }
                                                }
                                            if (n) {
                                                try {
                                                    if (window && window.CustomEvent && t && t.getEventInfo) {
                                                        var p = t.getEventInfo({
                                                                pageId: i.get("pageId") || ""
                                                            }),
                                                            _ = new CustomEvent("owlErrDetected", {
                                                                detail: p
                                                            });
                                                        window.dispatchEvent(_)
                                                    }
                                                } catch (t) {
                                                    this.reportSystemError(t)
                                                }
                                                this.isExist(t) || (this.onPush && this.onPush(t), (t = this._handleError(t)) && (this.cache.push(t), this.send()))
                                            }
                                        }
                                }
                            }, {
                                key: "isExist",
                                value: function(t) {
                                    for (var e = 0; e < this.cache.length; e++) {
                                        var i = this.cache[e];
                                        if (i instanceof r || (i = new r(i)), i.isEqual(t)) return !0
                                    }
                                    return !1
                                }
                            }, {
                                key: "_handleError",
                                value: function(t) {
                                    try {
                                        var e = this.cfgManager.get("onErrorPush");
                                        if (e instanceof Function && (t = e(t)), t instanceof r || void 0 === t) return t;
                                        d.ignore("onErrorPush 方法的返回值仅能为ErrorModel实例或undefined")
                                    } catch (e) {
                                        return d.ignore("onErrorPush 方法处理有误", e), t
                                    }
                                }
                            }, {
                                key: "report",
                                value: function() {
                                    this.push.apply(this, arguments), this.send(!0)
                                }
                            }, {
                                key: "send",
                                value: function(t) {
                                    var e = this,
                                        i = this.cfgManager,
                                        s = this.comboTimeout,
                                        n = i.get(f).maxNum || 100,
                                        a = i.get(f).maxTime || 6e4,
                                        o = Date.now() - this.timeLimit;
                                    this.isTimeLimit || (this.timeLimit = Date.now()), this.isTimeLimit = !0;
                                    var r = function() {
                                            if (e.cache.length) {
                                                clearTimeout(s), s = 0;
                                                try {
                                                    if (e.errorCount += e.cache.length, o <= a) {
                                                        if (e.errorCount >= n) return
                                                    } else e.isTimeLimit = !1, e.errorCount = 0
                                                } catch (t) {
                                                    d.ignore(t)
                                                }
                                                var t = e.addCacheExtension(),
                                                    r = +new Date,
                                                    h = g({
                                                        url: i.getApiPath(f) + "&pageId =" + i.get("pageId"),
                                                        data: t,
                                                        success: function() {
                                                            e.cacheSending[r] = void 0
                                                        },
                                                        fail: function() {
                                                            try {
                                                                if (!i.get("disableCache")) {
                                                                    var t = e.cacheSending[r];
                                                                    t && t.cache && t.cache.length && u.add(t.cache, i.get("webVersion"))
                                                                }
                                                                e.cacheSending[r] = void 0
                                                            } catch (t) {
                                                                e.cacheSending[r] = void 0, d.ignore(t)
                                                            }
                                                        },
                                                        xhrRewritten: !!i.get("autoCatch").ajax
                                                    });
                                                e.cacheSending[r] = {
                                                    xhr: h,
                                                    cache: t
                                                }, e.cache = []
                                            }
                                        },
                                        h = i.get(f).delay;
                                    t ? r() : s || -1 === h || (s = setTimeout(r, h))
                                }
                            }, {
                                key: "addCacheExtension",
                                value: function() {
                                    var t = this.cache,
                                        e = [];
                                    if (!t || !t.length) return e;
                                    for (var i = this.cfgManager.getExtension(), n = 0; n < t.length; n++) {
                                        var a = t[n];
                                        i && "object" === (void 0 === i ? "undefined" : s(i)) && (a = o(a.toJson(), i)), e.push(a)
                                    }
                                    return e
                                }
                            }]), t
                        }();
                    t.exports = m
                },
                9212: (t, e, i) => {
                    "use strict";
                    var s = function() {
                        function t(t, e) {
                            for (var i = 0; i <
                                e.length; i++) {
                                var s = e[i];
                                s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                            }
                        }
                        return function(e, i, s) {
                            return i && t(e.prototype, i), s && t(e, s), e
                        }
                    }();
                    var n = i(8345),
                        a = i(6265),
                        o = i(1292),
                        r = ["project", "pageUrl", "realUrl", "resourceUrl", "category", "sec_category", "level", "unionId", "timestamp", "content"],
                        u = ["rowNum", "colNum", "tags"].concat(r),
                        h = ["project", "pageUrl", "category", "sec_category", "level", "unionId"],
                        d = function() {
                            function t(e) {
                                if (function(t, e) {
                                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                    }(this, t), e) {
                                    var i = void 0;
                                    for (i in e) e.hasOwnProperty(i) && (this[i] = e[i]);
                                    this.parse(e)
                                }
                            }
                            return s(t, [{
                                key: "parse",
                                value: function() {
                                    this.category || (this.category = o.SCRIPT), this.level || (this.level = a.ERROR), this.timestamp || (this.timestamp = +new Date), this.sec_category || (this.sec_category = "default")
                                }
                            }, {
                                key: "isEqual",
                                value: function(t) {
                                    return this.sec_category === t.sec_category && this.resourceUrl === t.resourceUrl && this.colNum === t.colNum && this.rowNum === t.rowNum && this.content === t.content
                                }
                            }, {
                                key: "update",
                                value: function(t) {
                                    for (var e in t) void 0 !== t[e] && -1 !== u.indexOf(e) && (this[e] = t[e]);
                                    return this
                                }
                            }, {
                                key: "updateTags",
                                value: function(t) {
                                    var e = n(this.tags || {}, t);
                                    return this.tags = e, this
                                }
                            }, {
                                key: "toJson",
                                value: function() {
                                    var t = this,
                                        e = this.rowNum,
                                        i = this.colNum,
                                        s = {};
                                    return r.map((function(e) {
                                        void 0 !== t[e] && (s[e] = t[e])
                                    })), s.category === o.SCRIPT && e && i && (s.dynamicMetric = {
                                        rowNum: e,
                                        colNum: i
                                    }), this.tags && (s.dynamicMetric = n(s.dynamicMetric || {}, this.tags)), s
                                }
                            }, {
                                key: "getEventInfo",
                                value: function() {
                                    var t = this,
                                        e = arguments.length >
                                        0 && void 0 !== arguments[0] ? arguments[0] : {},
                                        i = {};
                                    for (var s in h.map((function(e) {
                                            void 0 !== t[e] && (i[e] = t[e])
                                        })), e) e.hasOwnProperty(s) && (i[s] = e[s]);
                                    return i
                                }
                            }]), t
                        }();
                    d.LEVEL = a, d.CATEGORY = o, t.exports = d
                },
                25: (t, e, i) => {
                    "use strict";
                    var s = function() {
                        function t(t, e) {
                            for (var i = 0; i <
                                e.length; i++) {
                                var s = e[i];
                                s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                            }
                        }
                        return function(e, i, s) {
                            return i && t(e.prototype, i), s && t(e, s), e
                        }
                    }();
                    var n = i(499),
                        a = i(3208),
                        o = i(9212),
                        r = i(7193),
                        u = i(6472),
                        h = i(1013),
                        d = i(1458),
                        c = i(6237),
                        p = i(9084),
                        l = i(562),
                        f = i(2651),
                        _ = i(3429),
                        g = i(3702),
                        m = i(3079),
                        S = i(1328),
                        I = i(1081).i,
                        T = i(1292),
                        v = i(4520),
                        E = i(2684),
                        y = i(5029),
                        R = function() {
                            function t(e, i) {
                                ! function(t, e) {
                                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                }(this, t);
                                var s = new n(e);
                                this.errManager = new r(s, this), this.pageManager = new h(s, this.errManager), this.resManager = new u(s, this.errManager), this.metricManager = new d(s), this.logManager = new c(s), this.pvManager = new p(s), this.cfgManager = s, this.init(), i && i.noFilter || a(this.cfgManager)
                            }
                            return s(t, [{
                                key: "init",
                                value: function() {
                                    this.cfgManager.setExtension(S.getExt())
                                }
                            }, {
                                key: "config",
                                value: function(t) {
                                    this.cfgManager.set(t)
                                }
                            }, {
                                key: "debug",
                                value: function() {
                                    this.cfgManager.set({
                                        devMode: !0
                                    }), v.setDebug()
                                }
                            }, {
                                key: "addError",
                                value: function(t, e) {
                                    e && !1 === e.combo || !1 === this.cfgManager.get("error").combo ? this.errManager.report(t, e) : this.errManager.push(t, e)
                                }
                            }, {
                                key: "sendErrors",
                                value: function() {
                                    this.errManager.report()
                                }
                            }, {
                                key: "addPoint",
                                value: function() {
                                    var t = arguments.length >
                                        0 && void 0 !== arguments[0] ? arguments[0] : {},
                                        e = this.pageManager.getPerformaceTiming(),
                                        i = e.perf,
                                        s = void 0;
                                    if (void 0 !== t.duration) s = t;
                                    else if (void 0 !== i) {
                                        var n = t.timeStamp || +new Date;
                                        s = {
                                            position: t.position,
                                            duration: n - i.navigationStart
                                        }
                                    }
                                    s && (this.pageManager.setUserReady(), this.pageManager.push(s), this.pageManager.report())
                                }
                            }, {
                                key: "sendPoints",
                                value: function() {
                                    this.pageManager.report(!0)
                                }
                            }, {
                                key: "addApi",
                                value: function(t) {
                                    if (t) {
                                        if (void 0 !== t.networkCode && "number" != typeof t.networkCode) return v.ignore("网络状态码必须为Number类型", JSON.stringify(t));
                                        if (void 0 !== t.statusCode && "number" != typeof t.statusCode) return v.ignore("业务状态码必须为Number类型", JSON.stringify(t));
                                        var e = void 0,
                                            i = void 0;
                                        e = t.networkCode || 0 === t.networkCode ? t.networkCode : "", i = t.statusCode || 0 === t.statusCode ? t.statusCode : "";
                                        var s = {
                                            type: "api",
                                            connectType: t.connectType || "",
                                            resourceUrl: t.name,
                                            statusCode: e + "|" + i,
                                            responsetime: t.responseTime && t.responseTime.toString() ? t.responseTime.toString() : "0"
                                        };
                                        t.content && (s.firstCategory = T.AJAX, s.secondCategory = t.secondCategory || t.name, s.logContent = t.content), this.resManager.pushApi(s)
                                    }
                                }
                            }, {
                                key: "reportApi",
                                value: function() {
                                    this.addApi.apply(this, arguments)
                                }
                            }, {
                                key: "sendApis",
                                value: function() {
                                    this.resManager.report()
                                }
                            }, {
                                key: "addLog",
                                value: function(t) {
                                    if ("string" != typeof t) return "addLog只接受string类型的日志";
                                    this.logManager.addLog(t)
                                }
                            }, {
                                key: "createLog",
                                value: function() {
                                    var t = this.cfgManager;
                                    return new c(t)
                                }
                            }, {
                                key: "resetPv",
                                value: function() {
                                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                                        e = t && t.pageUrl || this.cfgManager.get("pageUrl"),
                                        i = t && t.pageId || "owl-" + f(),
                                        s = {
                                            project: t && t.project || this.cfgManager.get("project"),
                                            pageUrl: e,
                                            pageId: i
                                        };
                                    this.cfgManager.set({
                                        pageUrl: e,
                                        pageId: i
                                    }), this.pvManager.report(s)
                                }
                            }, {
                                key: "reportPv",
                                value: function() {
                                    var t = {
                                        pageId: this.cfgManager.get("pageId")
                                    };
                                    this.pvManager.report(t)
                                }
                            }, {
                                key: "updateFilter",
                                value: function(t, e) {
                                    void 0 === e ? this.cfgManager.removeFilter(t) : this.cfgManager.addFilter(t, e)
                                }
                            }, {
                                key: "wrap",
                                value: function(t, e, i) {
                                    if ("function" != typeof t) return t;
                                    try {
                                        if (t.__owl_wrapped__) return t;
                                        if (t.__owl_wrapper__) return t.__owl_wrapper__
                                    } catch (e) {
                                        return t
                                    }
                                    var s = function() {
                                        try {
                                            return t.apply(e, arguments)
                                        } catch (t) {
                                            M.addError(t, i)
                                        }
                                    };
                                    for (var n in t) t.prototype.hasOwnProperty(n) && (s[n] = t[n]);
                                    return s.prototype = t.prototype, t.__owl_wrapper__ = s, s.__owl_wrapper__ = !0, s
                                }
                            }, {
                                key: "setDimension",
                                value: function(t) {
                                    this.cfgManager.setExtension(t)
                                }
                            }, {
                                key: "reportFST",
                                value: function() {
                                    var t = this.cfgManager.get("page");
                                    t.sensoryIndex || t.manualReportFST || (this.cfgManager.set({
                                        page: {
                                            manualReportFST: !0
                                        }
                                    }), this.pageManager.manualReportFST())
                                }
                            }]), t
                        }(),
                        M = new R({}, {
                            noFilter: !0
                        });
                    M.OWL = R, M.__version__ = I, M.errorModel = o, M.MetricManager = function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : M.cfgManager,
                            e = new d(t);
                        return e
                    }, M.start = function(t) {
                        var e = E.getUserAgent(),
                            s = !1;
                        if (y.forEach((function(t) {
                                -1 !== e.indexOf(t) && (s = !0, v.ignore("当前环境被判断为爬虫, 监控功能关闭"))
                            })), !s && !(window && window.Owl && !0 === window.Owl.isStarted || this.isStarted)) {
                            if (this.isStarted = !0, M.cfgManager.set({
                                    pageUrl: E.getHref()
                                }), t) {
                                var n = t && t.resource && t.resource.sampleConfigurable;
                                t && t.resource && t.resource.sample && !n && (t.resource.sample = void 0), M.cfgManager.set(t)
                            }
                            var o = this.cfgManager.get("logan");
                            if (o && o.enable) {
                                var r = this.cfgManager.get("project"),
                                    u = this.cfgManager.get("pageUrl"),
                                    h = o.Logan,
                                    d = o.config;
                                l.ready({
                                    LoganAPI: h,
                                    project: r,
                                    pageUrl: u,
                                    loganConfig: d
                                })
                            }
                            a(M.cfgManager), m(M.pageManager), _(M.errManager), g(M.resManager, M.errManager);
                            var c = t.preLoadName || "_Owl_";
                            if (window[c]) {
                                window[c].isReady = !0;
                                var p = window[c],
                                    f = p.preTasks,
                                    S = p.dataSet;
                                f && f.length && (f.forEach((function(t) {
                                    M[t.api].apply(M, t.data)
                                })), window[c].preTasks = []), setTimeout((function() {
                                    S && S.length && S.forEach((function(t) {
                                        t && "jsError" === t.type ? M.errManager.parseWindowError.apply(M.errManager, t.data) : "resError" === t.type ? M.resManager.handleResourceLoadError.apply(M.resManager, t.data) : "resTime" === t.type ? M.resManager.handleResourceTiming.apply(M.resManager, t.data) : "pageTime" === t.type && M.pageManager.parsePageTime.apply(M.pageManager, t.data)
                                    })), window[c].dataSet = []
                                }), 0)
                            }
                            if (M.cfgManager.get("isSPA") || M.cfgManager.get("onpopstate")) {
                                var I = window.onpopstate;
                                window.onpopstate = function(t) {
                                    M.cfgManager.set({
                                        pageUrl: E.getHref()
                                    });
                                    var e = M.cfgManager.get("onpopstate");
                                    try {
                                        e(t)
                                    } catch (t) {
                                        v.ignore(t)
                                    }
                                    I && I.apply(window, t)
                                }
                            }
                            M.errManager.checkCache(), i(7237)("owl_sdk", M), M.cfgManager.get("autoCatch") && M.cfgManager.get("autoCatch").pv && M.reportPv()
                        }
                    }, window && !window.Owl && (window.Owl = M), t.exports = M
                },
                6237: (t, e, i) => {
                    "use strict";
                    var s = function() {
                        function t(t, e) {
                            for (var i = 0; i <
                                e.length; i++) {
                                var s = e[i];
                                s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                            }
                        }
                        return function(e, i, s) {
                            return i && t(e.prototype, i), s && t(e, s), e
                        }
                    }();
                    var n = i(562),
                        a = function() {
                            function t(e) {
                                ! function(t, e) {
                                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                }(this, t), this.cfgManager = e
                            }
                            return s(t, [{
                                key: "addLog",
                                value: function(t) {
                                    n.log("[Log]: " + t, {
                                        noType: !0
                                    })
                                }
                            }]), t
                        }();
                    t.exports = a
                },
                1458: (t, e, i) => {
                    "use strict";
                    var s = function() {
                        function t(t, e) {
                            for (var i = 0; i <
                                e.length; i++) {
                                var s = e[i];
                                s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                            }
                        }
                        return function(e, i, s) {
                            return i && t(e.prototype, i), s && t(e, s), e
                        }
                    }();
                    var n = i(8345),
                        a = i(170),
                        o = i(4520),
                        r = i(6107),
                        u = function() {
                            function t(e) {
                                ! function(t, e) {
                                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                }(this, t), this.cfgManager = e, this.tags = {}, this.kvs = {}, this.extraData = "", this.random = Math.random()
                            }
                            return s(t, [{
                                key: "setTags",
                                value: function(t) {
                                    this.tags = n(this.tags, t)
                                }
                            }, {
                                key: "getTags",
                                value: function(t) {
                                    return t ? this.tags[t] : this.tags
                                }
                            }, {
                                key: "setMetric",
                                value: function(t, e) {
                                    var i = this;
                                    if ("string" != typeof t) return o.ignore("metric名称必须是string类型");
                                    if ("number" != typeof e) return o.ignore("metric值必须是number类型,当前为" + t + "-" + e);
                                    this.kvs[t] || (this.kvs[t] = []), this.kvs[t].push(e);
                                    try {
                                        this.cfgManager.get("metric").combo && (this.timeout && (clearTimeout(this.timeout), this.timeout = null), this.timeout = setTimeout((function() {
                                            i.report()
                                        }), this.cfgManager.get("metric").delay || 1500))
                                    } catch (t) {
                                        throw t
                                    }
                                }
                            }, {
                                key: "setExtraData",
                                value: function(t) {
                                    t && (this.extraData = t)
                                }
                            }, {
                                key: "getMetric",
                                value: function(t) {
                                    return t ? this.kvs[t] : this.kvs
                                }
                            }, {
                                key: "clearMetric",
                                value: function() {
                                    this.kvs = {}
                                }
                            }, {
                                key: "_rollbackMetric",
                                value: function(t) {
                                    for (var e in t) t.hasOwnProperty(e) && (this.kvs[e] = t[e].concat(this.kvs[e] || []))
                                }
                            }, {
                                key: "report",
                                value: function() {
                                    var t = this,
                                        e = this.cfgManager,
                                        i = e.get("project");
                                    if (this.kvs && 0 !== Object.keys(this.kvs).length) {
                                        var s = {
                                                kvs: this.kvs,
                                                tags: this.tags,
                                                ts: parseInt(+new Date / 1e3),
                                                extraData: this.extraData
                                            },
                                            n = this.kvs;
                                        this.clearMetric();
                                        var o = e.getApiPath("metric"),
                                            u = r.stringify(o, {
                                                p: i,
                                                pageId: e.get("pageId"),
                                                unionId: e.getExtension("unionId")
                                            });
                                        a({
                                            type: "POST",
                                            url: u,
                                            header: {
                                                "Content-Type": "application/x-www-form-urlencoded"
                                            },
                                            data: "data=" + encodeURIComponent(JSON.stringify(s)),
                                            fail: function() {
                                                t._rollbackMetric(n)
                                            }
                                        })
                                    }
                                }
                            }]), t
                        }();
                    t.exports = u
                },
                3079: t => {
                    "use strict";
                    t.exports = function(t) {
                        var e = t.cfgManager,
                            i = e.get("autoCatch").page,
                            s = e.get("page");
                        if (i && (s.sensoryIndex || s.getFirstScreenTime90)) t.sensoryObserver();
                        else if (window._Owl_ && window._Owl_.observer && window._Owl_.observer.disconnect) try {
                            window._Owl_.observer.disconnect()
                        } catch (t) {
                            console.log("pre-catch observer disconnect err")
                        }
                        i && !t.getReady() && (document && "complete" === document.readyState ? t.parsePageTimeWithDefer() : (window.addEventListener || window.attachEvent)("load", (function() {
                            t.parsePageTimeWithDefer()
                        })))
                    }
                },
                1765: (t, e, i) => {
                    "use strict";
                    var s = function() {
                        function t(t, e) {
                            for (var i = 0; i <
                                e.length; i++) {
                                var s = e[i];
                                s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                            }
                        }
                        return function(e, i, s) {
                            return i && t(e.prototype, i), s && t(e, s), e
                        }
                    }();
                    var n = i(4490),
                        a = i(4520),
                        o = i(6209),
                        r = i(8345),
                        u = [],
                        h = null,
                        d = null,
                        c = !1,
                        p = !1,
                        l = void 0,
                        f = void 0,
                        _ = -1,
                        g = void 0,
                        m = 0,
                        S = void 0,
                        I = [],
                        T = void 0,
                        v = void 0,
                        E = void 0,
                        y = void 0,
                        R = ["HTML", "HEAD", "META", "LINK", "SCRIPT", "STYLE", "NOSCRIPT"],
                        M = Array.prototype.slice,
                        N = Number.parseInt || window.parseInt,
                        U = {
                            height: window.innerHeight || 0,
                            width: window.innerWidth || 0
                        },
                        A = U.height,
                        O = U.width,
                        C = function() {
                            function t(e) {
                                ! function(t, e) {
                                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                }(this, t), this.cfgManager = e, this.pageData = [], this.observer = null, this.disableMutaObserver = !1;
                                var i = N(e.get("page").mutaStopTime || 0);
                                if (this.mutaStopTime = i >
                                    3e3 ? i : 3e3, this.perfObserver = null, this.ignoreDom = e.get("page").ignoreAttr || "owl-ignore", this.ignoreIframe = !0, this.imgPattern = /(\.)(png|jpg|jpeg|gif|webp|ico|bmp|tiff|svg)/i, S = e.get("page").scrollDom, window._Owl_ && (this.pageData = window._Owl_.pageData, this.observer = window._Owl_.observer, this.disableMutaObserver = window._Owl_.disableMutaObserver), (this.disableMutaObserver || !document.body) && (c = !0, p = !0, this.observer)) try {
                                    this.observer.disconnect()
                                } catch (t) {
                                    console.log("observer disconnect err")
                                }
                            }
                            return s(t, [{
                                key: "mutaObserver",
                                value: function() {
                                    var t = this;
                                    if (o.PerformanceNow() && o.MutationObserver() && !c) {
                                        if (this.observer && this.observer.disconnect) try {
                                            this.observer.disconnect(), this.observer = null, this.pageData && this.pageData.length && this.pageData.forEach((function(e) {
                                                t.mutaCallback(e.mutations, e.startTime, !1)
                                            }))
                                        } catch (t) {
                                            console.log("observer disconnect err")
                                        }
                                        var e = this.cfgManager.get("page");
                                        try {
                                            if (this.observer = new MutationObserver((function(i) {
                                                    var s = performance.now();
                                                    t.mutaCallback(i, s, !0), e.getFirstScreenTime90 && t.recordDomWeight(s)
                                                })), this.observer.observe(document.body, {
                                                    childList: !0,
                                                    subtree: !0
                                                }), this.resetTimer(!0), !0 === e.interactToStopObserver && document && document.addEventListener)
                                                if ("complete" === document.readyState) this.interactToStopObserver();
                                                else(window.addEventListener || window.attachEvent)("load", (function() {
                                                    t.interactToStopObserver()
                                                }))
                                        } catch (t) {
                                            console.log("observer observe err")
                                        }
                                        g = e.disableSensoryImageIndex, (p = g || p) || this.registerPerfObserver()
                                    }
                                }
                            }, {
                                key: "registerPerfObserver",
                                value: function() {
                                    var t = this,
                                        e = this.cfgManager.get("resource").disablePerformanceObserver || !1;
                                    if (o.PerformanceObserver() && !0 !== e) {
                                        var i = setTimeout((function() {
                                            t.perfObserverStop()
                                        }), 8e3);
                                        this.perfObserver = new window.PerformanceObserver((function() {
                                            clearTimeout(d), d = setTimeout((function() {
                                                clearTimeout(i), t.perfObserverStop()
                                            }), 3e3)
                                        })), this.perfObserver.observe({
                                            entryTypes: ["resource"]
                                        })
                                    } else p = !0
                                }
                            }, {
                                key: "getSensoryIndex",
                                value: function(t) {
                                    var e = this,
                                        i = 0,
                                        s = setTimeout((function() {
                                            clearInterval(i), e.mutaObserverStop(), e.perfObserverStop(), t(f)
                                        }), 8e3);
                                    i = setInterval((function() {
                                        c && p && (clearInterval(i), clearTimeout(s), f ? (g || function(t, e) {
                                            var i = n.getImageTimingsInFirstScreen(t, e, S);
                                            if (f && i.length) {
                                                var s = Math.round(i[0]);
                                                f.FST = Math.max(f.FST, s), a.logScreen("首屏图片时间: ", s), a.logScreen("最终首屏时间: ", f.FST), window && window.Owl && window.Owl.fstInfo && (window.Owl.fstInfo.imgFST = s)
                                            }
                                        }(e.ignoreDom, e.imgPattern), t(f)) : t())
                                    }), 500)
                                }
                            }, {
                                key: "resetTimer",
                                value: function(t) {
                                    var e = this;
                                    h && clearTimeout(h), t && (h = setTimeout((function() {
                                        a.logScreen(e.mutaStopTime + "ms时间内没有监听到新的DOM变化, 停止DOM变化监听"), e.mutaObserverStop()
                                    }), this.mutaStopTime))
                                }
                            }, {
                                key: "mutaCallback",
                                value: function(t, e, i) {
                                    var s = this;
                                    i && this.resetTimer(!0), e = e || performance.now(), setTimeout((function() {
                                        c || (a.logScreen("DOM原始变更:", e, t), t.filter((function(t) {
                                            var e = (t.target.nodeName || "").toUpperCase();
                                            return "childList" === t.type && e && -1 === R.indexOf(e) && t.addedNodes && t.addedNodes.length
                                        })).forEach((function(t) {
                                            if (!c) {
                                                var i = M.call(t.addedNodes, 0).filter((function(t) {
                                                    var e = (t.nodeName || "").toUpperCase();
                                                    return 1 === t.nodeType && e && -1 === R.indexOf(e) && !1 !== t.isConnected && !(s.ignoreIframe && "IFRAME" === e) && ! function(t, e) {
                                                        var i = !1;
                                                        e && (i = !(!t.closest || !t.closest("[" + e + "]")) || t.hasAttribute && t.hasAttribute(e));
                                                        i && a.logScreen("自定义忽略元素: ", t);
                                                        return i
                                                    }(t, s.ignoreDom)
                                                }));
                                                if (i && i.length && i[0]) {
                                                    u.push({
                                                        nodes: i,
                                                        startTime: e
                                                    });
                                                    var n, o, r = i[0]; - 1 === _ && (n = r, o = e, performance && performance.getEntriesByType && performance.getEntriesByType("paint") && document && document.body && "" !== document.body.innerText ? _ = 0 : (n && (3 === n.nodeType || "" !== n.innerText) || document.querySelector && document.querySelector("img")) && (_ = N(o || 0)));
                                                    var h = r.getBoundingClientRect && r.getBoundingClientRect();
                                                    h && h.width && h.height && h.top >= A && (a.logScreen("检测到首屏外节点次数: " + ++m + "次, 节点内容为:", i), m >= 15 && (a.logScreen("检测到首屏外mutation达到 15 次, 停止DOM变化监听"), s.mutaObserverStop())), document && document.querySelectorAll && i.forEach((function(t) {
                                                        s.addEventToStopObserver(t)
                                                    }))
                                                }
                                            }
                                        })))
                                    }), 0)
                                }
                            }, {
                                key: "recordDomWeight",
                                value: function(t) {
                                    var e = document && document.querySelector("body");
                                    if (e) {
                                        var i = 0;
                                        i += this.calcuDomWeight(e, 1, !1), I.push({
                                            score: i,
                                            time: t
                                        })
                                    }
                                }
                            }, {
                                key: "calcuDomWeight",
                                value: function(t, e, i) {
                                    var s = 0,
                                        n = t.tagName || "";
                                    if (n && -1 === R.indexOf(n)) {
                                        var a = t.children,
                                            o = a ? a.length : 0;
                                        if (o > 0)
                                            for (var r = o - 1; r >= 0; r--) s += this.calcuDomWeight(a[r], e + 1, s > 0);
                                        if (s <=
                                            0 && !i) {
                                            var u = t.style || {},
                                                h = u.visibility,
                                                d = u.display;
                                            if ("hidden" === h || "none" === d) return 0;
                                            if (!P(t.getBoundingClientRect && t.getBoundingClientRect())) return 0
                                        }
                                        if (s += 1, 0 === o) {
                                            var c = t.childNodes;
                                            if (c && c.length)
                                                for (var p = 0; p < c.length; p++) {
                                                    var l = c[p];
                                                    if ("" !== (l && 3 === l.nodeType ? l.nodeValue.trim() : "")) {
                                                        s += 1;
                                                        break
                                                    }
                                                }
                                        }
                                    }
                                    return s
                                }
                            }, {
                                key: "mutaObserverStop",
                                value: function() {
                                    if (this.observer && this.observer.disconnect) try {
                                        this.observer.disconnect(), this.observer = null;
                                        var t = this.cfgManager.get("page");
                                        ! function(t, e) {
                                            if (c) return;
                                            (function(t) {
                                                var e = [];
                                                t && (a.logScreen("筛选后的有效DOM变更:", u), u.forEach((function(t) {
                                                    var i = t.nodes,
                                                        s = t.startTime,
                                                        n = [];
                                                    if (i.forEach((function(t) {
                                                            var e = t.style || {},
                                                                i = e.visibility,
                                                                s = e.display;
                                                            if ("hidden" !== i && "none" !== s) {
                                                                var a = t.getBoundingClientRect && t.getBoundingClientRect();
                                                                P(a) && n.push({
                                                                    node: t,
                                                                    rect: a
                                                                })
                                                            }
                                                        })), n.length) {
                                                        var o = n.reduce((function(t, e) {
                                                            return t + function t(e, i) {
                                                                var s = e.node,
                                                                    n = e.rect,
                                                                    a = s.style || {},
                                                                    o = a.visibility,
                                                                    r = a.display;
                                                                if ("hidden" === o || "none" === r) return 0;
                                                                if (3 === s.nodeType) {
                                                                    if (s.textContent) {
                                                                        var u = s.textContent.charCodeAt(0);
                                                                        if (10 !== u && 13 !== u) return i + 1
                                                                    }
                                                                    return 0
                                                                }
                                                                if (s.childNodes && s.childNodes.length) {
                                                                    var h = M.call(s.childNodes, 0).reduce((function(e, s) {
                                                                        return e + t({
                                                                            node: s
                                                                        }, i + 0)
                                                                    }), 0);
                                                                    if (h > 0) return h + 1
                                                                }
                                                                var d = n || {
                                                                        width: s.clientWidth,
                                                                        height: s.clientHeight
                                                                    },
                                                                    c = d.width,
                                                                    p = d.height;
                                                                return c > 0 && p > 0 ? i + 1 : 0
                                                            }(e, 0)
                                                        }), 0);
                                                        o && (e.push({
                                                            score: o,
                                                            startTime: s,
                                                            validNodes: n
                                                        }), a.logScreen("有效的首屏内新增节点:", n, "新增节点的权重和发生时间:", o, s))
                                                    }
                                                })));
                                                u && u.length && (l = Math.max.apply(Math, u.map((function(t) {
                                                    return t.startTime || 0
                                                }))));
                                                c = !0, u = [];
                                                var i = function(t) {
                                                    if (!t || !t.length) return 0;
                                                    var e = t.reduce((function(t, e) {
                                                        var i = t[t.length - 1];
                                                        return i && e.startTime - i.startTime < 1 ? i.score += e.score : t.push({
                                                            score: e.score,
                                                            startTime: e.startTime,
                                                            nodes: e.validNodes
                                                        }), t
                                                    }), []);
                                                    a.logScreen("合并后的首屏内新增节点权重记录:", e);
                                                    var i = e.reduce((function(t, e) {
                                                            return !t || e.score >
                                                                Math.min(t.score, 3) ? e : t
                                                        }), null),
                                                        s = N(i && i.startTime || 0);
                                                    window && window.Owl && (window.Owl.fstInfo = {
                                                        domFST: s,
                                                        decisiveNode: i && i.nodes && i.nodes[0] ? i.nodes[0].node : null
                                                    });
                                                    return s
                                                }(e);
                                                f = {
                                                    FST: i,
                                                    FCP: _ || 0
                                                }, a.logScreen("最终DOM首屏时间的计算结果为: ", i)
                                            })(t),
                                            function(t) {
                                                if (!t) return;
                                                var e = function(t) {
                                                    if (t && t.length)
                                                        for (var e = 0; e <
                                                            t.length; e++) t[e].time >
                                                            l ? (t.splice(e, 1), e--) : t[e + 1] && t[e].score >= t[e + 1].score && (t.splice(e + 1, 1), e--);
                                                    return t
                                                }(I);
                                                if (e && e.length) {
                                                    a.logScreen("[FST90] DOM权重集合:", e);
                                                    for (var i = e[e.length - 1] ? e[e.length - 1].score : 0, s = .9 * i, n = .8 * i, o = .85 * i, u = .95 * i, h = 0; h <
                                                        e.length; h++) {
                                                        var d = N(e[h].time);
                                                        if (!T && e[h].score > = s && (T = d), !v && e[h].score >= n && (v = d), !E && e[h].score >= o && (E = d), !y && e[h].score >= u && (y = d), T && v && E && y) break
                                                    }
                                                    a.logScreen("FST90的计算结果为: ", T);
                                                    var c = {
                                                        FST90: T || 0,
                                                        FST80: v || 0,
                                                        FST85: E || 0,
                                                        FST95: y || 0
                                                    };
                                                    f = f ? r(f, c) : c
                                                }
                                                f && void 0 !== f.FST && (!T || T > f.FST) && (f.FST90 = f.FST)
                                            }(e)
                                        }(t.sensoryIndex || t.manualReportFST, t.getFirstScreenTime90), this.resetTimer(!1)
                                    } catch (t) {
                                        console.log("observer disconnect err")
                                    }
                                }
                            }, {
                                key: "perfObserverStop",
                                value: function() {
                                    try {
                                        this.perfObserver && this.perfObserver.disconnect && (this.perfObserver.disconnect(), this.perfObserver = null), p = !0
                                    } catch (t) {
                                        console.log("perfObserver disconnect err")
                                    }
                                }
                            }, {
                                key: "addEventToStopObserver",
                                value: function(t) {
                                    var e = this;
                                    M.call(t.querySelectorAll("[interactive]"), 0).forEach((function(t) {
                                        var i = t.getAttribute("interactive") || "click";
                                        t.addEventListener(i, (function s() {
                                            e.mutaObserverStop(), t.removeEventListener(i, s)
                                        }))
                                    }))
                                }
                            }, {
                                key: "interactToStopObserver",
                                value: function() {
                                    var t = this;
                                    if (!c) {
                                        var e = function() {
                                                c || (a.logScreen("onload后响应到用户交互事件, 停止DOM变化监听"), t.mutaObserverStop()), i()
                                            },
                                            i = function() {
                                                document.removeEventListener("click", e), document.removeEventListener("wheel", e), document.removeEventListener("touchmove", e)
                                            };
                                        document.addEventListener("click", e), document.addEventListener("wheel", e), document.addEventListener("touchmove", e)
                                    }
                                }
                            }]), t
                        }();

                    function P(t) {
                        var e = t || {},
                            i = e.width,
                            s = e.height,
                            n = e.top,
                            a = e.right,
                            o = e.bottom,
                            r = e.left;
                        return i > 0 && s > 0 && o > 0 && n <
                            A && a >
                            0 && r <
                            O
                    }
                    t.exports = C
                },
                1013: (t, e, i) => {
                    "use strict";
                    var s = function() {
                        function t(t, e) {
                            for (var i = 0; i <
                                e.length; i++) {
                                var s = e[i];
                                s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                            }
                        }
                        return function(e, i, s) {
                            return i && t(e.prototype, i), s && t(e, s), e
                        }
                    }();
                    var n = i(170),
                        a = i(6107),
                        o = i(8345),
                        r = i(1081).i,
                        u = i(4520),
                        h = i(6209),
                        d = i(1765),
                        c = Number.parseInt || window.parseInt,
                        p = "page",
                        l = function(t) {
                            var e = Math && Math.round ? Math.round(t) : t;
                            return c(e)
                        },
                        f = function() {
                            function t(e, i) {
                                ! function(t, e) {
                                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                }(this, t), this.noCache = !1, this.points = [], this.pointsCustom = [], this.cfgManager = e, this.errManager = i
                            }
                            return s(t, [{
                                key: "setUserReady",
                                value: function() {
                                    this.cfgManager.set({
                                        page: {
                                            auto: !0
                                        }
                                    })
                                }
                            }, {
                                key: "getUserReady",
                                value: function() {
                                    return this.cfgManager.get(p).auto
                                }
                            }, {
                                key: "setReady",
                                value: function() {
                                    this.isReady = !0
                                }
                            }, {
                                key: "getReady",
                                value: function() {
                                    return this.isReady
                                }
                            }, {
                                key: "getPerformaceTiming",
                                value: function() {
                                    return {
                                        perf: window.performance && window.performance.timing,
                                        paint: window.performance && window.performance.getEntriesByType && window.performance.getEntriesByType("paint")
                                    }
                                }
                            }, {
                                key: "getMainResourceTiming",
                                value: function() {
                                    var t = window.performance && window.performance.getEntriesByType && window.performance.getEntriesByType("resource"),
                                        e = this.cfgManager.get(p).isMainResource,
                                        i = [];
                                    try {
                                        if (!t) return;
                                        if ("function" == typeof e) {
                                            for (var s = 0; s < t.length; s++) {
                                                var n = t[s];
                                                e(n) && i.push(n)
                                            }
                                            return i
                                        }
                                        for (var a = 0; a < t.length; a++) {
                                            var o = t[a];
                                            "link" !== o.initiatorType && "script" !== o.initiatorType || i.push(o)
                                        }
                                        var r = this.cfgManager.get(p).mainResourceNumber;
                                        return i.length <= r ? i : i.splice(0, r)
                                    } catch (t) {
                                        u.ignore(t)
                                    }
                                }
                            }, {
                                key: "sensoryObserver",
                                value: function() {
                                    this.firstScreenManager = new d(this.cfgManager), this.firstScreenManager.mutaObserver()
                                }
                            }, {
                                key: "parsePageTimeWithDefer",
                                value: function() {
                                    var t = this;
                                    setTimeout((function() {
                                        try {
                                            var e = t.cfgManager.get(p);
                                            e && (e.sensoryIndex || e.getFirstScreenTime90) ? t.firstScreenManager.getSensoryIndex((function(e) {
                                                t.parsePageTime(e), t.parseFSTRatioTime(e), t.parseFirstScreenPerf(e)
                                            })) : t.parsePageTime()
                                        } catch (e) {
                                            t.parsePageTime()
                                        }
                                    }), 0)
                                }
                            }, {
                                key: "parsePageTime",
                                value: function(t) {
                                    var e = this.getPerformaceTiming(),
                                        i = e.perf,
                                        s = e.paint;
                                    if (!i) return this.setReady();
                                    var n = i.navigationStart,
                                        a = {
                                            unloadEventStart: 1,
                                            unloadEventEnd: 2,
                                            redirectStart: 3,
                                            redirectEnd: 4,
                                            fetchStart: 5,
                                            domainLookupStart: 6,
                                            domainLookupEnd: 7,
                                            connectStart: 8,
                                            connectEnd: 9,
                                            requestStart: 10,
                                            responseStart: 11,
                                            responseEnd: 12,
                                            domLoading: 13,
                                            domInteractive: 14,
                                            domContentLoadedEventStart: 15,
                                            domContentLoadedEventEnd: 16,
                                            domComplete: 17,
                                            loadEventStart: 18,
                                            loadEventEnd: 19
                                        },
                                        o = void 0;
                                    for (o in i) 0 === i[o] ? this.points[a[o]] = i[o] : this.points[a[o]] = i[o] - n;
                                    if (this.points[20] = i.domainLookupEnd - i.domainLookupStart, this.points[21] = i.connectEnd - i.connectStart, this.points[22] = i.responseEnd - i.requestStart, s && s.length) try {
                                        for (var r = void 0, h = void 0, d = 0; d < s.length; d++) {
                                            var l = s[d];
                                            "first-paint" === l.name ? r = c(l.startTime) : "first-contentful-paint" === l.name && (h = c(l.startTime))
                                        }
                                        r && h && (this.points[23] = r, this.points[24] = h, t && (t.FST && t.FST >
                                            h ? this.points[25] = t.FST : this.points[25] = h, this.points[26] = t.FCP || h))
                                    } catch (t) {
                                        u.ignore(t)
                                    } else t && (this.points[25] = t.FST || 0, this.points[26] = t.FCP || this.points[15]);
                                    window && window.Owl && window.Owl.fstInfo && (window.Owl.fstInfo.FST = this.points[25]);
                                    for (var f = 0; f <
                                        this.points.length; f++) isNaN(this.points[f]) && (this.points[f] = 0);
                                    var _ = this.getMainResourceTiming();
                                    if (_) {
                                        for (var g = this.noCache, m = 0; m < _.length; m++) {
                                            var S = _[m];
                                            if (void 0 !== S.transferSize) 0 !== S.transferSize && (g = !0);
                                            else if (void 0 !== S.duration) {
                                                var I = this.cfgManager.get(p).timeThreshold;
                                                S.duration > I && (g = !0)
                                            }
                                        }
                                        this.noCache = g
                                    }
                                    this.setReady(), this.report()
                                }
                            }, {
                                key: "parseFSTRatioTime",
                                value: function(t) {
                                    if (this.cfgManager.get(p).getFirstScreenTime90 && t) {
                                        this.points[27] = t.FST90 || 0, this.points[28] = t.FST80 || 0, this.points[29] = t.FST85 || 0, this.points[30] = t.FST95 || 0;
                                        for (var e = 0; e < this.points.length; e++) isNaN(this.points[e]) && (this.points[e] = 0);
                                        this.report()
                                    }
                                }
                            }, {
                                key: "push",
                                value: function(t) {
                                    this.onPush && this.onPush(t), t && "number" == typeof t.position && (t.position < 0 || t.position > 31 || (this.pointsCustom[t.position] = t.duration, this.report()))
                                }
                            }, {
                                key: "clearTimeout",
                                value: function(t) {
                                    function e() {
                                        return t.apply(this, arguments)
                                    }
                                    return e.toString = function() {
                                        return t.toString()
                                    }, e
                                }((function() {
                                    clearTimeout(this.timeout), this.timeout = void 0
                                }))
                            }, {
                                key: "report",
                                value: function(t) {
                                    var e = this,
                                        i = this.cfgManager;
                                    if (this.getReady() && this.getUserReady() && (this.points.length || this.pointsCustom.length) && !(Math.random() > i.get(p).sample)) {
                                        this.onSubmit && this.onSubmit(this.points, this.pointsCustom);
                                        try {
                                            this.timeout ? this.clearTimeout() : this.pendingAjax && this.pendingAjax.abort && this.pendingAjax.abort()
                                        } catch (t) {
                                            u.ignore(t)
                                        }
                                        var s = function() {
                                                if (e.clearTimeout(), e.points.length || e.pointsCustom.length) {
                                                    var t = i.getApiPath(p),
                                                        s = a.stringify(t),
                                                        u = i.getExtension(),
                                                        h = o({
                                                            project: i.get("project"),
                                                            pageurl: encodeURIComponent(i.get("pageUrl")),
                                                            speed: encodeURIComponent(e.points.join("|")),
                                                            customspeed: encodeURIComponent(e.pointsCustom.join("|")),
                                                            timestamp: +new Date,
                                                            sdk: r,
                                                            noCache: e.noCache ? "true" : "false",
                                                            pageId: i.get("pageId"),
                                                            unionId: i.getExtension("unionId")
                                                        }, u);
                                                    s = a.stringify(s, h), e.pendingAjax = n({
                                                        method: "GET",
                                                        url: s,
                                                        success: function() {
                                                            e.points = [], e.pointsCustom = [], e.pendingAjax = void 0
                                                        },
                                                        xhrRewritten: !!i.get("autoCatch").ajax
                                                    })
                                                }
                                            },
                                            h = i.get(p).delay || 0;
                                        t ? s() : h >= 0 && (this.timeout = setTimeout((function() {
                                            s()
                                        }), h))
                                    }
                                }
                            }, {
                                key: "parseFirstScreenPerf",
                                value: function(t) {
                                    var e = this,
                                        i = this.cfgManager,
                                        s = i.get(p),
                                        r = s.delay || 0;
                                    setTimeout((function() {
                                        if (!0 === s.fstPerfAnalysis && t && t.FST) {
                                            var r = window.performance && window.performance.getEntriesByType && window.performance.getEntriesByType("resource");
                                            if (r && r.length) {
                                                var u = c(t.FST || 0),
                                                    h = Math.random(),
                                                    d = h < s.fstPerfSample,
                                                    p = u < 2e3 ? .05 : .1,
                                                    f = !0 === s.logSlowView && u > 1e3 && h < p;
                                                if (d) {
                                                    var _ = {
                                                            picCount: 0,
                                                            picSize: 0,
                                                            jsCount: 0,
                                                            jsSize: 0,
                                                            cssCount: 0,
                                                            cssSize: 0,
                                                            ajaxCount: 0
                                                        },
                                                        g = {
                                                            js: {},
                                                            css: {},
                                                            img: {},
                                                            ajax: {}
                                                        },
                                                        m = /\.js$/i,
                                                        S = /\.css$/i,
                                                        I = /\.(png|jpg|jpeg|gif|webp|ico|bmp|tiff|svg)$/i,
                                                        T = /^(https?:\/\/[^/\r\n]+)(\/[^\r\n]*)?$/,
                                                        v = void 0,
                                                        E = void 0,
                                                        y = void 0,
                                                        R = void 0,
                                                        M = void 0,
                                                        N = void 0,
                                                        U = void 0,
                                                        A = void 0,
                                                        O = void 0;
                                                    try {
                                                        r.filter((function(t) {
                                                            return t.fetchStart && t.fetchStart < u
                                                        })).forEach((function(t) {
                                                            var e = "",
                                                                i = t.name || "",
                                                                s = t.initiatorType || "",
                                                                n = t.transferSize || 0;
                                                            if (i && s && ("img" === s || i.match(I) ? (e = "img", _.picCount++, _.picSize += n) : "script" === s || "link" === s && i.match(m) ? (e = "js", _.jsCount++, _.jsSize += n) : "css" === s || "link" === s && i.match(S) ? (e = "css", _.cssCount++, _.cssSize += n) : "xmlhttprequest" !== s && "fetch" !== s && "beacon" !== s || (e = "ajax", _.ajaxCount++)), f && e && i) {
                                                                var a = i.match(T);
                                                                if (a && a[1] && a[2]) {
                                                                    var o = t.decodedBodySize || 0,
                                                                        r = t.duration || 0;
                                                                    v = l(t.responseEnd - t.fetchStart), E = l(t.fetchStart), y = l(t.domainLookupStart - t.fetchStart), R = l(t.domainLookupEnd - t.domainLookupStart), M = l(t.connectEnd - t.connectStart), N = l(t.connectEnd - t.secureConnectionStart), U = l(t.responseStart - t.requestStart), A = l(t.responseEnd - t.responseStart), O = n + "," + v + "," + E + "," + R + "," + M + "," + N + "," + U + "," + A + "," + y + "," + (n > 0 || !(o > 0 || r < 30) ? 0 : 1), g[e][a[1]] instanceof Array ? g[e][a[1]].push([a[2], O]) : g[e][a[1]] = [
                                                                        [a[2], O]
                                                                    ]
                                                                }
                                                            }
                                                        }));
                                                        var C = a.stringify(i.getApiPath("fstInfo")),
                                                            P = o({
                                                                p: i.get("project"),
                                                                page: i.get("pageUrl"),
                                                                ts: Date.now(),
                                                                pageId: i.get("pageId"),
                                                                unionId: i.getExtension("unionId"),
                                                                respTime: u
                                                            }, _);
                                                        if (n({
                                                                type: "POST",
                                                                url: C,
                                                                header: {
                                                                    "Content-Type": "application/x-www-form-urlencoded"
                                                                },
                                                                data: "data=" + encodeURIComponent(JSON.stringify(P))
                                                            }), f) {
                                                            var L = a.stringify(i.getApiPath("fstLog")),
                                                                b = {
                                                                    p: i.get("project"),
                                                                    page: i.get("pageUrl"),
                                                                    ts: Date.now(),
                                                                    pageId: i.get("pageId"),
                                                                    unionId: i.getExtension("unionId"),
                                                                    respTime: u,
                                                                    content: JSON.stringify(g)
                                                                };
                                                            n({
                                                                type: "POST",
                                                                url: L,
                                                                header: {
                                                                    "Content-Type": "application/x-www-form-urlencoded"
                                                                },
                                                                data: "data=" + encodeURIComponent(JSON.stringify(b))
                                                            })
                                                        }
                                                    } catch (t) {
                                                        e.errManager.reportSystemError(t)
                                                    }
                                                }
                                            }
                                        }
                                    }), r)
                                }
                            }, {
                                key: "manualReportFST",
                                value: function() {
                                    var t = this,
                                        e = this.cfgManager.get(p);
                                    if (!e.sensoryIndex && e.manualReportFST && !this.firstScreenManager && h.PerformanceNow()) {
                                        this.points = [], this.pointsCustom = [], window._Owl_ && window._Owl_.pageData && (window._Owl_.pageData = []);
                                        var i = c(performance.now());
                                        this.sensoryObserver(), setTimeout((function() {
                                            try {
                                                e && e.manualReportFST && t.firstScreenManager.getSensoryIndex((function(e) {
                                                    t.parseAsyncFST(e, i)
                                                }))
                                            } catch (t) {
                                                u.ignore(t)
                                            }
                                        }), 0)
                                    }
                                }
                            }, {
                                key: "parseAsyncFST",
                                value: function(t, e) {
                                    if (t) {
                                        var i = c(t.FST || 0) - e,
                                            s = c(t.FCP || 0) - e;
                                        i >
                                            0 && (this.points[25] = i, this.points[26] = s > 0 ? s : 0)
                                    }
                                    for (var n = 0; n <
                                        this.points.length; n++) isNaN(this.points[n]) && (this.points[n] = 0);
                                    this.setReady(), this.report()
                                }
                            }]), t
                        }();
                    t.exports = f
                },
                9084: (t, e, i) => {
                    "use strict";
                    var s = function() {
                        function t(t, e) {
                            for (var i = 0; i <
                                e.length; i++) {
                                var s = e[i];
                                s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                            }
                        }
                        return function(e, i, s) {
                            return i && t(e.prototype, i), s && t(e, s), e
                        }
                    }();
                    var n = i(170),
                        a = i(6107),
                        o = i(5147),
                        r = function() {
                            function t(e) {
                                ! function(t, e) {
                                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                }(this, t), this.cfgManager = e
                            }
                            return s(t, [{
                                key: "report",
                                value: function(t) {
                                    var e = this.cfgManager,
                                        i = e.getApiPath("pv"),
                                        s = e.getExtension(),
                                        r = a.stringify(i, {
                                            project: t && t.project || e.get("project"),
                                            pageurl: encodeURIComponent(t && t.pageUrl || e.get("pageUrl")),
                                            pageId: t && t.pageId || e.get("pageId"),
                                            timestamp: Date.now(),
                                            region: s && s.region || "",
                                            operator: s && s.operator || "",
                                            network: s && s.network || "",
                                            container: s && s.container || "",
                                            os: s && s.os || "",
                                            unionid: o("uuid") || o("unionid") || o("dpid") || o("_lxsdk_cuid") || ""
                                        });
                                    n({
                                        type: "POST",
                                        url: r,
                                        header: {
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        }
                                    })
                                }
                            }]), t
                        }();
                    t.exports = r
                },
                1868: (t, e, i) => {
                    "use strict";
                    var s = window,
                        n = s.XMLHttpRequest,
                        a = i(756),
                        o = i(4520);
                    t.exports = function() {
                        if (n && (!("_owl" in n) && (n._owl = !0, "file:" !== s.location.protocol))) {
                            var t = n.prototype.open,
                                e = n.prototype.send;
                            n.prototype.open = function(e, i) {
                                return this.url = i, this._startTime = +new Date, t.apply(this, arguments)
                            }, n.prototype.send = function() {
                                var t = this,
                                    i = "addEventListener",
                                    s = "onreadystatechange",
                                    n = function(e) {
                                        if (e) {
                                            var i = +new Date - t._startTime;
                                            if (e.duration = i, /catfront.(dianping|51ping).com/.test(t.url)) {
                                                var s = void 0;
                                                try {
                                                    -1 !== t.getAllResponseHeaders("content-type").indexOf("application/json") && (s = e.currentTarget.response, s = JSON.parse(s))
                                                } catch (t) {
                                                    o.ignore(t)
                                                }
                                                200 === e.currentTarget.status ? t.success && t.success(s) : t.fail && t.fail(s)
                                            } else a.trigger("ajaxCall", e)
                                        }
                                    };
                                if (i in this) this[i]("load", n), this[i]("error", n), this[i]("abort", n);
                                else {
                                    var r = this[s];
                                    this[s] = function(t) {
                                        4 === this.readyState && n(t), r && r.apply(this, arguments)
                                    }
                                }
                                return e.apply(this, arguments)
                            }
                        }
                    }
                },
                3702: (t, e, i) => {
                    "use strict";
                    var s = i(756),
                        n = i(1868);
                    t.exports = function(t) {
                        var e = t.cfgManager;
                        e.get("autoCatch").ajax && (n(), s.on("ajaxCall", (function() {
                            t.parseAjax.apply(t, arguments)
                        })));
                        var i = window.addEventListener || window.attachEvent;
                        e.get("autoCatch").resource && (document && "complete" === document.readyState ? t.handleResourceTiming.apply(t, arguments) : i("load", (function() {
                            t.handleResourceTiming.apply(t, arguments)
                        })), i("error", (function(e) {
                            e && t.handleResourceLoadError.apply(t, arguments)
                        }), !0))
                    }
                },
                6472: (t, e, i) => {
                    "use strict";
                    var s = function() {
                        function t(t, e) {
                            for (var i = 0; i <
                                e.length; i++) {
                                var s = e[i];
                                s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                            }
                        }
                        return function(e, i, s) {
                            return i && t(e.prototype, i), s && t(e, s), e
                        }
                    }();
                    var n = i(170),
                        a = i(6589),
                        o = i(1292),
                        r = i(756),
                        u = i(4520),
                        h = i(2684),
                        d = i(562),
                        c = i(5283),
                        p = i(6209),
                        l = "resource",
                        f = function(t) {
                            var e = t.split("//");
                            if (e && e.length >
                                1) return e[0] + "//" + e[1].split("/")[0] + "/images"
                        },
                        _ = function() {
                            function t(e, i) {
                                ! function(t, e) {
                                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                }(this, t), this.cfgManager = e, this.errManager = i, this.cache = [], this.entryCache = [], this.comboTimeout = 0, this.isSupportGetEntry = window.performance && void 0 !== window.performance.getEntries
                            }
                            return s(t, [{
                                key: "parseAjax",
                                value: function(t) {
                                    var e, i = void 0,
                                        s = void 0,
                                        n = void 0,
                                        a = void 0,
                                        r = void 0,
                                        c = void 0;
                                    try {
                                        i = t.type, s = t.currentTarget.responseURL || t.currentTarget.url, n = t.duration, a = t.total, r = t.currentTarget.status, c = this.getConnectType()
                                    } catch (t) {
                                        return t
                                    }
                                    if (void 0 !== n && !isNaN(n)) {
                                        d.log("[加载资源]: [类型]->AJAX [链接]->" + s), 0 === s.indexOf("//") ? s = h.getProtocol() + s : 0 === s.indexOf("/") && (s = h.getOrigin() + s);
                                        var p = "load" === i || "readystatechange" === i && 200 === r;
                                        r = (p ? 200 : 500) + "|", e = p ? "" : "from: xhr " + i;
                                        var l = this.cfgManager,
                                            f = !0;
                                        try {
                                            var _ = l.get("ignoreList").ajax;
                                            if (_)
                                                for (var g = 0; g <
                                                    _.length; g++) {
                                                    var m = _[g];
                                                    if (new RegExp(m).test(s)) return void(f = !1)
                                                }
                                        } catch (t) {
                                            u.ignore(t)
                                        }
                                        if (f) {
                                            var S = l.get("resourceReg"),
                                                I = l.get("devMode") || S instanceof RegExp && S.test(s),
                                                T = l.get("ajax");
                                            I ? !T.flag || n < T.duration ? this.pushApi({
                                                type: "ajax",
                                                connectType: c,
                                                resourceUrl: s,
                                                responsetime: n && n.toString() ? n.toString() : "0",
                                                responsebyte: a && a.toString() ? a.toString() : "0",
                                                statusCode: r,
                                                firstCategory: p ? "" : o.AJAX,
                                                logContent: e
                                            }) : (this.errManager.push({
                                                name: "TIMEOUT_AJAX",
                                                msg: "ajax请求时间超过设定" + s
                                            }, {
                                                category: o.AJAX
                                            }), d.log("[加载资源请求超时]: [类型]->AJAX [链接]->" + s)) : l.get("invalid").ajax && T.invalid && Math.random() < l.get("resource").sample && (this.errManager.push({
                                                name: "INVALID_AJAX",
                                                msg: s
                                            }, {
                                                category: o.AJAX
                                            }), d.log("[资源请求域名非法]: [类型]->AJAX [链接]->" + s))
                                        }
                                    }
                                }
                            }, {
                                key: "parseType",
                                value: function(t) {
                                    if (!t) return "";
                                    switch (t) {
                                        case "script":
                                            return "js";
                                        case "link":
                                            return "css";
                                        case "img":
                                            return "image";
                                        default:
                                            return t
                                    }
                                }
                            }, {
                                key: "filterResource",
                                value: function(t) {
                                    var e = !0,
                                        i = this.cfgManager.get("ignoreList").resource;
                                    try {
                                        for (var s = 0; s < i.length; s++) {
                                            var n = i[s];
                                            if (new RegExp(n).test(t)) {
                                                e = !1;
                                                break
                                            }
                                        }
                                        return e
                                    } catch (t) {
                                        return u.ignore(t), e
                                    }
                                }
                            }, {
                                key: "doHandlePerformanceEntry",
                                value: function(t) {
                                    if ((t = this.filterEntry(t)) && t.length) {
                                        for (var e = this.cfgManager, i = this.entryCache, s = 0; s < t.length; s++) {
                                            var n = t[s],
                                                a = n.name;
                                            if (!this.filterResource(a)) return;
                                            if (e.get("devMode") || e.get("resourceReg").test(a)) {
                                                i.push(a);
                                                var r = e.get("image"),
                                                    u = !1;
                                                if (("img" === n.initiatorType || "css" === n.initiatorType) && r.flag) {
                                                    var h = n.name,
                                                        d = r.filter;
                                                    if ("function" == typeof d && !d(h)) {
                                                        var c = n.transferSize,
                                                            p = n.duration,
                                                            l = void 0;
                                                        c && c >
                                                            1e3 * r.fileSize ? l = "IMAGE_SIZE_EXCEED" : p && p > r.duration && (l = "IMAGE_DURATION_EXCEED"), l && (this.errManager._pushResource({
                                                                content: h,
                                                                sec_category: l
                                                            }, {
                                                                category: o.RESOURCE
                                                            }), u = !0)
                                                    }
                                                }
                                                u || this.push({
                                                    type: this.parseType(n.initiatorType),
                                                    resourceUrl: "img" === n.initiatorType ? f(a) : a,
                                                    responsebyte: n.transferSize && n.transferSize.toString() ? n.transferSize.toString() : "0",
                                                    responsetime: n.duration && n.duration.toString() ? n.duration.toString() : "0",
                                                    statusCode: "200|",
                                                    logContent: "img" === n.initiatorType ? a : ""
                                                })
                                            }
                                        }
                                        this.report()
                                    }
                                }
                            }, {
                                key: "filterEntry",
                                value: function(t) {
                                    for (var e = [], i = 0; i <
                                        t.length; i++) {
                                        var s = t[i]; - 1 !== ["link", "script", "img", "css"].indexOf(s.initiatorType) && e.push(s)
                                    }
                                    return e
                                }
                            }, {
                                key: "observePerformanceChange",
                                value: function() {
                                    var t = this;
                                    if (!this.observePerformance) {
                                        this.observePerformance = !0;
                                        var e = this.cfgManager.get(l).disablePerformanceObserver || !1;
                                        if (p.PerformanceObserver() && !0 !== e) new window.PerformanceObserver((function(e) {
                                            try {
                                                var i = e.getEntries();
                                                t.doHandlePerformanceEntry(i)
                                            } catch (t) {
                                                u.ignore(t)
                                            }
                                        })).observe({
                                            entryTypes: ["resource"]
                                        });
                                        else r.on("ajaxCall", (function() {
                                            setTimeout((function() {
                                                var e = t.entryCache,
                                                    i = window.performance.getEntries();
                                                if (i.length !== e.length && i.length >
                                                    e.length) {
                                                    for (var s = [], n = 0; n <
                                                        i.length; n++) - 1 === e.indexOf(i[n].name) && s.push(i[n]);
                                                    e = i, t.doHandlePerformanceEntry(s)
                                                }
                                            }), 1500)
                                        }))
                                    }
                                }
                            }, {
                                key: "handleResourceTiming",
                                value: function() {
                                    try {
                                        if (this.isSupportGetEntry) {
                                            var t = window.performance.getEntries();
                                            this.doHandlePerformanceEntry(t), this.observePerformanceChange()
                                        }
                                    } catch (t) {
                                        this.errManager.reportSystemError(t)
                                    }
                                }
                            }, {
                                key: "handleResourceLoadError",
                                value: function(t) {
                                    var e = this,
                                        i = t.target || t.srcElement;
                                    try {
                                        if (!(i instanceof HTMLScriptElement || i instanceof HTMLLinkElement || i instanceof HTMLImageElement)) return;
                                        ! function() {
                                            var t = i.src || i.href,
                                                s = i.nodeName;
                                            s && (s = s.toLowerCase());
                                            var n = h.getHref();
                                            if (n && 0 !== n.indexOf(t)) {
                                                var a = t;
                                                if ("img" === s && (a = f(t)), a) e.filterResource(a) && (e.addLogan(s, t), e.isSupportGetEntry ? e.pushApi({
                                                    type: e.parseType(s),
                                                    resourceUrl: a,
                                                    responsetime: "0",
                                                    responsebyte: "0",
                                                    statusCode: "500|",
                                                    firstCategory: o.RESOURCE,
                                                    secondCategory: s,
                                                    logContent: t
                                                }) : e.errManager._pushResource({
                                                    category: o.RESOURCE,
                                                    sec_category: s,
                                                    content: t
                                                }))
                                            }
                                        }()
                                    } catch (t) {
                                        this.errManager.reportSystemError(t)
                                    }
                                }
                            }, {
                                key: "addLogan",
                                value: function(t, e) {
                                    d.log("[加载资源出错]: [类型]->" + t + " [链接]->" + e)
                                }
                            }, {
                                key: "_stringify",
                                value: function() {
                                    var t = this.cache;
                                    if (t && t.length) {
                                        for (var e = this.cfgManager.getExtension(), i = {}, s = [], n = ["region", "operator", "network", "container", "os", "unionId"], a = 0; a < n.length; a++) i[n[a]] = "";
                                        for (var o = 0; o < t.length; o++) {
                                            var r = t[o];
                                            s.push(r)
                                        }
                                        for (var u in i) i.hasOwnProperty(u) && (i[u] = e[u] || "");
                                        return i.infos = s, i
                                    }
                                }
                            }, {
                                key: "doBatchPush",
                                value: function(t) {
                                    t = this.parse(t);
                                    var e = new a(t);
                                    this.onPush && this.onPush(e);
                                    var i = !0,
                                        s = this.cfgManager;
                                    if ("function" == typeof s.get("onBatchPush")) {
                                        var n = s.get("onBatchPush");
                                        try {
                                            i = n(e)
                                        } catch (t) {
                                            u.ignore(t)
                                        }
                                    }
                                    i && this.cache.push(e)
                                }
                            }, {
                                key: "push",
                                value: function(t) {
                                    Math.random() >
                                        this.cfgManager.get(l).sample || (this.doBatchPush(t), this.cache.length >= 10 ? this.report(!0) : this.triggerReport())
                                }
                            }, {
                                key: "parse",
                                value: function(t) {
                                    return t.pageUrl || (t.pageUrl = this.cfgManager.get("pageUrl")), t.project || (t.project = this.cfgManager.get("project")), t.realUrl || (t.realUrl = location.href), t
                                }
                            }, {
                                key: "pushApi",
                                value: function(t) {
                                    var e = this.cfgManager;
                                    Math.random() > e.get(l).sampleApi || (this.doBatchPush(t), this.triggerReport())
                                }
                            }, {
                                key: "report",
                                value: function() {
                                    this.triggerReport(!0)
                                }
                            }, {
                                key: "triggerReport",
                                value: function(t) {
                                    var e = this;
                                    if (this.cache.length) {
                                        var i = this.cfgManager.get(l).delay;
                                        t ? this.send() : this.comboTimeout || -1 === i || (this.comboTimeout = setTimeout((function() {
                                            clearTimeout(e.comboTimeout), e.comboTimeout = 0, e.onSubmit && e.onSubmit(e.cache), e.send()
                                        }), i))
                                    }
                                }
                            }, {
                                key: "send",
                                value: function() {
                                    this.onSubmit && this.onSubmit(this.cache);
                                    var t = this._stringify();
                                    if (t) {
                                        var e = this.cfgManager.getApiPath(l);
                                        n({
                                            type: "POST",
                                            url: e + "&pageId =" + this.cfgManager.get("pageId"),
                                            data: JSON.stringify(t)
                                        }), this.cache = []
                                    }
                                }
                            }, {
                                key: "getConnectType",
                                value: function() {
                                    return -1 !== c.indexOf("https") ? "https" : "http"
                                }
                            }]), t
                        }();
                    t.exports = _
                },
                6589: t => {
                    "use strict";
                    var e = function() {
                        function t(t, e) {
                            for (var i = 0; i <
                                e.length; i++) {
                                var s = e[i];
                                s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                            }
                        }
                        return function(e, i, s) {
                            return i && t(e.prototype, i), s && t(e, s), e
                        }
                    }();
                    var i = ["resourceUrl", "connectType", "type", "timestamp", "requestbyte", "responsebyte", "responsetime", "project", "pageUrl", "realUrl", "statusCode", "firstCategory", "secondCategory", "logContent"],
                        s = ["resourceUrl", "connectType", "type", "timestamp", "requestbyte", "responsebyte", "responsetime", "project", "pageUrl", "realUrl", "statusCode", "firstCategory", "secondCategory", "logContent"],
                        n = function() {
                            function t(e) {
                                var s = this;
                                ! function(t, e) {
                                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                                }(this, t), i.forEach((function(t) {
                                    s[t] = e[t]
                                })), this.parse()
                            }
                            return e(t, [{
                                key: "update",
                                value: function(t) {
                                    for (var e in t) t.hasOwnProperty(e) && -1 !== i.indexOf(e) && (this[e] = t[e])
                                }
                            }, {
                                key: "parse",
                                value: function() {
                                    if (!this.timestamp) {
                                        var t = Date.now();
                                        this.timestamp = t.toString()
                                    }
                                    this.requestbyte || (this.requestbyte = "0"), this.responsebyte || (this.responsebyte = "0")
                                }
                            }, {
                                key: "stringify",
                                value: function() {
                                    var t = this;
                                    return s.map((function(e) {
                                        return t[e]
                                    })).join("\t")
                                }
                            }]), t
                        }();
                    t.exports = n
                },
                6209: (t, e, i) => {
                    "use strict";
                    var s = i(2684);
                    t.exports = {
                        PerformanceObserver: function() {
                            if (window.PerformanceObserver) try {
                                var t = /Chrome\/(\d+)/,
                                    e = s.getUserAgent();
                                if (!t.test(e)) return !0;
                                var i = e.match(t)[1];
                                if (parseInt(i) > 59) return !0
                            } catch (t) {}
                        },
                        MutationObserver: function() {
                            if (window.MutationObserver) try {
                                var t = -1,
                                    e = s.getUserAgent();
                                if (e.indexOf("compatible") > -1 && e.indexOf("MSIE") > -1 ? (new RegExp("MSIE (\\d+\\.\\d+);").test(e), t = parseFloat(RegExp.$1)) : e.indexOf("Trident") > -1 && e.indexOf("rv:11.0") > -1 && (t = 11), -1 === t || t > 11) return !0
                            } catch (t) {}
                        },
                        PerformanceNow: function() {
                            return !(!window.performance || !window.performance.now || "function" != typeof window.performance.now)
                        }
                    }
                },
                5147: t => {
                    "use strict";
                    t.exports = function(t) {
                        for (var e = t + "=", i = document.cookie.split(";"), s = 0; s <
                            i.length; s++) {
                            for (var n = i[s];
                                " " == n.charAt(0);) n = n.substring(1, n.length);
                            if (0 == n.indexOf(e)) return n.substring(e.length, n.length)
                        }
                        return null
                    }
                },
                5912: (t, e, i) => {
                    "use strict";
                    var s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                            return typeof t
                        } : function(t) {
                            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                        },
                        n = i(6151),
                        a = i(4520);
                    t.exports = {
                        isSupport: n(),
                        get: function() {
                            if (this.isSupport) {
                                var t = {};
                                try {
                                    var e = localStorage.getItem("owl_cache_v2");
                                    if (e) {
                                        var i = JSON.parse(e);
                                        "object" === (void 0 === i ? "undefined" : s(i)) && Object.keys(i).length && (t = i)
                                    }
                                    var n = localStorage.getItem("owl_cache");
                                    if (n) {
                                        var o = JSON.parse(n);
                                        o instanceof Array && (t["no-version"] = o)
                                    }
                                } catch (t) {
                                    a.ignore(t)
                                }
                                return t
                            }
                        },
                        add: function(t, e) {
                            if (this.isSupport) try {
                                if (t instanceof Array) {
                                    e = e || "no-version";
                                    var i = this.get();
                                    i[e] instanceof Array ? i[e] = t.concat(i[e]) : i[e] = t, localStorage.setItem("owl_cache_v2", JSON.stringify(i))
                                }
                            } catch (t) {
                                a.ignore(t)
                            }
                        },
                        clear: function() {
                            if (this.isSupport) try {
                                localStorage.removeItem("owl_cache")
                            } catch (t) {
                                a.ignore(t)
                            }
                        },
                        clearItem: function(t) {
                            if (this.isSupport) try {
                                var e = this.get();
                                "object" === (void 0 === e ? "undefined" : s(e)) && e.hasOwnProperty(t) && (delete e[t], Object.keys(e).length ? localStorage.setItem("owl_cache_v2", JSON.stringify(e)) : localStorage.removeItem("owl_cache_v2"), "no-version" === t && localStorage.removeItem("owl_cache"))
                            } catch (t) {
                                a.ignore(t)
                            }
                        }
                    }
                },
                756: t => {
                    "use strict";
                    t.exports = {
                        on: function(t, e) {
                            if (t) {
                                this._events_ || (this._events_ = {});
                                var i = this._events_;
                                i[t] || (i[t] = []), i[t].push(e)
                            }
                        },
                        trigger: function(t) {
                            var e = this._events_;
                            if (t && e && e[t])
                                for (var i = e[t], s = i.length, n = Array.prototype.slice.call(arguments, 1), a = 0; a <
                                    s; a++) i[a].apply(this, n)
                        }
                    }
                },
                8345: t => {
                    "use strict";
                    t.exports = function(t, e) {
                        var i = {},
                            s = void 0;
                        for (s in t) i[s] = t[s];
                        for (s in e) e.hasOwnProperty(s) && void 0 !== e[s] && (i[s] = e[s]);
                        return i
                    }
                },
                3208: (t, e, i) => {
                    "use strict";
                    var s = i(2249),
                        n = i(2684);
                    t.exports = function(t) {
                        if (!t.get("devMode")) {
                            t.addFilter("base", s.base);
                            var e = n.getUserAgent();
                            /MicroMessenger/.test(e) ? t.addFilter("weixin", s.weixin) : /dp\/com\.dianping/.test(e) && t.addFilter("dianping", s.dianping)
                        }
                    }
                },
                2249: t => {
                    "use strict";
                    t.exports = {
                        base: function(t) {
                            return !t.resourceUrl || /\.(dpfile|dianping|51ping|meituan|sankuai)\.(com|net)/.test(t.resourceUrl)
                        },
                        weixin: function(t) {
                            return !/(WeixinJSBridge|_WXJS|WebViewJavascriptBridge)/.test(t.sec_category)
                        },
                        dianping: function(t) {
                            return !/document.elementFromPoint/.test(t.sec_category)
                        }
                    }
                },
                2684: t => {
                    "use strict";
                    var e = {
                        getInstance: function() {
                            return window
                        },
                        getConstructor: function() {
                            return Window
                        },
                        getOrigin: function() {
                            var t = window.location.origin;
                            return t || (t = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "")), t
                        },
                        getProtocol: function() {
                            return window.location.protocol
                        },
                        getHref: function() {
                            return window.location.href
                        },
                        getUserAgent: function() {
                            return window.navigator.userAgent
                        },
                        getAppName: function() {
                            return window.navigator.appName
                        }
                    };
                    t.exports = e
                },
                4490: (t, e, i) => {
                    "use strict";
                    var s = i(4520);

                    function n(t) {
                        return t && "data:image" === t.slice(0, 10)
                    }

                    function a(t, e) {
                        if ("IMG" === t.nodeName.toUpperCase()) return t.getAttribute("data-srcset") || t.getAttribute("src");
                        var i = window.getComputedStyle(t);
                        return function(t, e) {
                            var i = void 0,
                                s = t.match(/url\(.*?\)/g);
                            if (s && s.length) {
                                var a = s[s.length - 1].replace(/^url\([\'\"]?/, "").replace(/[\'\"]?\)$/, "");
                                e.test(a) && !n(a) && (i = a)
                            }
                            return i
                        }(i.getPropertyValue("background-image") || i.getPropertyValue("background"), e)
                    }

                    function o(t, e) {
                        if (!t) return !1;
                        var i = t.getBoundingClientRect(),
                            s = i.top,
                            n = i.left,
                            a = i.right,
                            o = i.bottom;
                        if (!s && !o) return !1;
                        return (e ? document.getElementById(e).scrollTop : window.scrollY || window.pageYOffset) + s <
                            window.innerHeight && a >
                            0 && n <
                            window.innerWidth
                    }
                    t.exports = {
                        getImageTimingsInFirstScreen: function(t, e, i) {
                            if (!window.performance || !window.performance.getEntriesByType) return [];
                            var r = [];
                            try {
                                var u = window.performance.getEntriesByType("resource").filter((function(t) {
                                        return "img" === t.initiatorType || "css" === t.initiatorType
                                    })).map((function(t) {
                                        return {
                                            name: t.name.split(":")[1] || t.name,
                                            responseEnd: t.responseEnd,
                                            connectEnd: t.connectEnd,
                                            duration: t.duration
                                        }
                                    })),
                                    h = function(t, e, i) {
                                        var s, r, u = [];
                                        try {
                                            for (var h = document.createNodeIterator(document.body, NodeFilter.SHOW_ELEMENT, (function(e) {
                                                    if (e && e.getAttribute && !e.hasAttribute("" + t)) return NodeFilter.FILTER_ACCEPT
                                                }), !1), d = h.nextNode(); d;) {
                                                var c = a(d, e);
                                                c ? (o(d, i) && !n(c) && u.push((s = c, r = void 0, (r = document.createElement("a")).href = s, r.href)), d = h.nextNode()) : d = h.nextNode()
                                            }
                                        } catch (t) {
                                            console.log("getDomImgs err")
                                        }
                                        return u
                                    }(t, e, i).join("###");
                                return r = u.filter((function(t) {
                                    return -1 !== h.indexOf(t.name)
                                })).map((function(t) {
                                    var e = t.responseEnd || t.connectEnd + t.duration;
                                    return {
                                        name: t.name,
                                        time: e
                                    }
                                })).sort((function(t, e) {
                                    return e.time - t.time
                                })), s.logScreen("首屏内图片的加载时间", r), r.map((function(t) {
                                    return t.time
                                }))
                            } catch (t) {
                                r = []
                            }
                            return r
                        },
                        isInFirstScreen: o
                    }
                },
                4820: (t, e) => {
                    "use strict";
                    var i = [];
                    e.v = function(t, e) {
                        if (~i.indexOf(t)) e();
                        else {
                            var s = document.createElement("script");
                            s.src = t, s.onload = function() {
                                i.push(t), e()
                            }, document.getElementsByTagName("head")[0].appendChild(s)
                        }
                    }
                },
                562: (t, e, i) => {
                    "use strict";
                    var s = i(4820).v,
                        n = void 0,
                        a = !1;
                    t.exports = {
                        queue: [],
                        ready: function() {
                            var t = this,
                                e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                i = e.LoganAPI,
                                o = e.pageUrl,
                                r = e.project,
                                u = e.loganConfig;
                            a = !0;
                            var h = function() {
                                for (u && (n = n.config(u)), n.log("[新项目]: 项目-> " + r + " 对应的页面-> " + o); t.queue.length;) {
                                    var e = t.queue.shift();
                                    n.log(e)
                                }
                            };
                            if (i) n = i, h();
                            else try {
                                window && window.Logan ? (n = window.Logan, h()) : s("//www.dpfile.com/app/dp-logan-web/logan_1.12.16.js", (function() {
                                    n = window.Logan, h()
                                }))
                            } catch (t) {
                                console.log("logan 加载失败")
                            }
                        },
                        log: function(t) {
                            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            if (a) {
                                var i = "owl";
                                e.noType && (i = "owl"), n ? n.log(t, i) : this.queue.push(t)
                            }
                        }
                    }
                },
                4520: t => {
                    "use strict";
                    t.exports = {
                        devMode: !1,
                        setDebug: function() {
                            this.devMode = !0
                        },
                        ignore: function() {
                            window.Owl && window.Owl.debugLog && (window.console.log("【OWL日志:】"), window.console.log && window.console.log.apply(window.console, arguments))
                        },
                        log: function() {
                            this.devMode && console.log.apply(console, arguments)
                        },
                        logScreen: function() {
                            window.Owl && window.Owl.cfgManager.get("page") && window.Owl.cfgManager.get("page").logFirstScreen && console.log.apply(console, arguments)
                        }
                    }
                },
                6151: t => {
                    "use strict";
                    t.exports = function() {
                        try {
                            localStorage.setItem("owl_local_test", 1), localStorage.removeItem("owl_local_test")
                        } catch (t) {
                            return !1
                        }
                        return !0
                    }
                },
                2651: t => {
                    "use strict";

                    function e() {
                        return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
                    }
                    t.exports = function() {
                        return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e()
                    }
                },
                5029: t => {
                    "use strict";
                    t.exports = ["Baiduspider", "googlebot", "360Spider", "haosouspider", "YoudaoBot", "Sogou News Spider", "Yisouspider", "Googlebot"]
                },
                6107: t => {
                    "use strict";
                    t.exports = {
                        stringify: function(t, e) {
                            if (!e) return t;
                            var i = [];
                            for (var s in e) e.hasOwnProperty(s) && i.push(s + "=" + e[s]);
                            return ~t.indexOf("?") ? t + "&" + i.join("&") : t + "?" + i.join("&")
                        },
                        replaceParam: function(t, e, i) {
                            if (!t || !e) return t;
                            try {
                                var s = new RegExp("(&" + e + "=)([^\\?&]+)(&?)");
                                if (s.test(t)) t = i ? t.replace(s, "$1" + i + "$3") : t.replace(s, "$3");
                                else if (i) {
                                    var n = {};
                                    n[e] = i, t = this.stringify(t, n)
                                }
                            } catch (t) {}
                            return t
                        }
                    }
                },
                7237: (t, e, i) => {
                    "use strict";
                    var s = i(170),
                        n = i(6107),
                        a = i(1081).i,
                        o = i(4520);
                    t.exports = function(t, e) {
                        if (t && e && !(Math.random() > .01)) {
                            if (! function(t, e) {
                                    try {
                                        t = t.split(".").map((function(t) {
                                            return parseInt(t)
                                        })), e = e.split(".").map((function(t) {
                                            return parseInt(t)
                                        }));
                                        return (t[0] !== e[0] ? t[0] - e[0] : t[1] !== e[1] ? t[1] - e[1] : t[2] - e[2]) >= 0
                                    } catch (t) {
                                        return o.ignore(t), !1
                                    }
                                }(e.cfgManager.get("version"), a)) {
                                var i = {
                                        v: 1,
                                        rate: .01,
                                        project: t,
                                        version: "v_" + a,
                                        pageurl: encodeURIComponent(window.location.href),
                                        count: 1
                                    },
                                    r = e.cfgManager.url + "/api/version";
                                r = n.stringify(r, i), setTimeout((function() {
                                    s({
                                        type: "GET",
                                        url: r
                                    })
                                }), 1500)
                            }
                        }
                    }
                },
                170: (t, e, i) => {
                    "use strict";
                    var s = i(2684),
                        n = function() {};
                    t.exports = function(t) {
                        if (t) {
                            var e = s.getUserAgent(),
                                i = -1 !== s.getAppName().indexOf("Microsoft Internet Explorer") && (-1 !== e.indexOf("MSIE 8.0") || -1 !== e.indexOf("MSIE 9.0")) && window.XDomainRequest,
                                a = void 0;
                            (a = i ? new XDomainRequest : new XMLHttpRequest).open(t.type || "GET", t.url, !0), a.success = t.success || n, a.fail = t.fail || n;
                            var o = function(e) {
                                e && /catfront.(dianping|51ping).com/.test(t.url) && (200 === e.currentTarget.status ? a.success && a.success() : a.fail && a.fail())
                            };
                            if (!1 === t.xhrRewritten && !i)
                                if ("addEventListener" in a) a.addEventListener("load", o), a.addEventListener("error", o), a.addEventListener("abort", o);
                                else {
                                    var r = a.onreadystatechange;
                                    a.onreadystatechange = function(t) {
                                        4 === this.readyState && o(t), r && r.apply(this, arguments)
                                    }
                                } if ("POST" === t.type) {
                                if (t.header && !i)
                                    for (var u in t.header) t.header.hasOwnProperty(u) && a.setRequestHeader(u, t.header[u]);
                                a.send(t.data)
                            } else a.send();
                            return a
                        }
                    }
                },
                7662: function(t) {
                    t.exports = function() {
                        "use strict";

                        function t() {
                            return window.XMLHttpRequest
                        }

                        function e(e, i) {
                            var s = new(t());
                            return s.open("post", e, !0), s.timeout = d, s.setRequestHeader("Content-Type", i), s
                        }

                        function i(t, i, s) {
                            if (c()) {
                                var n = e(t, "text/plain");
                                n.onreadystatechange = function() {
                                    if (4 === n.readyState) {
                                        var t = n.status;
                                        n.onreadystatechange = null, s(t >= 200 && t <
                                            400 ? null : new Error("response status >= 400"))
                                    }
                                }, n.send(JSON.stringify(i, (function(t, e) {
                                    if ("string" != typeof t || 0 !== t.indexOf("_")) return e
                                }))), n.onerror = function() {
                                    n.abort()
                                }
                            } else s(new Error("no xhr method"))
                        }

                        function s() {}

                        function n() {
                            return +Date.now()
                        }

                        function a() {
                            return n().toString()
                        }

                        function o(t) {
                            return t ? (t ^ 16 * Math.random() >
                                >
                                t / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, o)
                        }

                        function r() {
                            for (var t = Math.random().toString().slice(2, 6); t.length <
                                5;) t += "0";
                            return t
                        }

                        function u(t) {
                            function e() {
                                t((function(t) {
                                    t && a-- >
                                        0 ? setTimeout(e, o) : i.apply(null, arguments)
                                }))
                            }
                            var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s,
                                n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                                a = void 0,
                                o = void 0;
                            "number" == typeof n || "string" == typeof n ? (a = n, o = l) : (a = n.times || p, o = n.interval || l), e()
                        }

                        function h(t, e, i) {
                            t.addEventListener ? t.addEventListener(e, i, !1) : t.attachEvent ? t.attachEvent("on" + e, i) : t["on" + e] = i
                        }
                        var d = 5e3,
                            c = function() {
                                var e = t(),
                                    i = e && "withCredentials" in e.prototype;
                                return function() {
                                    return i
                                }
                            }(),
                            p = 3,
                            l = 3500,
                            f = {
                                iOS: /(iphone|ipad)/i,
                                Win: /windows nt/i,
                                Android: /android/i,
                                Mac: /mac os x/i,
                                Linux: /linux/i
                            },
                            _ = function(t, e) {
                                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                            },
                            g = function() {
                                function t(t, e) {
                                    for (var i = 0; i <
                                        e.length; i++) {
                                        var s = e[i];
                                        s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
                                    }
                                }
                                return function(e, i, s) {
                                    return i && t(e.prototype, i), s && t(e, s), e
                                }
                            }(),
                            m = ("https:" === window.location.protocol ? "https:" : "http:") + "//dreport.meituan.net",
                            S = function() {
                                var t = window.navigator.userAgent,
                                    e = {},
                                    i = "";
                                for (var s in f)
                                    if (f[s].test(t)) {
                                        e.os = s, e.pt = -1 === ["iOS", "Android"].indexOf(s) ? "web" : s;
                                        break
                                    } return (i = t.match(/msie ([\d.]+)/i)) && !/opera/i.test(t) ? e.ren = "IE" : (i = t.match(/firefox\/([\d.]+)/i)) ? e.ren = "Firefox" : (i = t.match(/chrome\/([\d.]+)/i)) && /webkit/i.test(t) && /mozilla/i.test(t) ? e.ren = "Chrome" : (i = t.match(/opera.([\d.]+)/)) ? e.ren = "Opera" : !/webkit/i.test(t) || /chrome/i.test(t) && /webkit/i.test(t) && /mozilla/i.test(t) || !(i = t.match(/version\/([\d.]+).*safari/i)) ? e.ren = "Other" : e.ren = "Safari", e.rev = i ? i[1] : "", e
                            }(),
                            I = {
                                lo: "dev",
                                de: "dev",
                                te: "dev",
                                st: "st",
                                pr: "prod",
                                on: "prod"
                            };
                        return function() {
                            function t() {
                                var e = arguments.length >
                                    0 && void 0 !== arguments[0] ? arguments[0] : "xm_sdk_report",
                                    s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                                _(this, t), this.comboSize = n.comboSize || 5, this.reportUrl = n.reportUrl || m, this.useCombo = void 0 === n.useCombo || n.useCombo, this.serviceid = void 0 === n.serviceid ? 1 : n.serviceid, this.maxSendInterval = void 0 === n.maxSendInterval ? 2e3 : n.maxSendInterval, this.forceSendInterval = void 0 === n.forceSendInterval ? 3e4 : n.forceSendInterval, this.sendMethod = n.sendMethod || i, this.sendedAt = 0, this.isOnLine = window.navigator.onLine, this.category = e, this.sendData = {
                                    category: e,
                                    ai: 1,
                                    pt: S.pt,
                                    os: S.os,
                                    pv: "",
                                    events: [],
                                    ren: S.ren,
                                    rev: S.rev,
                                    sv: "",
                                    av: "",
                                    cid: 0,
                                    build: "",
                                    an: "daxiang",
                                    env: "prod",
                                    did: "",
                                    uid: "",
                                    traceid: "",
                                    chid: ""
                                }, this.labelMap = {}, this.set(s), this._unconsumedData = [], this._consumeLocalStorage(), this._bindEvent(), this._forceSendTimeout = void 0, this._forceSendReport()
                            }
                            return g(t, [{
                                key: "_consumeLocalStorage",
                                value: function() {
                                    var t = this;
                                    if (localStorage.hasOwnProperty(this.category)) try {
                                        var e = JSON.parse(localStorage.getItem(this.category));
                                        Array.isArray(this._unconsumedData) || (this._unconsumedData = []), this._unconsumedData.push(e), localStorage.removeItem(this.category), this.sendReport({
                                            force: 1
                                        }), this._unconsumedData.length && this.sendMethod(this.reportUrl, this._unconsumedData, (function() {
                                            t._unconsumedData = []
                                        }))
                                    } catch (t) {}
                                }
                            }, {
                                key: "_bindEvent",
                                value: function() {
                                    var t = this;
                                    h(window, "offline", (function() {
                                        t.isOnLine = !1
                                    })), h(window, "online", (function() {
                                        t.isOnLine = !0, t.sendReport({
                                            force: 1
                                        })
                                    })), h(window, "beforeunload", (function() {
                                        t.sendData.events.length && localStorage.setItem(t.category, JSON.stringify(t.sendData))
                                    }))
                                }
                            }, {
                                key: "_forceSendReport",
                                value: function() {
                                    var t = this;
                                    this.sendReport({
                                        force: 1
                                    }), window.clearTimeout(this._forceSendTimeout), this._forceSendTimeout = setTimeout((function() {
                                        return t._forceSendReport()
                                    }), this.forceSendInterval)
                                }
                            }, {
                                key: "sendReport",
                                value: function() {
                                    var t = this,
                                        e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                        i = n();
                                    if (i - this.sendedAt >= this.maxSendInterval && (e.force || !this.useCombo || this.sendData.events.length >= this.comboSize) && this.isOnLine) {
                                        var s = this.sendData.events;
                                        if (0 === s.length) return;
                                        this.sendedAt = i;
                                        for (var a = 0; a <
                                            s.length; a++) s[a].hasOwnProperty("_retry") ? ++s[a]._retry : s[a]._retry = 1;
                                        u((function(e) {
                                            t.sendMethod(t.reportUrl, [t.sendData], e)
                                        }), (function(e) {
                                            e ? (t.sendedAt = 0, t.sendData.events = t.sendData.events.filter((function(t) {
                                                return t._retry <= 3
                                            }))) : t.sendData.events = t.sendData.events.filter((function(t) {
                                                return !t.hasOwnProperty("_retry")
                                            }))
                                        }))
                                    }
                                }
                            }, {
                                key: "set",
                                value: function() {
                                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                                    for (var e in t) {
                                        var i = t[e];
                                        "env" === e ? "string" == typeof i && (this.sendData.env = I[i.slice(0, 2)] || I.pr) : this.sendData[e] = i
                                    }
                                }
                            }, {
                                key: "_getEvent",
                                value: function() {
                                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                                    return "string" == typeof t && (t = {
                                        nm: t
                                    }), t
                                }
                            }, {
                                key: "groupReport",
                                value: function() {
                                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                                        e = arguments[1],
                                        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                                    this.labelMap.hasOwnProperty(t) && this.labelMap[t] || (this.labelMap[t] = o()), (e = this._getEvent(e)).val = e.val || {}, e.val.sessionId = this.labelMap[t], this.report(e, i)
                                }
                            }, {
                                key: "groupReportEnd",
                                value: function() {
                                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                                        e = arguments[1],
                                        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                                    this.groupReport(t, e, i), this.labelMap[t] = 0
                                }
                            }, {
                                key: "report",
                                value: function(t) {
                                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                                    (t = this._getEvent(t)).ts = a(), t.rqid = r(), t.hasOwnProperty("serviceid") || (t.serviceid = this.serviceid), Array.isArray(this.sendData.events) || (this.sendData.events = []), this.sendData.events.push(t), this.sendReport(e)
                                }
                            }]), t
                        }()
                    }()
                },
                9669: (t, e, i) => {
                    t.exports = i(1609)
                },
                5448: (t, e, i) => {
                    "use strict";
                    var s = i(4867),
                        n = i(6026),
                        a = i(5327),
                        o = i(4097),
                        r = i(4109),
                        u = i(7985),
                        h = i(5061);
                    t.exports = function(t) {
                        return new Promise((function(e, d) {
                            var c = t.data,
                                p = t.headers;
                            s.isFormData(c) && delete p["Content-Type"];
                            var l = new XMLHttpRequest;
                            if (t.auth) {
                                var f = t.auth.username || "",
                                    _ = t.auth.password || "";
                                p.Authorization = "Basic " + btoa(f + ":" + _)
                            }
                            var g = o(t.baseURL, t.url);
                            if (l.open(t.method.toUpperCase(), a(g, t.params, t.paramsSerializer), !0), l.timeout = t.timeout, l.onreadystatechange = function() {
                                    if (l && 4 === l.readyState && (0 !== l.status || l.responseURL && 0 === l.responseURL.indexOf("file:"))) {
                                        var i = "getAllResponseHeaders" in l ? r(l.getAllResponseHeaders()) : null,
                                            s = {
                                                data: t.responseType && "text" !== t.responseType ? l.response : l.responseText,
                                                status: l.status,
                                                statusText: l.statusText,
                                                headers: i,
                                                config: t,
                                                request: l
                                            };
                                        n(e, d, s), l = null
                                    }
                                }, l.onabort = function() {
                                    l && (d(h("Request aborted", t, "ECONNABORTED", l)), l = null)
                                }, l.onerror = function() {
                                    d(h("Network Error", t, null, l)), l = null
                                }, l.ontimeout = function() {
                                    var e = "timeout of " + t.timeout + "ms exceeded";
                                    t.timeoutErrorMessage && (e = t.timeoutErrorMessage), d(h(e, t, "ECONNABORTED", l)), l = null
                                }, s.isStandardBrowserEnv()) {
                                var m = i(4372),
                                    S = (t.withCredentials || u(g)) && t.xsrfCookieName ? m.read(t.xsrfCookieName) : void 0;
                                S && (p[t.xsrfHeaderName] = S)
                            }
                            if ("setRequestHeader" in l && s.forEach(p, (function(t, e) {
                                    void 0 === c && "content-type" === e.toLowerCase() ? delete p[e] : l.setRequestHeader(e, t)
                                })), s.isUndefined(t.withCredentials) || (l.withCredentials = !!t.withCredentials), t.responseType) try {
                                l.responseType = t.responseType
                            } catch (e) {
                                if ("json" !== t.responseType) throw e
                            }
                            "function" == typeof t.onDownloadProgress && l.addEventListener("progress", t.onDownloadProgress), "function" == typeof t.onUploadProgress && l.upload && l.upload.addEventListener("progress", t.onUploadProgress), t.cancelToken && t.cancelToken.promise.then((function(t) {
                                l && (l.abort(), d(t), l = null)
                            })), void 0 === c && (c = null), l.send(c)
                        }))
                    }
                },
                1609: (t, e, i) => {
                    "use strict";
                    var s = i(4867),
                        n = i(1849),
                        a = i(321),
                        o = i(7185);

                    function r(t) {
                        var e = new a(t),
                            i = n(a.prototype.request, e);
                        return s.extend(i, a.prototype, e), s.extend(i, e), i
                    }
                    var u = r(i(5655));
                    u.Axios = a, u.create = function(t) {
                        return r(o(u.defaults, t))
                    }, u.Cancel = i(5263), u.CancelToken = i(4972), u.isCancel = i(6502), u.all = function(t) {
                        return Promise.all(t)
                    }, u.spread = i(8713), t.exports = u, t.exports.default = u
                },
                5263: t => {
                    "use strict";

                    function e(t) {
                        this.message = t
                    }
                    e.prototype.toString = function() {
                        return "Cancel" + (this.message ? ": " + this.message : "")
                    }, e.prototype.__CANCEL__ = !0, t.exports = e
                },
                4972: (t, e, i) => {
                    "use strict";
                    var s = i(5263);

                    function n(t) {
                        if ("function" != typeof t) throw new TypeError("executor must be a function.");
                        var e;
                        this.promise = new Promise((function(t) {
                            e = t
                        }));
                        var i = this;
                        t((function(t) {
                            i.reason || (i.reason = new s(t), e(i.reason))
                        }))
                    }
                    n.prototype.throwIfRequested = function() {
                        if (this.reason) throw this.reason
                    }, n.source = function() {
                        var t;
                        return {
                            token: new n((function(e) {
                                t = e
                            })),
                            cancel: t
                        }
                    }, t.exports = n
                },
                6502: t => {
                    "use strict";
                    t.exports = function(t) {
                        return !(!t || !t.__CANCEL__)
                    }
                },
                321: (t, e, i) => {
                    "use strict";
                    var s = i(4867),
                        n = i(5327),
                        a = i(782),
                        o = i(3572),
                        r = i(7185);

                    function u(t) {
                        this.defaults = t, this.interceptors = {
                            request: new a,
                            response: new a
                        }
                    }
                    u.prototype.request = function(t) {
                        "string" == typeof t ? (t = arguments[1] || {}).url = arguments[0] : t = t || {}, (t = r(this.defaults, t)).method ? t.method = t.method.toLowerCase() : this.defaults.method ? t.method = this.defaults.method.toLowerCase() : t.method = "get";
                        var e = [o, void 0],
                            i = Promise.resolve(t);
                        for (this.interceptors.request.forEach((function(t) {
                                e.unshift(t.fulfilled, t.rejected)
                            })), this.interceptors.response.forEach((function(t) {
                                e.push(t.fulfilled, t.rejected)
                            })); e.length;) i = i.then(e.shift(), e.shift());
                        return i
                    }, u.prototype.getUri = function(t) {
                        return t = r(this.defaults, t), n(t.url, t.params, t.paramsSerializer).replace(/^\?/, "")
                    }, s.forEach(["delete", "get", "head", "options"], (function(t) {
                        u.prototype[t] = function(e, i) {
                            return this.request(s.merge(i || {}, {
                                method: t,
                                url: e
                            }))
                        }
                    })), s.forEach(["post", "put", "patch"], (function(t) {
                        u.prototype[t] = function(e, i, n) {
                            return this.request(s.merge(n || {}, {
                                method: t,
                                url: e,
                                data: i
                            }))
                        }
                    })), t.exports = u
                },
                782: (t, e, i) => {
                    "use strict";
                    var s = i(4867);

                    function n() {
                        this.handlers = []
                    }
                    n.prototype.use = function(t, e) {
                        return this.handlers.push({
                            fulfilled: t,
                            rejected: e
                        }), this.handlers.length - 1
                    }, n.prototype.eject = function(t) {
                        this.handlers[t] && (this.handlers[t] = null)
                    }, n.prototype.forEach = function(t) {
                        s.forEach(this.handlers, (function(e) {
                            null !== e && t(e)
                        }))
                    }, t.exports = n
                },
                4097: (t, e, i) => {
                    "use strict";
                    var s = i(1793),
                        n = i(7303);
                    t.exports = function(t, e) {
                        return t && !s(e) ? n(t, e) : e
                    }
                },
                5061: (t, e, i) => {
                    "use strict";
                    var s = i(481);
                    t.exports = function(t, e, i, n, a) {
                        var o = new Error(t);
                        return s(o, e, i, n, a)
                    }
                },
                3572: (t, e, i) => {
                    "use strict";
                    var s = i(4867),
                        n = i(8527),
                        a = i(6502),
                        o = i(5655);

                    function r(t) {
                        t.cancelToken && t.cancelToken.throwIfRequested()
                    }
                    t.exports = function(t) {
                        return r(t), t.headers = t.headers || {}, t.data = n(t.data, t.headers, t.transformRequest), t.headers = s.merge(t.headers.common || {}, t.headers[t.method] || {}, t.headers), s.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (function(e) {
                            delete t.headers[e]
                        })), (t.adapter || o.adapter)(t).then((function(e) {
                            return r(t), e.data = n(e.data, e.headers, t.transformResponse), e
                        }), (function(e) {
                            return a(e) || (r(t), e && e.response && (e.response.data = n(e.response.data, e.response.headers, t.transformResponse))), Promise.reject(e)
                        }))
                    }
                },
                481: t => {
                    "use strict";
                    t.exports = function(t, e, i, s, n) {
                        return t.config = e, i && (t.code = i), t.request = s, t.response = n, t.isAxiosError = !0, t.toJSON = function() {
                            return {
                                message: this.message,
                                name: this.name,
                                description: this.description,
                                number: this.number,
                                fileName: this.fileName,
                                lineNumber: this.lineNumber,
                                columnNumber: this.columnNumber,
                                stack: this.stack,
                                config: this.config,
                                code: this.code
                            }
                        }, t
                    }
                },
                7185: (t, e, i) => {
                    "use strict";
                    var s = i(4867);
                    t.exports = function(t, e) {
                        e = e || {};
                        var i = {},
                            n = ["url", "method", "params", "data"],
                            a = ["headers", "auth", "proxy"],
                            o = ["baseURL", "url", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "maxContentLength", "validateStatus", "maxRedirects", "httpAgent", "httpsAgent", "cancelToken", "socketPath"];
                        s.forEach(n, (function(t) {
                            void 0 !== e[t] && (i[t] = e[t])
                        })), s.forEach(a, (function(n) {
                            s.isObject(e[n]) ? i[n] = s.deepMerge(t[n], e[n]) : void 0 !== e[n] ? i[n] = e[n] : s.isObject(t[n]) ? i[n] = s.deepMerge(t[n]) : void 0 !== t[n] && (i[n] = t[n])
                        })), s.forEach(o, (function(s) {
                            void 0 !== e[s] ? i[s] = e[s] : void 0 !== t[s] && (i[s] = t[s])
                        }));
                        var r = n.concat(a).concat(o),
                            u = Object.keys(e).filter((function(t) {
                                return -1 === r.indexOf(t)
                            }));
                        return s.forEach(u, (function(s) {
                            void 0 !== e[s] ? i[s] = e[s] : void 0 !== t[s] && (i[s] = t[s])
                        })), i
                    }
                },
                6026: (t, e, i) => {
                    "use strict";
                    var s = i(5061);
                    t.exports = function(t, e, i) {
                        var n = i.config.validateStatus;
                        !n || n(i.status) ? t(i) : e(s("Request failed with status code " + i.status, i.config, null, i.request, i))
                    }
                },
                8527: (t, e, i) => {
                    "use strict";
                    var s = i(4867);
                    t.exports = function(t, e, i) {
                        return s.forEach(i, (function(i) {
                            t = i(t, e)
                        })), t
                    }
                },
                5655: (t, e, i) => {
                    "use strict";
                    var s = i(4867),
                        n = i(6016),
                        a = {
                            "Content-Type": "application/x-www-form-urlencoded"
                        };

                    function o(t, e) {
                        !s.isUndefined(t) && s.isUndefined(t["Content-Type"]) && (t["Content-Type"] = e)
                    }
                    var r, u = {
                        adapter: (("undefined" != typeof XMLHttpRequest || "undefined" != typeof process && "[object process]" === Object.prototype.toString.call(process)) && (r = i(5448)), r),
                        transformRequest: [function(t, e) {
                            return n(e, "Accept"), n(e, "Content-Type"), s.isFormData(t) || s.isArrayBuffer(t) || s.isBuffer(t) || s.isStream(t) || s.isFile(t) || s.isBlob(t) ? t : s.isArrayBufferView(t) ? t.buffer : s.isURLSearchParams(t) ? (o(e, "application/x-www-form-urlencoded;charset=utf-8"), t.toString()) : s.isObject(t) ? (o(e, "application/json;charset=utf-8"), JSON.stringify(t)) : t
                        }],
                        transformResponse: [function(t) {
                            if ("string" == typeof t) try {
                                t = JSON.parse(t)
                            } catch (t) {}
                            return t
                        }],
                        timeout: 0,
                        xsrfCookieName: "XSRF-TOKEN",
                        xsrfHeaderName: "X-XSRF-TOKEN",
                        maxContentLength: -1,
                        validateStatus: function(t) {
                            return t >= 200 && t < 300
                        }
                    };
                    u.headers = {
                        common: {
                            Accept: "application/json, text/plain, */*"
                        }
                    }, s.forEach(["delete", "get", "head"], (function(t) {
                        u.headers[t] = {}
                    })), s.forEach(["post", "put", "patch"], (function(t) {
                        u.headers[t] = s.merge(a)
                    })), t.exports = u
                },
                1849: t => {
                    "use strict";
                    t.exports = function(t, e) {
                        return function() {
                            for (var i = new Array(arguments.length), s = 0; s <
                                i.length; s++) i[s] = arguments[s];
                            return t.apply(e, i)
                        }
                    }
                },
                5327: (t, e, i) => {
                    "use strict";
                    var s = i(4867);

                    function n(t) {
                        return encodeURIComponent(t).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
                    }
                    t.exports = function(t, e, i) {
                        if (!e) return t;
                        var a;
                        if (i) a = i(e);
                        else if (s.isURLSearchParams(e)) a = e.toString();
                        else {
                            var o = [];
                            s.forEach(e, (function(t, e) {
                                null != t && (s.isArray(t) ? e += "[]" : t = [t], s.forEach(t, (function(t) {
                                    s.isDate(t) ? t = t.toISOString() : s.isObject(t) && (t = JSON.stringify(t)), o.push(n(e) + "=" + n(t))
                                })))
                            })), a = o.join("&")
                        }
                        if (a) {
                            var r = t.indexOf("#"); - 1 !== r && (t = t.slice(0, r)), t += (-1 === t.indexOf("?") ? "?" : "&") + a
                        }
                        return t
                    }
                },
                7303: t => {
                    "use strict";
                    t.exports = function(t, e) {
                        return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t
                    }
                },
                4372: (t, e, i) => {
                    "use strict";
                    var s = i(4867);
                    t.exports = s.isStandardBrowserEnv() ? {
                        write: function(t, e, i, n, a, o) {
                            var r = [];
                            r.push(t + "=" + encodeURIComponent(e)), s.isNumber(i) && r.push("expires=" + new Date(i).toGMTString()), s.isString(n) && r.push("path=" + n), s.isString(a) && r.push("domain=" + a), !0 === o && r.push("secure"), document.cookie = r.join("; ")
                        },
                        read: function(t) {
                            var e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
                            return e ? decodeURIComponent(e[3]) : null
                        },
                        remove: function(t) {
                            this.write(t, "", Date.now() - 864e5)
                        }
                    } : {
                        write: function() {},
                        read: function() {
                            return null
                        },
                        remove: function() {}
                    }
                },
                1793: t => {
                    "use strict";
                    t.exports = function(t) {
                        return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t)
                    }
                },
                7985: (t, e, i) => {
                    "use strict";
                    var s = i(4867);
                    t.exports = s.isStandardBrowserEnv() ? function() {
                        var t, e = /(msie|trident)/i.test(navigator.userAgent),
                            i = document.createElement("a");

                        function n(t) {
                            var s = t;
                            return e && (i.setAttribute("href", s), s = i.href), i.setAttribute("href", s), {
                                href: i.href,
                                protocol: i.protocol ? i.protocol.replace(/:$/, "") : "",
                                host: i.host,
                                search: i.search ? i.search.replace(/^\?/, "") : "",
                                hash: i.hash ? i.hash.replace(/^#/, "") : "",
                                hostname: i.hostname,
                                port: i.port,
                                pathname: "/" === i.pathname.charAt(0) ? i.pathname : "/" + i.pathname
                            }
                        }
                        return t = n(window.location.href),
                            function(e) {
                                var i = s.isString(e) ? n(e) : e;
                                return i.protocol === t.protocol && i.host === t.host
                            }
                    }() : function() {
                        return !0
                    }
                },
                6016: (t, e, i) => {
                    "use strict";
                    var s = i(4867);
                    t.exports = function(t, e) {
                        s.forEach(t, (function(i, s) {
                            s !== e && s.toUpperCase() === e.toUpperCase() && (t[e] = i, delete t[s])
                        }))
                    }
                },
                4109: (t, e, i) => {
                    "use strict";
                    var s = i(4867),
                        n = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
                    t.exports = function(t) {
                        var e, i, a, o = {};
                        return t ? (s.forEach(t.split("\n"), (function(t) {
                            if (a = t.indexOf(":"), e = s.trim(t.substr(0, a)).toLowerCase(), i = s.trim(t.substr(a + 1)), e) {
                                if (o[e] && n.indexOf(e) >= 0) return;
                                o[e] = "set-cookie" === e ? (o[e] ? o[e] : []).concat([i]) : o[e] ? o[e] + ", " + i : i
                            }
                        })), o) : o
                    }
                },
                8713: t => {
                    "use strict";
                    t.exports = function(t) {
                        return function(e) {
                            return t.apply(null, e)
                        }
                    }
                },
                4867: (t, e, i) => {
                    "use strict";
                    var s = i(1849),
                        n = Object.prototype.toString;

                    function a(t) {
                        return "[object Array]" === n.call(t)
                    }

                    function o(t) {
                        return void 0 === t
                    }

                    function r(t) {
                        return null !== t && "object" == typeof t
                    }

                    function u(t) {
                        return "[object Function]" === n.call(t)
                    }

                    function h(t, e) {
                        if (null != t)
                            if ("object" != typeof t && (t = [t]), a(t))
                                for (var i = 0, s = t.length; i <
                                    s; i++) e.call(null, t[i], i, t);
                            else
                                for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e.call(null, t[n], n, t)
                    }
                    t.exports = {
                        isArray: a,
                        isArrayBuffer: function(t) {
                            return "[object ArrayBuffer]" === n.call(t)
                        },
                        isBuffer: function(t) {
                            return null !== t && !o(t) && null !== t.constructor && !o(t.constructor) && "function" == typeof t.constructor.isBuffer && t.constructor.isBuffer(t)
                        },
                        isFormData: function(t) {
                            return "undefined" != typeof FormData && t instanceof FormData
                        },
                        isArrayBufferView: function(t) {
                            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : t && t.buffer && t.buffer instanceof ArrayBuffer
                        },
                        isString: function(t) {
                            return "string" == typeof t
                        },
                        isNumber: function(t) {
                            return "number" == typeof t
                        },
                        isObject: r,
                        isUndefined: o,
                        isDate: function(t) {
                            return "[object Date]" === n.call(t)
                        },
                        isFile: function(t) {
                            return "[object File]" === n.call(t)
                        },
                        isBlob: function(t) {
                            return "[object Blob]" === n.call(t)
                        },
                        isFunction: u,
                        isStream: function(t) {
                            return r(t) && u(t.pipe)
                        },
                        isURLSearchParams: function(t) {
                            return "undefined" != typeof URLSearchParams && t instanceof URLSearchParams
                        },
                        isStandardBrowserEnv: function() {
                            return ("undefined" == typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && ("undefined" != typeof window && "undefined" != typeof document)
                        },
                        forEach: h,
                        merge: function t() {
                            var e = {};

                            function i(i, s) {
                                "object" == typeof e[s] && "object" == typeof i ? e[s] = t(e[s], i) : e[s] = i
                            }
                            for (var s = 0, n = arguments.length; s < n; s++) h(arguments[s], i);
                            return e
                        },
                        deepMerge: function t() {
                            var e = {};

                            function i(i, s) {
                                "object" == typeof e[s] && "object" == typeof i ? e[s] = t(e[s], i) : e[s] = "object" == typeof i ? t({}, i) : i
                            }
                            for (var s = 0, n = arguments.length; s < n; s++) h(arguments[s], i);
                            return e
                        },
                        extend: function(t, e, i) {
                            return h(e, (function(e, n) {
                                t[n] = i && "function" == typeof e ? s(e, i) : e
                            })), t
                        },
                        trim: function(t) {
                            return t.replace(/^\s*/, "").replace(/\s*$/, "")
                        }
                    }
                },
                6729: t => {
                    "use strict";
                    var e = Object.prototype.hasOwnProperty,
                        i = "~";

                    function s() {}

                    function n(t, e, i) {
                        this.fn = t, this.context = e, this.once = i || !1
                    }

                    function a(t, e, s, a, o) {
                        if ("function" != typeof s) throw new TypeError("The listener must be a function");
                        var r = new n(s, a || t, o),
                            u = i ? i + e : e;
                        return t._events[u] ? t._events[u].fn ? t._events[u] = [t._events[u], r] : t._events[u].push(r) : (t._events[u] = r, t._eventsCount++), t
                    }

                    function o(t, e) {
                        0 == --t._eventsCount ? t._events = new s : delete t._events[e]
                    }

                    function r() {
                        this._events = new s, this._eventsCount = 0
                    }
                    Object.create && (s.prototype = Object.create(null), (new s).__proto__ || (i = !1)), r.prototype.eventNames = function() {
                        var t, s, n = [];
                        if (0 === this._eventsCount) return n;
                        for (s in t = this._events) e.call(t, s) && n.push(i ? s.slice(1) : s);
                        return Object.getOwnPropertySymbols ? n.concat(Object.getOwnPropertySymbols(t)) : n
                    }, r.prototype.listeners = function(t) {
                        var e = i ? i + t : t,
                            s = this._events[e];
                        if (!s) return [];
                        if (s.fn) return [s.fn];
                        for (var n = 0, a = s.length, o = new Array(a); n <
                            a; n++) o[n] = s[n].fn;
                        return o
                    }, r.prototype.listenerCount = function(t) {
                        var e = i ? i + t : t,
                            s = this._events[e];
                        return s ? s.fn ? 1 : s.length : 0
                    }, r.prototype.emit = function(t, e, s, n, a, o) {
                        var r = i ? i + t : t;
                        if (!this._events[r]) return !1;
                        var u, h, d = this._events[r],
                            c = arguments.length;
                        if (d.fn) {
                            switch (d.once && this.removeListener(t, d.fn, void 0, !0), c) {
                                case 1:
                                    return d.fn.call(d.context), !0;
                                case 2:
                                    return d.fn.call(d.context, e), !0;
                                case 3:
                                    return d.fn.call(d.context, e, s), !0;
                                case 4:
                                    return d.fn.call(d.context, e, s, n), !0;
                                case 5:
                                    return d.fn.call(d.context, e, s, n, a), !0;
                                case 6:
                                    return d.fn.call(d.context, e, s, n, a, o), !0
                            }
                            for (h = 1, u = new Array(c - 1); h < c; h++) u[h - 1] = arguments[h];
                            d.fn.apply(d.context, u)
                        } else {
                            var p, l = d.length;
                            for (h = 0; h < l; h++) switch (d[h].once && this.removeListener(t, d[h].fn, void 0, !0), c) {
                                case 1:
                                    d[h].fn.call(d[h].context);
                                    break;
                                case 2:
                                    d[h].fn.call(d[h].context, e);
                                    break;
                                case 3:
                                    d[h].fn.call(d[h].context, e, s);
                                    break;
                                case 4:
                                    d[h].fn.call(d[h].context, e, s, n);
                                    break;
                                default:
                                    if (!u)
                                        for (p = 1, u = new Array(c - 1); p < c; p++) u[p - 1] = arguments[p];
                                    d[h].fn.apply(d[h].context, u)
                            }
                        }
                        return !0
                    }, r.prototype.on = function(t, e, i) {
                        return a(this, t, e, i, !1)
                    }, r.prototype.once = function(t, e, i) {
                        return a(this, t, e, i, !0)
                    }, r.prototype.removeListener = function(t, e, s, n) {
                        var a = i ? i + t : t;
                        if (!this._events[a]) return this;
                        if (!e) return o(this, a), this;
                        var r = this._events[a];
                        if (r.fn) r.fn !== e || n && !r.once || s && r.context !== s || o(this, a);
                        else {
                            for (var u = 0, h = [], d = r.length; u < d; u++)(r[u].fn !== e || n && !r[u].once || s && r[u].context !== s) && h.push(r[u]);
                            h.length ? this._events[a] = 1 === h.length ? h[0] : h : o(this, a)
                        }
                        return this
                    }, r.prototype.removeAllListeners = function(t) {
                        var e;
                        return t ? (e = i ? i + t : t, this._events[e] && o(this, e)) : (this._events = new s, this._eventsCount = 0), this
                    }, r.prototype.off = r.prototype.removeListener, r.prototype.addListener = r.prototype.on, r.prefixed = i, r.EventEmitter = r, t.exports = r
                },
                9575: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5605).SVID.SVID_CORP,
                        n = {
                            Corporation: {
                                URI_CORP_BIND: s <<
                                    16 | 100,
                                URI_CORP_UNBIND: s << 16 | 101
                            }
                        };
                    e.default = n
                },
                9339: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(9575),
                        n = i(5509),
                        a = i(5344),
                        o = i(6973),
                        r = {};
                    r.CorpBindFinishReq = n.default.Response.extend({
                        category: "Corporation",
                        uri: s.default.Corporation.URI_CORP_BIND,
                        init: function() {
                            this.cid = 0, this.cname = 0, this.uid = "", this.cts = o.default.get()
                        },
                        marshall: function() {
                            this.push(this.cid, a.default.INT), this.push(this.cname, a.default.INT), this.push(this.uid, a.default.LONG), this.push(this.cts, a.default.LONG)
                        },
                        unmarshall: function() {
                            this.cid = this.popInt(), this.cname = this.popInt(), this.uid = this.popLong().value(), this.cts = this.popLong().value()
                        }
                    }), r.CorpUnbindFinish = n.default.Response.extend({
                        category: "Corporation",
                        uri: s.default.Corporation.URI_CORP_UNBIND,
                        init: function() {
                            this.cid = 0, this.cname = 0, this.uid = "", this.cts = o.default.get()
                        },
                        marshall: function() {
                            this.push(this.cid, a.default.INT), this.push(this.cname, a.default.INT), this.push(this.uid, a.default.LONG), this.push(this.cts, a.default.LONG)
                        },
                        unmarshall: function() {
                            this.cid = this.popInt(), this.cname = this.popInt(), this.uid = this.popLong().value(), this.cts = this.popLong().value()
                        }
                    }), e.default = r
                },
                8704: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5605),
                        n = s.SVID.SVID_CALL_SIGNAL,
                        a = {
                            CALL_TYPE_AUDIO: 1,
                            CALL_TYPE_VIDEO: 2,
                            CALL_ACTION_ACCEPT: 1,
                            CALL_ACTION_BUSY: 2,
                            CALL_ACTION_REJECT: 3,
                            SVID_CALL_SIGNAL: s.SVID.SVID_CALL_SIGNAL,
                            RES_SUCCESS: 0,
                            RES_FAIL: 1,
                            RES_TIMEOUT: 2,
                            RES_SESSION_NOT_EXIST: 3,
                            RES_VERSION_NOT_SUPPORT: 4,
                            RES_SS_CREATE_FAILED: 1001,
                            RES_SS_EXPIRE: 1002,
                            RES_SS_NOT_EXIST: 1003,
                            Call: {
                                URI_CALL_INVITE: n << 16 | 1,
                                URI_CALL_INVITE_ACK: n << 16 | 2,
                                URI_CALL_DETECT: n << 16 | 3,
                                URI_CALL_DETECT_ACK: n << 16 | 4,
                                URI_CALL_INVITE_RESPONSE: n << 16 | 5,
                                URI_CALL_INVITE_RESPONSE_ACK: n << 16 | 6,
                                URI_CALL_NOTIFY: n << 16 | 7,
                                URI_CALL_NOTIFY_ACK: n << 16 | 8,
                                URI_CALL_LEAVE: n << 16 | 9,
                                URI_CALL_LEAVE_ACK: n << 16 | 10,
                                URI_CALL_MEMBER_CHANGE: n << 16 | 11,
                                URI_CALL_MEMBER_CHANGE_ACK: n << 16 | 12,
                                URI_CALL_MEMBER_JOIN: n << 16 | 13,
                                URI_CALL_MEMBER_JOIN_ACK: n << 16 | 14,
                                URI_CALL_PING: n << 16 | 15,
                                URI_CALL_PING_ACK: n << 16 | 16,
                                URI_CALL_CREATE: n << 16 | 17,
                                URI_CALL_CREATE_ACK: n << 16 | 18,
                                URI_CALL_QUALITY_NOTIFY: n << 16 | 19,
                                URI_CALL_INVITE2: n << 16 | 20,
                                URI_CALL_HALFWAY_INVITE: n << 16 | 22
                            }
                        };
                    e.default = a
                },
                4644: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(8704),
                        n = i(8882),
                        a = i(6973),
                        o = i(5509),
                        r = i(5344),
                        u = i(4053),
                        h = {};
                    h.PCallCreate = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_CREATE,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_CREATE, this.uid = 0, this.callUuid = u.default.next(), this.deviceType = n.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.uid, r.default.LONG), this.push(this.callUuid), this.push(this.deviceType, r.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.callUuid = this.popString(), this.deviceType = this.popByte()
                        }
                    }), h.PCallCreateAck = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_CREATE_ACK,
                        marshall: function() {
                            this.push(this.rescode, r.default.INT), this.push(this.callUuid, r.default.STRING), this.push(this.sid, r.default.STRING)
                        },
                        unmarshall: function() {
                            this.rescode = this.popInt(), this.callUuid = this.popString(), this.sid = this.popString()
                        }
                    }), h.PCallDetect = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_DETECT,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_DETECT, this.uid = "", this.sid = "", this.deviceType = n.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.uid, r.default.LONG), this.push(this.sid, r.default.STRING), this.push(this.deviceType, r.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.sid = this.popString(), this.deviceType = this.popByte()
                        }
                    }), h.PCallDetectAck = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_DETECT_ACK,
                        init: function() {
                            this.sid = "", this.rescode = 0
                        },
                        marshall: function() {
                            this.push(this.sid, r.default.STRING), this.push(this.rescode, r.default.INT)
                        },
                        unmarshall: function() {
                            this.sid = this.popString(), this.rescode = this.popInt()
                        }
                    }), h.PCallInvite = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_INVITE,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_INVITE, this.uid = "", this.peerUid = "", this.cts = a.default.get(), this.sid = "", this.name = "", this.peerAppid = 0, this.deviceType = n.default.deviceType, this.callType = 0
                        },
                        marshall: function() {
                            this.push(this.uid, r.default.LONG), this.push(this.peerUid, r.default.LONG), this.push(this.cts, r.default.LONG), this.push(this.sid), this.push(this.name), this.push(this.peerAppid, r.default.SHORT), this.push(this.deviceType, r.default.BYTE), this.push(this.callType, r.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.peerUid = this.popLong().value(), this.cts = this.popLong().value(), this.sid = this.popString(), this.name = this.popString(), this.peerAppid = this.popShort(), this.deviceType = this.popByte(), this.callType = this.popByte()
                        }
                    }), h.PCallInvite2 = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_INVITE2,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_INVITE2, this.uid = "", this.gid = "", this.cts = a.default.get(), this.sid = "", this.name = "", this.invitees = [], this.deviceType = n.default.deviceType, this.callType = 0, this.meetingType = 0
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.gid = this.popLong().value(), this.cts = this.popLong().value(), this.sid = this.popString(), this.name = this.popString(), this.invitees = this.popUItems(), this.deviceType = this.popByte(), this.callType = this.popByte(), this.meetingType = this.popByte()
                        }
                    }), h.PCallHalfwayInvite = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_HALFWAY_INVITE,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_HALFWAY_INVITE, this.uid = "", this.gid = "", this.cts = a.default.get(), this.sid = "", this.name = "", this.invitees = [], this.deviceType = n.default.deviceType, this.callType = 0
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.gid = this.popLong().value(), this.cts = this.popLong().value(), this.sid = this.popString(), this.name = this.popString(), this.invitees = this.popUItems(), this.deviceType = this.popByte(), this.callType = this.popByte()
                        }
                    }), h.PCallInviteAck = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_INVITE_ACK,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_INVITE_ACK, this.sid = "", this.rescode = 0
                        },
                        marshall: function() {
                            this.push(this.sid), this.push(this.rescode, r.default.INT)
                        },
                        unmarshall: function() {
                            this.sid = this.popString(), this.rescode = this.popInt()
                        }
                    }), h.PCallInivteResponse = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_INVITE_RESPONSE,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_INVITE_RESPONSE, this.uid = 0, this.sid = 0, this.action = "", this.deviceType = n.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.uid, r.default.LONG), this.push(this.sid), this.push(this.action, r.default.BYTE), this.push(this.deviceType, r.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.sid = this.popString(), this.action = this.popByte(), this.deviceType = this.popByte()
                        }
                    }), h.PCallInivteResponseAck = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_INVITE_RESPONSE_ACK,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_INVITE_RESPONSE_ACK, this.sid = "", this.rescode = 0, this.action = 0
                        },
                        marshall: function() {
                            this.push(this.sid, r.default.STRING), this.push(this.rescode, r.default.INT), this.push(this.action, r.default.BYTE)
                        },
                        unmarshall: function() {
                            this.sid = this.popString(), this.rescode = this.popInt(), this.action = this.popByte()
                        }
                    }), h.PCallJoin = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_MEMBER_JOIN,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_MEMBER_JOIN, this.uid = "", this.sid = "", this.deviceType = n.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.uid, r.default.LONG), this.push(this.sid, r.default.STRING), this.push(this.deviceType, r.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.sid = this.popString(), this.deviceType = this.popByte()
                        }
                    }), h.PCallJoinAck = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_MEMBER_JOIN_ACK,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_MEMBER_JOIN_ACK, this.sid = "", this.rescode = 0
                        },
                        marshall: function() {
                            this.push(this.sid, r.default.STRING), this.push(this.rescode, r.default.INT)
                        },
                        unmarshall: function() {
                            this.sid = this.popString(), this.rescode = this.popInt()
                        }
                    }), h.PCallLeave = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_LEAVE,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_LEAVE, this.uid = "", this.sid = "", this.deviceType = n.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.uid, r.default.LONG), this.push(this.sid, r.default.STRING), this.push(this.deviceType, r.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.sid = this.popString(), this.deviceType = this.popByte()
                        }
                    }), h.PCallMemberChange = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_MEMBER_CHANGE,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_MEMBER_CHANGE, this.deleteUids = [], this.addUids = [], this.currentUids = [], this.sid = "", this.leaveReason = {}
                        },
                        unmarshall: function() {
                            this.deleteUids = this._popArrayLong(), this.addUids = this._popArrayLong(), this.currentUids = this._popArrayLong(), this.sid = this.popString(), this.leaveReason = this.popMapOfLongAndByte()
                        }
                    }), h.PCallNotify = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_NOTIFY,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_NOTIFY, this.uid = "", this.sid = "", this.action = 0, this.deviceType = n.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.uid, r.default.LONG), this.push(this.sid, r.default.STRING), this.push(this.action, r.default.BYTE), this.push(this.deviceType, r.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.sid = this.popString(), this.action = this.popByte(), this.deviceType = this.popByte()
                        }
                    }), h.PCallPing = o.default.Request.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_PING,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_PING, this.uid = "", this.cts = a.default.get(), this.deviceType = n.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.uid, r.default.LONG), this.push(this.cts, r.default.LONG), this.push(this.deviceType, r.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte()
                        }
                    }), h.PCallPingAck = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_PING_ACK,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_PING_ACK, this.cts = 0, this.sts = 0
                        },
                        marshall: function() {
                            this.push(this.cts, r.default.LONG), this.push(this.sts, r.default.LONG)
                        },
                        unmarshall: function() {
                            this.cts = this.popLong().value(), this.sts = this.popLong().value()
                        }
                    }), h.PCallQualityNotify = o.default.Response.extend({
                        category: "Call",
                        uri: s.default.Call.URI_CALL_QUALITY_NOTIFY,
                        init: function() {
                            this.uri = s.default.Call.URI_CALL_INVITE_ACK, this.uid = "", this.deviceType = n.default.deviceType, this.quality = 0, this.sid = ""
                        },
                        marshall: function() {
                            this.push(this.uid, r.default.LONG), this.push(this.deviceType, r.default.BYTE), this.push(this.quality, r.default.BYTE), this.push(this.sid, r.default.STRING)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.deviceType = this.popByte(), this.quality = this.popByte(), this.sid = this.popString()
                        }
                    }), e.default = h
                },
                4897: (t, e, i) => {
                    "use strict";
                    var s = i(8704),
                        n = i(4644),
                        a = i(5605),
                        o = i(8882),
                        r = i(8473),
                        u = function() {
                            function t(t) {
                                var e = this;
                                this._loginSDK = null, this._sendPingHandle = null, this._currentSid = null, this._createCbObject = {}, this._inviteMap = {}, this._pingTimeoutCount = 0, this._networkChangeFlag = !1, this._PING_TIME = 5e3, this.constant = s.default, this._loginSDK = t, this._sendPingHandle = null, this._currentSid = null, this._createCbObject = {}, this._inviteMap = {}, this._pingTimeoutCount = 0, this._networkChangeFlag = !1, r.default.on(s.default.Call.URI_CALL_CREATE_ACK, this._onCreateAck.bind(this)), r.default.on(s.default.Call.URI_CALL_INVITE, this._onInvite.bind(this)), r.default.on(s.default.Call.URI_CALL_INVITE2, this._onInvite.bind(this)), r.default.on(s.default.Call.URI_CALL_HALFWAY_INVITE, this._onInvite.bind(this)), r.default.on(s.default.Call.URI_CALL_INVITE_ACK, this._onInviteAck.bind(this)), r.default.on(s.default.Call.URI_CALL_DETECT_ACK, this._onDetectAck.bind(this)), r.default.on(s.default.Call.URI_CALL_INVITE_RESPONSE_ACK, this._onInviteResponseAck.bind(this)), r.default.on(s.default.Call.URI_CALL_MEMBER_CHANGE, this._onMemberChange.bind(this)), r.default.on(s.default.Call.URI_CALL_NOTIFY, this._onNotice.bind(this)), r.default.on(s.default.Call.URI_CALL_PING_ACK, this._onPingAck.bind(this)), r.default.on(s.default.Call.URI_CALL_MEMBER_JOIN_ACK, this._onJoinAck.bind(this)), r.default.on(s.default.Call.URI_CALL_QUALITY_NOTIFY, this._qualityNotice.bind(this)), r.default.on("ConnStatusChange", function(t) {
                                    switch (t) {
                                        case a.LOGIN_STATUS.DISCONNECTED:
                                            e._networkChangeFlag = !0;
                                            break;
                                        case a.LOGIN_STATUS.AUTHENTICATED:
                                            e._currentSid && e._sendDetect({
                                                sid: e._currentSid
                                            })
                                    }
                                }.bind(this))
                            }
                            return t.prototype.send = function(t) {
                                try {
                                    this._loginSDK._sendTransUp(s.default.SVID_CALL_SIGNAL, t)
                                } catch (t) {
                                    console.error(t)
                                }
                            }, t.prototype.sendCall = function(t, e) {
                                this._sendCreate(), this._createCbObject = {
                                    message: t,
                                    cb: e
                                }
                            }, t.prototype._sendCreate = function() {
                                this.send(new n.default.PCallCreate({
                                    uid: this._loginSDK.getUID()
                                }))
                            }, t.prototype._onCreateAck = function(t) {
                                var e = this;
                                r.default.emit(a.CALL_EVENT.CREATE_ACK, t), this._currentSid = t.sid;
                                var i = this._createCbObject.cb,
                                    s = this._createCbObject.message;
                                this._createCbObject = {}, i && i({
                                    sid: t.sid,
                                    callType: s.callType
                                }).then((function() {
                                    e._sendInvite({
                                        uid: e._loginSDK.getUID(),
                                        sid: t.sid,
                                        peerAppid: 1,
                                        name: s.name,
                                        peerUid: s.peerUid,
                                        callType: s.callType
                                    })
                                }))
                            }, t.prototype._sendInvite = function(t) {
                                this.send(new n.default.PCallInvite(t))
                            }, t.prototype._onInviteAck = function(t) {
                                r.default.emit(a.CALL_EVENT.INVITE_ACK, t), 0 === t.rescode && this.startSendPing()
                            }, t.prototype._onInvite = function(t) {
                                if (!this._inviteMap[t.sid]) {
                                    this._currentSid = t.sid;
                                    try {
                                        this._sendDetect({
                                            sid: t.sid
                                        })
                                    } catch (t) {
                                        console.error(t)
                                    }
                                    this._inviteMap[t.sid] = t, r.default.emit(a.CALL_EVENT.INVITE, t)
                                }
                            }, t.prototype._sendDetect = function(t) {
                                t.uid = this._loginSDK.getUID()
                            }, t.prototype._onDetectAck = function(t) {
                                if (this._networkChangeFlag) this._networkChangeFlag = !1, t.rescode === s.default.RES_SUCCESS ? this.sendJoin({
                                    sid: t.sid
                                }) : this._currentSid = null;
                                else {
                                    var e = this._inviteMap[t.sid];
                                    r.default.emit(a.CALL_EVENT.DETECT_ACK, t, e), delete this._inviteMap[t.sid]
                                }
                            }, t.prototype.sendInviteResponse = function(t) {
                                t.uid = this._loginSDK.getUID(), this.send(new n.default.PCallInivteResponse(t))
                            }, t.prototype._onInviteResponseAck = function(t) {
                                r.default.emit(a.CALL_EVENT.INVITE_RESPONSE_ACK, t), 1 === t.action && 0 === t.rescode && this.startSendPing()
                            }, t.prototype.sendJoin = function(t) {
                                t.uid = this._loginSDK.getUID(), this.send(new n.default.PCallJoin(t))
                            }, t.prototype._onJoinAck = function(t) {
                                r.default.emit(a.CALL_EVENT.JOIN, t)
                            }, t.prototype.sendPing = function() {
                                var t = this._loginSDK.getUID();
                                this.send(new n.default.PCallPing({
                                    uid: t
                                })), this._pingTimeoutCount > 5 && (this.sendLeave({
                                    sid: this._currentSid
                                }), r.default.emit(a.CALL_EVENT.LEAVE)), this._pingTimeoutCount++
                            }, t.prototype.startSendPing = function() {
                                var t = this;
                                this.stopSendPing(), this.sendPing(), this._sendPingHandle = setInterval((function() {
                                    t.sendPing()
                                }), this._PING_TIME)
                            }, t.prototype.stopSendPing = function() {
                                null !== this._sendPingHandle && (clearInterval(this._sendPingHandle), this._sendPingHandle = null)
                            }, t.prototype._onPingAck = function(t) {
                                this._pingTimeoutCount = 0
                            }, t.prototype._onMemberChange = function(t) {
                                t.sid === this._currentSid && r.default.emit(a.CALL_EVENT.MEMBER_CHANGE, t)
                            }, t.prototype.sendLeave = function(t) {
                                t.uid = this._loginSDK.getUID(), this.send(new n.default.PCallLeave(t)), this.clearCurrentData()
                            }, t.prototype._onNotice = function(t) {
                                r.default.emit(a.CALL_EVENT.NOTICE, t), t.uid === this._loginSDK.getUID() && t.deviceType !== o.default.deviceType && this.clearCurrentData()
                            }, t.prototype._qualityNotice = function(t) {
                                r.default.emit(a.CALL_EVENT.QUALITY_NOTICE, t)
                            }, t.prototype.clearCurrentData = function() {
                                this.stopSendPing(), this._currentSid = null
                            }, t.constant = s.default, t.Session = n.default, t
                        }();
                    e.Z = u
                },
                1350: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5605).SVID.SVID_CHATROOM,
                        n = {
                            SVID_CHATROOM: s,
                            CR: {
                                URI_CR_SEND_MSG: s << 16 | 1,
                                URI_CR_SEND_MSG_RES: s << 16 | 2,
                                URI_CR_MSG_TEXT: s << 16 | 10,
                                URI_CR_MSG_FACE: s << 16 | 11,
                                URI_CR_MSG_LIKE: s << 16 | 12,
                                URI_CR_MSG_CUSTOM: s << 16 | 50,
                                URI_CR_NOTICE: s << 16 | 100
                            },
                            noticeType: {
                                CR_NOTICE_ENTER: 1,
                                CR_NOTICE_QUIT: 2,
                                CR_NOTICE_CUSTOM: 100
                            }
                        };
                    e.default = n
                },
                730: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(1350),
                        n = i(5509),
                        a = i(9118),
                        o = i(5344),
                        r = i(5605),
                        u = {};
                    u.CRTextMessage = n.default.Response.extend({
                        category: "LIVE",
                        __type: r.CR_MESSAGE_TYPE.CR_MSG_TYPE_TEXT,
                        uri: s.default.CR.URI_CR_MSG_TEXT,
                        init: function() {
                            this.text = ""
                        },
                        marshall: function() {
                            this.push(this.text, o.default.STRING)
                        },
                        unmarshall: function() {
                            this.text = this.popString()
                        }
                    }), u.CRFaceMessage = n.default.Response.extend({
                        category: "LIVE",
                        __type: r.CR_MESSAGE_TYPE.CR_MSG_TYPE_FACE,
                        uri: s.default.CR.URI_CR_MSG_FACE,
                        init: function() {
                            this.category = "", this.type = "", this.name = ""
                        },
                        marshall: function() {
                            this.push(this.category, o.default.STRING), this.push(this.type, o.default.STRING), this.push(this.name, o.default.STRING)
                        },
                        unmarshall: function() {
                            this.category = this.popString(), this.type = this.popString(), this.name = this.popString()
                        }
                    }), u.CRLikeMessage = n.default.Response.extend({
                        category: "LIVE",
                        __type: r.CR_MESSAGE_TYPE.CR_MSG_TYPE_LIKE,
                        uri: s.default.CR.URI_CR_MSG_LIKE,
                        init: function() {
                            this.times = 0
                        },
                        marshall: function() {
                            this.push(this.times, o.default.INT)
                        },
                        unmarshall: function() {
                            this.times = this.popInt()
                        }
                    }), u.CRCustomMessage = n.default.Response.extend({
                        category: "LIVE",
                        __type: r.CR_MESSAGE_TYPE.CR_MSG_TYPE_CUSTOM,
                        uri: s.default.CR.URI_CR_MSG_CUSTOM,
                        init: function() {
                            this.data = []
                        },
                        marshall: function() {
                            this.push(a.default.strToBytes(this.data), o.default.BYTES)
                        },
                        unmarshall: function() {
                            var t = this.popBytes();
                            this.data = new a.default(t).readUTF8String(t.byteLength)
                        }
                    }), e.default = u
                },
                7420: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(1350),
                        n = i(5509),
                        a = i(5344),
                        o = i(8882),
                        r = i(4053),
                        u = i(6973),
                        h = {};
                    h.CRSendReq = n.default.Response.extend({
                        category: "LIVE",
                        uri: s.default.CR.URI_CR_SEND_MSG,
                        init: function() {
                            this.deviceType = o.default.deviceType, this.uuid = r.default.next(), this.fromUid = "", this.crId = "", this.type, this.message, this.fromName = "", this.cts = u.default.get(), this.mid = "", this.extension = "", this.priority = 0
                        },
                        marshall: function() {
                            this.push(this.deviceType, a.default.BYTE), this.push(this.uuid, a.default.STRING), this.push(this.fromUid, a.default.LONG), this.push(this.crId, a.default.LONG), this.push(this.type), this.push(this.message), this.push(this.fromName, a.default.STRING), this.push(this.cts, a.default.LONG), this.push(this.mid, a.default.LONG), this.push(this.extension, a.default.STRING), this.push(this.priority, a.default.SHORT)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.uuid = this.popString(), this.fromUid = this.popLong().value(), this.crId = this.popLong().value(), this.type = this.popInt(), this.message = n.default.Message.fromBuffer(this.popBytes()), this.fromName = this.popString(), this.cts = this.popLong().value(), this.mid = this.popLong().value(), this.extension = this.popString(), this.priority = this.popShort()
                        }
                    }), h.CRAck = n.default.Response.extend({
                        category: "LIVE",
                        uri: s.default.CR.URI_CR_SEND_MSG_RES,
                        init: function() {
                            this.uuid = "", this.mid = 0, this.cts = u.default.get(), this.rescode = 0, this.deviceType = o.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.uuid, a.default.STRING), this.push(this.mid, a.default.LONG), this.push(this.cts, a.default.LONG), this.push(this.rescode, a.default.INT), this.push(this.deviceType, a.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uuid = this.popString(), this.mid = this.popLong().value(), this.cts = this.popLong().value(), this.rescode = this.popInt(), this.deviceType = this.popByte()
                        }
                    }), h.notice = n.default.Response.extend({
                        category: "LIVE",
                        uri: s.default.CR.URI_CR_NOTICE,
                        init: function() {
                            this.toUid = "", this.crId = "", this.type = 0, this.data = "", this.cts = u.default.get()
                        },
                        marshall: function() {
                            this.push(this.toUid, a.default.LONG), this.push(this.crId, a.default.LONG), this.push(this.type, a.default.INT), this.push(this.data, a.default.STRING), this.push(this.cts, a.default.LONG)
                        },
                        unmarshall: function() {
                            this.toUid = this.popLong().value(), this.crId = this.popLong().value(), this.type = this.popInt(), this.data = this.popString(), this.cts = this.popLong().value()
                        }
                    }), e.default = h
                },
                5161: (t, e, i) => {
                    "use strict";
                    var s = i(8473),
                        n = i(1350),
                        a = i(7420),
                        o = i(730),
                        r = i(5678),
                        u = i(5605),
                        h = function() {
                            function t(t) {
                                this._loginSDK = null, this.constant = n.default, this._loginSDK = t, s.default.on(n.default.CR.URI_CR_SEND_MSG, this._onMessage.bind(this)), s.default.on(n.default.CR.URI_CR_SEND_MSG_RES, this._onAck.bind(this)), s.default.on(n.default.CR.URI_CR_NOTICE, this._onNotice.bind(this))
                            }
                            return t.prototype.sendText = function(t) {
                                var e = t.fromName,
                                    i = void 0 === e ? "" : e,
                                    s = t.fromUid,
                                    n = void 0 === s ? r.default.get("uid") : s,
                                    a = t.crId,
                                    h = void 0 === a ? "" : a,
                                    d = t.priority,
                                    c = void 0 === d ? 10 : d,
                                    p = t.body.text,
                                    l = void 0 === p ? "" : p;
                                if (l) {
                                    var f = new o.default.CRTextMessage({
                                        text: l
                                    });
                                    return this._sendMessage({
                                        fromName: i,
                                        fromUid: n,
                                        crId: h,
                                        priority: c,
                                        type: u.CR_MESSAGE_TYPE.CR_MSG_TYPE_TEXT,
                                        message: f
                                    })
                                }
                                return null
                            }, t.prototype.sendFace = function(t) {
                                var e = t.fromName,
                                    i = void 0 === e ? "" : e,
                                    s = t.fromUid,
                                    n = void 0 === s ? r.default.get("uid") : s,
                                    a = t.crId,
                                    h = void 0 === a ? "" : a,
                                    d = t.priority,
                                    c = void 0 === d ? 10 : d,
                                    p = t.body,
                                    l = p.category,
                                    f = void 0 === l ? "" : l,
                                    _ = p.type,
                                    g = void 0 === _ ? "" : _,
                                    m = p.name,
                                    S = void 0 === m ? "" : m;
                                if (f && g && S) {
                                    var I = new o.default.CRFaceMessage({
                                        category: f,
                                        type: g,
                                        name: S
                                    });
                                    return this._sendMessage({
                                        fromName: i,
                                        fromUid: n,
                                        crId: h,
                                        priority: c,
                                        type: u.CR_MESSAGE_TYPE.CR_MSG_TYPE_FACE,
                                        message: I
                                    })
                                }
                                return null
                            }, t.prototype.sendLike = function(t) {
                                var e = t.fromName,
                                    i = void 0 === e ? "" : e,
                                    s = t.fromUid,
                                    n = void 0 === s ? r.default.get("uid") : s,
                                    a = t.crId,
                                    h = void 0 === a ? "" : a,
                                    d = t.priority,
                                    c = void 0 === d ? 10 : d,
                                    p = t.body.times,
                                    l = void 0 === p ? 0 : p;
                                if (l) {
                                    var f = new o.default.CRLikeMessage({
                                        times: l
                                    });
                                    return this._sendMessage({
                                        fromName: i,
                                        fromUid: n,
                                        crId: h,
                                        priority: c,
                                        type: u.CR_MESSAGE_TYPE.CR_MSG_TYPE_LIKE,
                                        message: f
                                    })
                                }
                                return null
                            }, t.prototype.sendCustom = function(t) {
                                var e = t.fromName,
                                    i = void 0 === e ? "" : e,
                                    s = t.fromUid,
                                    n = void 0 === s ? r.default.get("uid") : s,
                                    a = t.crId,
                                    h = void 0 === a ? "" : a,
                                    d = t.priority,
                                    c = void 0 === d ? 10 : d,
                                    p = t.body.data,
                                    l = void 0 === p ? "" : p;
                                if (l) {
                                    var f = new o.default.CRCustomMessage({
                                        data: l
                                    });
                                    return this._sendMessage({
                                        fromName: i,
                                        fromUid: n,
                                        crId: h,
                                        priority: c,
                                        type: u.CR_MESSAGE_TYPE.CR_MSG_TYPE_CUSTOM,
                                        message: f
                                    })
                                }
                                return null
                            }, t.prototype._sendMessage = function(t) {
                                var e = t.fromName,
                                    i = void 0 === e ? "" : e,
                                    s = t.fromUid,
                                    n = void 0 === s ? r.default.get("uid") : s,
                                    o = t.crId,
                                    u = void 0 === o ? "" : o,
                                    h = t.priority,
                                    d = void 0 === h ? 10 : h,
                                    c = t.type,
                                    p = t.message,
                                    l = new a.default.CRSendReq({
                                        fromName: i,
                                        fromUid: n,
                                        crId: u,
                                        priority: d,
                                        type: c,
                                        message: p
                                    });
                                return this._send(l), this._createMsg(l)
                            }, t.prototype._send = function(t) {
                                try {
                                    this._loginSDK._sendTransUp(n.default.SVID_CHATROOM, t)
                                } catch (t) {
                                    console.error(t)
                                }
                            }, t.prototype._onMessage = function(t) {
                                s.default.emit(u.MESSAGE_EVENT.MESSAGE, this._createMsg(t))
                            }, t.prototype._createMsg = function(t) {
                                return {
                                    crId: t.crId,
                                    cts: t.cts,
                                    fromName: t.fromName,
                                    fromUid: t.fromUid,
                                    mid: t.mid,
                                    uuid: t.uuid,
                                    type: t.type,
                                    extension: t.extension,
                                    priority: t.priority,
                                    body: t.message
                                }
                            }, t.prototype._onAck = function(t) {
                                s.default.emit("ack", {
                                    mid: t.msgId,
                                    msgUuid: t.uuid,
                                    cts: t.cts,
                                    deviceType: t.deviceType,
                                    rescode: t.rescode
                                })
                            }, t.prototype._onNotice = function(t) {
                                s.default.emit("notice", t)
                            }, t.Session = a.default, t.Message = o.default, t.constant = n.default, t
                        }();
                    e.Z = h
                },
                1903: (t, e, i) => {
                    "use strict";
                    var s = i(8473),
                        n = i(9575),
                        a = i(9339),
                        o = function() {
                            function t(t) {
                                this._loginSDK = null, this.constant = n.default, this._loginSDK = t, s.default.on(n.default.Corporation.URI_CORP_BIND, this._bindCorporation.bind(this)), s.default.on(n.default.Corporation.URI_CORP_UNBIND, this._unbindCorporation.bind(this))
                            }
                            return t.prototype._bindCorporation = function(t) {
                                s.default.emit("bindCorporation", t)
                            }, t.prototype._unbindCorporation = function(t) {
                                s.default.emit("unBindCorporation", t)
                            }, t.constant = n.default, t.Session = a.default, t
                        }();
                    e.Z = o
                },
                9605: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5605).SVID.SVID_DATA,
                        n = {
                            SVID_DATA: s,
                            DATA: {
                                URI_DATA_SEND_REQ: s << 16 | 1,
                                URI_DATA_ACK: s << 16 | 21,
                                URI_DATA_SEND_CLIENT_REQ: s << 16 | 10
                            }
                        };
                    e.default = n
                },
                9051: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(9605),
                        n = i(5509),
                        a = i(5344),
                        o = i(8882),
                        r = i(9118),
                        u = i(5678),
                        h = i(6973),
                        d = i(4053),
                        c = {};
                    c.DataSendReq = n.default.Response.extend({
                        category: "DATA",
                        uri: s.default.DATA.URI_DATA_SEND_REQ,
                        init: function() {
                            this.type = 0, this.msgId = 0, this.data = [], this.channel = 0, this.deviceId = u.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.type), this.push(this.msgId, a.default.LONG), "string" == typeof this.data ? this.push(r.default.strToBytes(this.data), a.default.BYTES) : this.push(this.data, a.default.BYTES), this.push(this.channel, a.default.SHORT), this.push(this.deviceId, a.default.STRING)
                        },
                        unmarshall: function() {
                            this.type = this.popInt(), this.msgId = this.popLong().value();
                            var t = this.popBytes();
                            this.data = new r.default(t).readUTF8String(t.byteLength), this.channel = this.popShort(), this.deviceId = this.popString()
                        }
                    }), c.DataSendAck = n.default.Response.extend({
                        category: "DATA",
                        uri: s.default.DATA.URI_DATA_ACK,
                        init: function() {
                            this.uid = "", this.messageIds = [], this.type = 0, this.deviceType = o.default.deviceType, this.data = [], this.deviceId = u.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.uid, a.default.LONG), this.push(this.messageIds, a.default.ARRAY_LONG), this.push(this.type, a.default.INT), this.push(this.deviceType, a.default.BYTE), this.push(this.data, a.default.BYTES), this.push(this.deviceId, a.default.STRING)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.messageIds = this._popArrayLong(), this.type = this.popInt(), this.deviceType = this.popByte(), this.data = this.popBytes(), this.deviceId = this.popString()
                        }
                    }), c.DataSendClientReq = n.default.Response.extend({
                        category: "DATA",
                        uri: s.default.DATA.URI_DATA_SEND_CLIENT_REQ,
                        init: function() {
                            this.uri = s.default.DATA.URI_DATA_SEND_CLIENT_REQ, this.fromUid = 0, this.messageId = 0, this.cts = h.default.get(), this.type = 0, this.deviceType = o.default.deviceType, this.data = [], this.messageUuid = d.default.next(), this.channel = 0, this.deviceId = u.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.fromUid, a.default.LONG), this.push(this.messageId, a.default.LONG), this.push(this.cts, a.default.LONG), this.push(this.type, a.default.INT), this.push(this.deviceType, a.default.BYTE), "string" == typeof this.data ? this.push(r.default.strToBytes(this.data), a.default.BYTES) : this.push(this.data, a.default.BYTES), this.push(this.messageUuid, a.default.STRING), this.push(this.channel, a.default.SHORT), this.push(this.deviceId, a.default.STRING)
                        },
                        unmarshall: function() {
                            this.fromUid = this.popLong().value(), this.messageId = this.popLong().value(), this.cts = this.popLong().value(), this.type = this.popInt(), this.deviceType = this.popByte();
                            var t = this.popBytes();
                            this.data = new r.default(t).readUTF8String(t.byteLength), this.messageUuid = this.popString(), this.channel = this.popShort(), this.deviceId = this.popString()
                        }
                    }), e.default = c
                },
                4583: (t, e, i) => {
                    "use strict";
                    var s = i(8473),
                        n = i(9605),
                        a = i(9051),
                        o = i(5605),
                        r = function() {
                            function t(t) {
                                this._loginSDK = null, this.constant = n.default, this._loginSDK = t, s.default.on(n.default.DATA.URI_DATA_SEND_REQ, this._onmessage.bind(this)), s.default.on("_DATAAcks", this.sendAck.bind(this))
                            }
                            return t.prototype.sendDataMessage = function(t) {
                                var e = t.type,
                                    i = void 0 === e ? 0 : e,
                                    s = t.data,
                                    n = void 0 === s ? "" : s,
                                    o = t.channelId,
                                    r = void 0 === o ? 0 : o,
                                    u = t.fromUid,
                                    h = void 0 === u ? this._loginSDK.getUID() : u,
                                    d = new a.default.DataSendClientReq({
                                        type: i,
                                        data: n,
                                        fromUid: h,
                                        channel: r
                                    });
                                this.send(d)
                            }, t.prototype.send = function(t) {
                                this._loginSDK._sendTransUp(n.default.SVID_DATA, t)
                            }, t.prototype._onmessage = function(t) {
                                this.sendAck([t]), s.default.emit(o.MESSAGE_EVENT.MESSAGE, t), s.default.emit(o.MESSAGE_EVENT.D_MESSAGE, t)
                            }, t.prototype.sendAck = function(t) {
                                var e = this,
                                    i = {};
                                t.forEach((function(t) {
                                    var e = t.type;
                                    i[e] ? i[e].push(t.msgId) : i[e] = [t.msgId]
                                })), Object.keys(i).forEach((function(t) {
                                    var s = i[t];
                                    s && s.length > 0 && e.send(new a.default.DataSendAck({
                                        uid: e._loginSDK.getUID(),
                                        type: t,
                                        messageIds: s
                                    }))
                                }))
                            }, t.Session = a.default, t.constant = n.default, t
                        }();
                    e.Z = r
                },
                3326: (t, e, i) => {
                    "use strict";
                    var s = i(5675);
                    e.Z = {
                        touristRegister: function(t) {
                            t.data.svid = 420, s.default.request("/crinfo/api/v1/registerTourist", t)
                        },
                        enter: function(t) {
                            t.data.svid = 420, s.default.request("/crinfo/api/v1/enter", t)
                        },
                        leave: function(t) {
                            t.data.svid = 420, s.default.request("/crinfo/api/v1/leave", t)
                        },
                        getUsers: function(t) {
                            t.data.svid = 420, s.default.request("/crinfo/api/v1/getUsers", t)
                        },
                        getSomeUsers: function(t) {
                            t.data.svid = 420, s.default.request("/crinfo/api/v1/getSampleUsers", t)
                        },
                        getCurrentUserCount: function(t) {
                            t.data.svid = 420, s.default.request("/crinfo/api/v1/getCurUserCount", t)
                        },
                        getPraiseAndUserCount: function(t) {
                            t.data.svid = 420, s.default.request("/crinfo/api/v1/getStat", t)
                        },
                        getTotalViewCountByLive: function(t) {
                            t.data.svid = 420, s.default.request("/crinfo/api/v1/getTotalViewCountByLive", t)
                        },
                        getPraiseCountByLive: function(t) {
                            t.data.svid = 420, s.default.request("/crinfo/api/v1/getPraiseCountByLive", t)
                        }
                    }
                },
                3680: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5675),
                        n = i(9669),
                        a = i(5678),
                        o = i(8882),
                        r = i(9972),
                        u = {
                            test: ["api.xm.test.sankuai.com/pan/dl"],
                            st: ["api.xm.st.sankuai.com/pan/dl", "file.neixin.cn"],
                            online: ["api.xm.st.sankuai.com/pan/dl", "file.neixin.cn"]
                        },
                        h = function() {
                            function t() {}
                            return t.prototype.deleteRemoteSession = function(t) {
                                s.default.request("/fusion/message/v1/chat/delete/channel", t)
                            }, t.prototype.setPushToken = function(t) {
                                s.default.request("/token/api/v1/set", t)
                            }, t.prototype.deletePushToken = function(t) {
                                s.default.request("/token/api/v1/del", t)
                            }, t.prototype.shouldSetHeadersWhenGetFileBlob = function(t) {
                                var e = t.url,
                                    i = t.env,
                                    s = void 0 === i ? a.default.get("env") : i;
                                return u[s].findIndex((function(t) {
                                    return e.indexOf(t) > -1
                                })) > -1
                            }, t.prototype.getFileBlob = function(t) {
                                var e = t.url,
                                    i = void 0 === e ? "" : e,
                                    s = t.token,
                                    u = void 0 === s ? void 0 : s,
                                    h = {},
                                    d = a.default.get("env");
                                return i ? (this.shouldSetHeadersWhenGetFileBlob({
                                    url: i,
                                    env: d
                                }) && (h = {
                                    "X-Xmftk": u,
                                    ai: a.default.get("appId"),
                                    dt: o.default.deviceType,
                                    u: a.default.get("uid"),
                                    uu: a.default.get("deviceId"),
                                    ck: a.default.get("xsid"),
                                    al: a.default.get("altoken")
                                }), n.default({
                                    url: i,
                                    method: "GET",
                                    responseType: "blob",
                                    headers: h
                                }).then((function(t) {
                                    return t.data
                                }))) : (console.error("文件 url 为空"), r.default.resolve())
                            }, t.prototype.getAuthFreeTempFileURL = function(t) {
                                return s.default.request("/file/sign_for_authfree_url", t)
                            }, t.prototype.getEmoticonsPackages = function(t) {
                                return s.default.request("/uinfo/api/v1/stickerConf/getPackages", t)
                            }, t.prototype.getOneEmoticonsSticker = function(t) {
                                return s.default.request("/uinfo/api/v1/stickerConf/getOneSticker", t)
                            }, t
                        }();
                    e.default = new h
                },
                3308: (t, e, i) => {
                    "use strict";
                    var s, n;
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var a = i(5678),
                        o = i(5605),
                        r = ((s = {})[o.ENV.TEST] = {
                            routerMap: {
                                host: "http://api.xm.test.sankuai.com",
                                "/file": "http://api.xm.test.sankuai.com/pan/dl"
                            }
                        }, s[o.ENV.ST] = {
                            routerMap: {
                                host: "http://api.xm.st.sankuai.com",
                                "/file": "http://api.xm.st.sankuai.com/pan/dl"
                            }
                        }, s[o.ENV.ONLINE] = {
                            routerMap: {
                                host: "https://api.neixin.cn",
                                "/crinfo": "https://chatroom.meituan.com",
                                "/file": "https://file.neixin.cn"
                            }
                        }, s),
                        u = ((n = {})[o.ENV.TEST] = {
                            routerMap: {
                                host: "https://api.xm.test.sankuai.com",
                                "/file": "https://api.xm.test.sankuai.com/pan/dl"
                            }
                        }, n[o.ENV.ST] = {
                            routerMap: {
                                host: "https://api.xm.st.sankuai.com",
                                "/file": "http://api.xm.st.sankuai.com/pan/dl"
                            }
                        }, n[o.ENV.ONLINE] = {
                            routerMap: {
                                host: "https://api.neixin.cn",
                                "/crinfo": "https://chatroom.meituan.com",
                                "/file": "https://file.neixin.cn"
                            }
                        }, n);
                    e.default = function() {
                        return !1 !== a.default.get("useHTTPS") ? u : r
                    }
                },
                6528: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5605),
                        n = s.SVID.SVID_MSG_LOGIC,
                        a = {
                            SVID_LVS: s.SVID.SVID_LVS,
                            HTTP: {
                                URI_MSG_HISTORY_REQ: n << 16 | 10,
                                URI_MSG_HISTORY_RES: n << 16 | 11,
                                URI_MSG_CHATLIST_REQ: n << 16 | 12,
                                URI_MSG_CHATLIST_RES: n << 16 | 13,
                                URI_DXLVS_PLVS2: n << 16 | 14,
                                URI_DXLVS_PLVS_RES2: n << 16 | 22,
                                URI_DXLVS_PLVS_LOGIN_ADDR2: n << 16 | 23
                            }
                        };
                    e.default = a
                },
                5675: function(t, e, i) {
                    "use strict";
                    var s = this && this.__assign || function() {
                        return (s = Object.assign || function(t) {
                            for (var e, i = 1, s = arguments.length; i < s; i++)
                                for (var n in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                            return t
                        }).apply(this, arguments)
                    };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var n = i(8473),
                        a = i(9669),
                        o = i(5509),
                        r = i(3308),
                        u = i(5605),
                        h = i(3257),
                        d = i(9118),
                        c = i(4053),
                        p = i(7486),
                        l = i(5605),
                        f = i(823),
                        _ = "",
                        g = {},
                        m = null,
                        S = l.ENV.ONLINE,
                        I = function() {
                            return {
                                headers: null,
                                data: null,
                                query: null
                            }
                        };
                    e.default = {
                        setHeader: function(t) {
                            g = t
                        },
                        setBeforeSendCallback: function(t) {
                            I = t
                        },
                        setEnv: function(t, e) {
                            void 0 === t && (t = l.ENV.ONLINE), void 0 === e && (e = {});
                            var i = r.default();
                            t !== l.ENV.ONLINE && t !== l.ENV.ST && t !== l.ENV.TEST && (t = l.ENV.ONLINE), i[t] = s(s({}, i[t]), e), S = t
                        },
                        getEnv: function() {
                            return S
                        },
                        setDefaultDomain: function(t) {
                            m = t
                        },
                        request: function(t, e, i) {
                            return void 0 === t && (t = ""), !(!g && !i) && (!!t && (e.url = t, e.proxy = e.proxy || !1, this._send(e), !0))
                        },
                        getProxyPath: function() {
                            return _
                        },
                        setProxyPath: function(t) {
                            _ = t
                        },
                        _send: function(t) {
                            var e = t.url,
                                i = t.proxy,
                                n = t.type || "POST",
                                o = t.data || {},
                                u = t.success,
                                d = t.error,
                                l = t.timeout || 3e4,
                                _ = r.default()[S],
                                T = c.default.next();
                            if (m) e = m + e;
                            else if (i) e = "/proxy" + e;
                            else {
                                for (var v = e.match(/^\/\w+/g), E = 0, y = _.routerMap; v[E] && "string" != typeof(y = y[v[E++]]) && y;);
                                if ("string" != typeof y && (y = _.routerMap.host), f.default) {
                                    var R = this.getProxyPath();
                                    R && (y = /\/$/.test(R) ? R : R + "/")
                                }
                                e = y + e
                            }
                            var M = g;
                            if (t.headers && (M = s(s({}, M), t.headers)), "POST" === n && (M["Content-Type"] = !t.formData && "application/json"), p.default.isFunction(I)) {
                                var N = I(),
                                    U = N.headers,
                                    A = N.data,
                                    O = N.query;
                                if (p.default.isObject(U) && (M = s(s({}, M), U)), p.default.isObject(A) && (o = s(s({}, o), A)), p.default.isObject(O)) {
                                    var C = "";
                                    for (var P in O) C += P + "=" + O[P];
                                    e += "?" + C
                                }
                            }
                            "string" == typeof e && (o = JSON.stringify(o), "GET" === n && (o = ""), a.default({
                                url: e,
                                method: n,
                                headers: i ? {} : M,
                                data: o,
                                timeout: l
                            }).then((function(t) {
                                var i = t.data;
                                u && u(i, t), h.default.report({
                                    nm: "send_request_success",
                                    val: {
                                        url: e,
                                        code: i && void 0 !== i.rescode ? i.rescode : -123456,
                                        id: T
                                    }
                                })
                            })).catch((function(t) {
                                h.default.report({
                                    nm: "send_request_fail",
                                    val: {
                                        id: T
                                    }
                                }), d && d(t)
                            })), h.default.report({
                                nm: "send_request",
                                val: {
                                    url: e,
                                    data: JSON.stringify(o),
                                    id: T
                                }
                            }))
                        },
                        _offline: function(t, e, i) {
                            void 0 === t && (t = "");
                            var s = e.success,
                                a = e.error;
                            switch (e.data.u = g.u, e.data.ai = g.ai, e.data.dt = g.dt, e.success = function(t) {
                                    var a = [];
                                    if (0 === t.rescode) {
                                        for (var r = t.data.res, d = [], c = 0; c < r.length; c++) try {
                                            r[c] = o.default.Response.fromBase64(r[c]);
                                            for (var p = 0; p < r[c].msgs.length; p++) {
                                                d.push(r[c].msgs[p]);
                                                try {
                                                    a.push(r[c].msgs[p].msgId ? r[c].msgs[p].msgId.toString() : "")
                                                } catch (t) {
                                                    console.log("offline 统计异常,不影响正常逻辑")
                                                }
                                            }
                                        } catch (t) {
                                            console.error("~~~~~offline 解析失败，当前原始数据"), console.error(r[c])
                                        }
                                        d.length && !e.noAck && (401 === e.data.svid ? n.default.emit("__IMAck", d) : n.default.emit("__PubAck", d))
                                    }
                                    switch (s(t), i) {
                                        case u.LOG_FROM_SOURCE.CHAT:
                                            h.default.report({
                                                nm: "message_fetch_chat_offline_success",
                                                val: {
                                                    count: a.length,
                                                    mids: a
                                                }
                                            });
                                            break;
                                        case u.LOG_FROM_SOURCE.GROUP:
                                            h.default.report({
                                                nm: "message_fetch_group_offline_success",
                                                val: {
                                                    count: a.length,
                                                    mids: a
                                                }
                                            });
                                            break;
                                        case u.LOG_FROM_SOURCE.PUB:
                                            h.default.report({
                                                nm: "message_fetch_pub_offline_success",
                                                val: {
                                                    count: a.length,
                                                    mids: a
                                                }
                                            })
                                    }
                                }, e.error = function(t) {
                                    switch (a && a(t), i) {
                                        case u.LOG_FROM_SOURCE.CHAT:
                                            h.default.report({
                                                nm: "message_fetch_chat_offline_error",
                                                val: {
                                                    code: t && t.request && t.request.status ? t.request.status : void 0
                                                }
                                            });
                                            break;
                                        case u.LOG_FROM_SOURCE.GROUP:
                                            h.default.report({
                                                nm: "message_fetch_group_offline_error",
                                                val: {
                                                    code: t && t.request && t.request.status ? t.request.status : void 0
                                                }
                                            });
                                            break;
                                        case u.LOG_FROM_SOURCE.PUB:
                                            h.default.report({
                                                nm: "message_fetch_pub_offline_error",
                                                val: {
                                                    code: t && t.request && t.request.status ? t.request.status : void 0
                                                }
                                            })
                                    }
                                }, this.request(t, e), i) {
                                case u.LOG_FROM_SOURCE.CHAT:
                                    h.default.report("message_fetch_chat_offline_start");
                                    break;
                                case u.LOG_FROM_SOURCE.GROUP:
                                    h.default.report("message_fetch_group_offline_start");
                                    break;
                                case u.LOG_FROM_SOURCE.PUB:
                                    h.default.report("message_fetch_pub_offline_start")
                            }
                        },
                        _dataOffline: function(t, e, i) {
                            void 0 === t && (t = "");
                            var s = e.success,
                                a = e.error;
                            e.data.u = g.u, e.data.ai = g.ai, e.data.dt = g.dt, e.success = function(e) {
                                var i = [];
                                if (0 === e.rescode) {
                                    for (var a = e.data.res, r = [], u = 0; u < a.length; u++) try {
                                        a[u] = o.default.Response.fromBase64(a[u]);
                                        for (var c = 0; c < a[u].msgs.length; c++) {
                                            var p = a[u].msgs[c].data;
                                            try {
                                                a[u].msgs[c].data = new d.default(p).readUTF8String(p.byteLength)
                                            } catch (t) {}
                                            r.push(a[u].msgs[c])
                                        }
                                    } catch (t) {
                                        console.error("~~~~~offline 解析失败，当前原始数据"), console.error(a[u])
                                    }
                                    n.default.emit("_DATAAcks", r)
                                }
                                s(e), h.default.report({
                                    nm: "message_fetch_data_offline_success",
                                    val: {
                                        url: t,
                                        count: i.length,
                                        mids: i
                                    }
                                })
                            }, e.error = function(t) {
                                a && a(t), h.default.report({
                                    nm: "message_fetch_data_offline_error",
                                    val: {
                                        code: t && t.request && t.request.status ? t.request.status : void 0
                                    }
                                })
                            }, this.request(t, e), h.default.report("message_fetch_data_offline_start")
                        },
                        _history: function(t, e, i) {
                            void 0 === t && (t = "");
                            var s = Date.now(),
                                n = e.success,
                                a = e.error;
                            switch (e.data.u = g.u, e.data.ai = g.ai, e.success = function(t) {
                                    var a = [];
                                    if (0 === t.rescode)
                                        for (var r = t.data.res, d = 0; d < r.length; d++) try {
                                            r[d] = o.default.Response.fromBase64(r[d]);
                                            try {
                                                a = a.concat(r[d].msgs.map((function(t) {
                                                    return t && t.msgId ? t.msgId.toString() : ""
                                                })))
                                            } catch (t) {
                                                console.error("history 统计异常,不影响正常逻辑")
                                            }
                                        } catch (t) {
                                            console.error("~~~~~history 解析失败，当前原始数据"), console.error(r[d])
                                        }
                                    switch (n(t), i) {
                                        case u.LOG_FROM_SOURCE.CHAT:
                                            h.default.report({
                                                nm: "message_fetch_chat_history_success",
                                                val: {
                                                    time: Date.now() - s,
                                                    chat: e && e.data && e.data.bs && e.data.bs[0] ? e.data.bs[0].b : "0",
                                                    count: a.length,
                                                    mids: a
                                                }
                                            });
                                            break;
                                        case u.LOG_FROM_SOURCE.GROUP:
                                            h.default.report({
                                                nm: "message_fetch_group_history_success",
                                                val: {
                                                    time: Date.now() - s,
                                                    chat: e && e.data && e.data.bs && e.data.bs[0] ? e.data.bs[0].b : "0",
                                                    count: a.length,
                                                    mids: a
                                                }
                                            });
                                            break;
                                        case u.LOG_FROM_SOURCE.PUB:
                                            h.default.report({
                                                nm: "message_fetch_pub_history_success",
                                                val: {
                                                    time: Date.now() - s,
                                                    chat: e && e.data && e.data.ps && e.data.ps[0] ? e.data.ps[0].u : "0",
                                                    count: a.length,
                                                    mids: a
                                                }
                                            })
                                    }
                                }, e.error = function(t) {
                                    switch (a && a(t), i) {
                                        case u.LOG_FROM_SOURCE.CHAT:
                                            h.default.report({
                                                nm: "message_fetch_chat_history_error",
                                                val: {
                                                    chat: e && e.data && e.data.bs && e.data.bs[0] ? e.data.bs[0].b : "0",
                                                    code: t && t.request && t.request.status ? t.request.status : void 0
                                                }
                                            });
                                            break;
                                        case u.LOG_FROM_SOURCE.GROUP:
                                            h.default.report({
                                                nm: "message_fetch_group_history_error",
                                                val: {
                                                    chat: e && e.data && e.data.bs && e.data.bs[0] ? e.data.bs[0].b : "0",
                                                    code: t && t.request && t.request.status ? t.request.status : void 0
                                                }
                                            });
                                            break;
                                        case u.LOG_FROM_SOURCE.PUB:
                                            h.default.report({
                                                nm: "message_fetch_pub_history_error",
                                                val: {
                                                    chat: e && e.data && e.data.ps && e.data.ps[0] ? e.data.ps[0].u : "0",
                                                    code: t && t.request && t.request.status ? t.request.status : void 0
                                                }
                                            })
                                    }
                                }, this.request(t, e), i) {
                                case u.LOG_FROM_SOURCE.CHAT:
                                    h.default.report({
                                        nm: "message_fetch_chat_history_start",
                                        val: {
                                            chat: e && e.data && e.data.bs && e.data.bs[0] ? e.data.bs[0].b : "0"
                                        }
                                    });
                                    break;
                                case u.LOG_FROM_SOURCE.GROUP:
                                    h.default.report({
                                        nm: "message_fetch_group_history_start",
                                        val: {
                                            chat: e && e.data && e.data.bs && e.data.bs[0] ? e.data.bs[0].b : "0"
                                        }
                                    });
                                    break;
                                case u.LOG_FROM_SOURCE.PUB:
                                    h.default.report({
                                        nm: "message_fetch_pub_history_start",
                                        val: {
                                            chat: e && e.data && e.data.ps && e.data.ps[0] ? e.data.ps[0].u : "0"
                                        }
                                    })
                            }
                        },
                        _chatlist: function(t, e) {
                            void 0 === t && (t = "");
                            var i = e.success,
                                s = e.error;
                            e.data.u = g.u, e.data.ai = g.ai, e.data.svid = 401, e.success = function(e) {
                                var s = [];
                                if (0 === e.rescode)
                                    for (var n = e.data.res, a = 0; a < n.length; a++) try {
                                        n[a] = o.default.Response.fromBase64(n[a]);
                                        try {
                                            s = s.concat(n[a].msgs.map((function(t) {
                                                return t && t.msgId ? t.msgId.toString() : ""
                                            })))
                                        } catch (t) {
                                            console.error("chatlist 统计异常,不影响正常逻辑")
                                        }
                                    } catch (t) {
                                        console.error("~~~~~chatlist 解析失败，当前原始数据"), console.error(n[a])
                                    }
                                i(e), h.default.report({
                                    nm: "message_im_sessionlist_success",
                                    val: {
                                        url: t,
                                        count: s.length,
                                        mids: s
                                    }
                                })
                            }, e.error = function(t) {
                                s && s(t), h.default.report({
                                    nm: "message_im_sessionlist_error",
                                    val: {
                                        code: t && t.request && t.request.status ? t.request.status : void 0
                                    }
                                })
                            }, this.request(t, e), h.default.report({
                                nm: "message_im_sessionlist_start",
                                val: {
                                    url: t
                                }
                            })
                        },
                        _pubChatlist: function(t, e) {
                            void 0 === t && (t = "");
                            var i = e.success,
                                s = e.error;
                            e.data.u = g.u, e.data.ai = g.ai, e.success = function(e) {
                                var s = e.data,
                                    n = s ? s.res : [],
                                    a = [];
                                if (n.length)
                                    for (var r = 0; r < n.length; r++) try {
                                        n[r] = o.default.Response.fromBase64(n[r]);
                                        try {
                                            a = a.concat(n[r].msgs.map((function(t) {
                                                return t && t.msgId ? t.msgId.toString() : ""
                                            })))
                                        } catch (t) {
                                            console.log("pubChatlist 统计异常,不影响正常逻辑")
                                        }
                                    } catch (t) {
                                        console.error("~~~~~history  解析失败，当前原始数据"), console.error(s[r])
                                    }
                                i(e), h.default.report({
                                    nm: "message_pub_sessionlist_success",
                                    val: {
                                        url: t,
                                        count: a.length,
                                        mids: a
                                    }
                                })
                            }, e.error = function(t) {
                                s && s(t), h.default.report({
                                    nm: "message_pub_sessionlist_error",
                                    val: {
                                        code: t && t.request && t.request.status ? t.request.status : void 0
                                    }
                                })
                            }, this.request(t, e), h.default.report({
                                nm: "message_pub_sessionlist_start",
                                val: {
                                    url: t
                                }
                            })
                        },
                        _pubChatListFromRecentMessages: function(t, e) {
                            void 0 === t && (t = "");
                            var i = e.success,
                                s = e.error;
                            e.data.ai = g.ai, e.success = function(e) {
                                var s = e.data,
                                    n = s ? s.res : [],
                                    a = [];
                                if (n.length)
                                    for (var r = 0; r < n.length; r++) try {
                                        n[r] = o.default.Response.fromBase64(n[r]);
                                        try {
                                            a = a.concat(n[r].msgs.map((function(t) {
                                                return t && t.msgId ? t.msgId.toString() : ""
                                            })))
                                        } catch (t) {
                                            console.log("pubChatlist 统计异常,不影响正常逻辑")
                                        }
                                    } catch (t) {
                                        console.error("~~~~~history  解析失败，当前原始数据"), console.error(s[r])
                                    }
                                i(e), h.default.report({
                                    nm: "message_pub_sessionlist_success",
                                    val: {
                                        url: t,
                                        count: a.length,
                                        mids: a
                                    }
                                })
                            }, e.error = function(t) {
                                s && s(t), h.default.report({
                                    nm: "message_pub_sessionlist_error",
                                    val: {
                                        code: t && t.request && t.request.status ? t.request.status : void 0
                                    }
                                })
                            }, this.request(t, e), h.default.report({
                                nm: "message_pub_sessionlist_start",
                                val: {
                                    url: t
                                }
                            })
                        },
                        _kefuChatlist: function(t, e) {
                            void 0 === t && (t = "");
                            var i = e.success,
                                s = e.error;
                            e.data.u = g.u, e.data.ai = g.ai, e.success = function(t) {
                                var e = t.data,
                                    s = e ? e.chatlist : [];
                                if (s.length)
                                    for (var n = 0; n < s.length; n++) try {
                                        s[n] = o.default.Response.fromBase64(s[n])
                                    } catch (t) {
                                        console.error("~~~~~history  解析失败，当前原始数据"), console.error(e[n])
                                    }
                                i(t)
                            }, e.error = function(t) {
                                s && s(t), h.default.report({
                                    nm: "message_kefu_sessionlist_error",
                                    val: {
                                        code: t && t.request && t.request.status ? t.request.status : void 0
                                    }
                                })
                            }, this.request(t, e)
                        }
                    }
                },
                9770: (t, e, i) => {
                    "use strict";
                    var s = i(5675),
                        n = i(5605);
                    e.Z = {
                        offline: function(t) {
                            s.default._dataOffline("/msg/api/data/v1/offline", t, n.LOG_FROM_SOURCE.DATA)
                        }
                    }
                },
                82: (t, e, i) => {
                    "use strict";
                    var s = i(5509),
                        n = i(5605),
                        a = i(5675),
                        o = i(9794),
                        r = i(5678);
                    e.Z = {
                        offline: function(t) {
                            t.data.svid = 401, a.default._offline("/msg/api/chat/v1/offline/1v1", t, n.LOG_FROM_SOURCE.CHAT)
                        },
                        offlineGroup: function(t) {
                            t.data.svid = 401, a.default._offline("/msg/api/chat/v1/offline/group", t, n.LOG_FROM_SOURCE.GROUP)
                        },
                        readSync: function(t) {
                            t.data.req && (t.data.req = t.data.req.getBase64()), a.default.request("/uinfo/api/v1/read/sync", t)
                        },
                        chats: function(t) {
                            var e = t.success;
                            t.data && !t.data.ch && (t.data.ch = 0), t.success = function(t) {
                                0 === t.rescode && (t.data.sync_data = s.default.Response.fromBase64(t.data.sync_data)), e(t)
                            }, a.default.request("/read/api/v2/list", t)
                        },
                        chatlistByTime: function(t) {
                            t.data.svid = 401, a.default._chatlist("/msg/api/chat/v3/chatlist/appid", t)
                        },
                        historyOfChannelByRange: function(t) {
                            t.data.svid = 401, a.default._history("/msg/api/chat/v3/history/channel/range", t, t.data && t.data.bs && t.data.bs[0] && t.data.bs[0].g ? n.LOG_FROM_SOURCE.GROUP : n.LOG_FROM_SOURCE.CHAT)
                        },
                        historyReverseById: function(t) {
                            t.data.svid = 401, a.default._history("/msg/api/chat/v1/history/reverse/byid", t, t.data && t.data.bs && t.data.bs[0] && t.data.bs[0].g ? n.LOG_FROM_SOURCE.GROUP : n.LOG_FROM_SOURCE.CHAT)
                        },
                        topChatlist: function(t) {
                            var e = t.success;
                            t.data.u = r.default.get("uid"), t.data.ai = r.default.get("appId"), t.success = function(t) {
                                var i = t.data.res;
                                if (0 === t.rescode)
                                    for (var n = 0; n < i.length; n++) try {
                                        i[n] = s.default.Response.fromBase64(i[n])
                                    } catch (t) {
                                        n >
                                            0 && (console.error("~~~~~ : topChatlist解析失败，上一条记录"), console.error(s.default.Response.fromBase64(i[n - 1]))), console.error("~~~~~topChatlist 解析失败，当前原始数据"), console.error(i[n])
                                    }
                                e(t)
                            }, a.default.request("/fusion/message/v1/chat/favorite/get", t)
                        },
                        single: function(t) {
                            t.data.svid = 401, a.default._history("/msg/api/chat/v1/message/single", t, n.LOG_FROM_SOURCE.CHAT)
                        },
                        getPreviousMessage: function(t) {
                            var e = t.success;
                            t.data.u = r.default.get("uid"), t.data.ai = r.default.get("appId"), t.data.svid = 401, t.data.bs && (t.data.bs.ai = 1, t.data.bs.chid = 0), t.success = function(t) {
                                var i = t.data.res;
                                if (0 === t.rescode)
                                    for (var n = 0; n <
                                        i.length; n++) try {
                                        i[n] = s.default.Response.fromBase64(i[n])
                                    } catch (t) {
                                        n >
                                            0 && (console.error("~~~~~ : topChatlist解析失败，上一条记录"), console.error(s.default.Response.fromBase64(i[n - 1]))), console.error("~~~~~topChatlist 解析失败，当前原始数据"), console.error(i[n])
                                    }
                                e(t)
                            }, a.default.request("/msg/api/chat/v3/message/previous", t)
                        },
                        createGroup: function(t) {
                            a.default.request("/ginfo/api/v1/reg", t)
                        },
                        fetchGroup: function(t) {
                            a.default.request("/ginfo/api/v1/get", t)
                        },
                        fetchGroupMembers: function(t) {
                            a.default.request("/ginfo/api/v2/occupant/members", t)
                        },
                        fetchGroupPermissions: function(t) {
                            a.default.request("/ginfo/api/v1/getperm", t)
                        },
                        fetchJoinTime: function(t) {
                            a.default.request("/ginfo/api/v1/occupant/jointime", t)
                        },
                        addGroupMembers: function(t) {
                            a.default.request("/ginfo/api/v1/occupant/add", t)
                        },
                        removeGroupMembers: function(t) {
                            a.default.request("/ginfo/api/v1/occupant/remove", t)
                        },
                        setGroupMemberRole: function(t) {
                            a.default.request("/ginfo/api/v1/occupant/setrole", t)
                        },
                        transferGroup: function(t) {
                            a.default.request("/ginfo/api/v1/occupant/setowner", t)
                        },
                        quitGroup: function(t) {
                            a.default.request("/ginfo/api/v1/occupant/exit", t)
                        },
                        dismissGroup: function(t) {
                            a.default.request("ginfo/api/v1/del", t)
                        },
                        setGroupInfo: function(t) {
                            a.default.request("ginfo/api/v1/set", t)
                        },
                        fetchGroupNotice: function(t) {
                            a.default.request("/mtinfo/api/v1/groupAnnouncement/getIndex", t)
                        },
                        addGroupNotice: function(t) {
                            a.default.request("/mtinfo/api/v1/groupAnnouncement/add", t)
                        },
                        removeGroupNotice: function(t) {
                            a.default.request("/mtinfo/api/v1/groupAnnouncement/remove", t)
                        },
                        readGroupNotice: function(t) {
                            a.default.request("/mtinfo/api/v1/groupAnnouncement/read", t)
                        },
                        getGroupNoticeAuth: function(t) {
                            a.default.request("/mtinfo/api/v1/groupAnnouncement/canDoAuth", t)
                        },
                        getGroupNoticeUnreadList: function(t) {
                            a.default.request("/mtinfo/api/v1/groupAnnouncement/getUnreadUserList", t)
                        },
                        sendGroupEventMessage: function(t) {
                            a.default.request("/mtinfo/api/v1/groupAnnouncement/groupNotify", t)
                        },
                        setGroupPermissions: function(t) {
                            a.default.request("ginfo/api/v1/setperm", t)
                        },
                        getOppositeConfig: function(t) {
                            o.default(t.data, ["tenant"]) && a.default.request("/msg/api/read/v1/config/tenant/opposite", t)
                        },
                        getBothOppositeUnreadMsg: function(t) {
                            t && t.data && !t.data.svid && (t.data.svid = 401), o.default(t.data, ["buddy", "svid", "channel", "smsgids", "bmsgids"]) && a.default.request("/msg/api/read/v1/opposite/im/unread/bothchats", t)
                        },
                        getChannelBothOppositeUnreadMsg: function(t) {
                            t && t.data && !t.data.svid && (t.data.svid = 401), o.default(t.data, ["buddy", "svid", "channel", "smsgids", "bmsgids"]) && a.default.request("/msg/api/read/v1/opposite/im/unread/channel/bothchats", t)
                        },
                        getUserVcard: function(t) {
                            a.default.request("/uinfo/api/v1/user/get", t)
                        },
                        getGroupReceiptMessageList: function(t) {
                            a.default.request("/receipt/api/v1/group/list", t)
                        },
                        getGroupReceiptMessageCount: function(t) {
                            a.default.request("/receipt/api/v1/group/count", t)
                        },
                        getGroupReceiptConfig: function(t) {
                            a.default.request("/receipt/api/v1/group/config", t)
                        }
                    }
                },
                3112: (t, e, i) => {
                    "use strict";
                    var s = i(5509),
                        n = i(5675),
                        a = i(5605),
                        o = i(3257);
                    e.Z = {
                        getServingSessionList: function(t) {
                            var e = t.success;
                            t.success = function(t) {
                                0 === t.rescode && (t.data.chatlist = t.data.chatlist.map((function(t) {
                                    return t.lastMsg = s.default.Response.fromBase64(t.lastMsg), t
                                }))), e(t)
                            }, n.default.request("/kefu/api/chatlist/v3/serving", t)
                        },
                        getDoneSessionList: function(t) {
                            var e = t.success;
                            t.success = function(t) {
                                0 === t.rescode && (t.data.chatlist = t.data.chatlist.filter((function(t) {
                                    return t.lastMsg
                                })).map((function(t) {
                                    return t.lastMsg && (t.lastMsg = s.default.Response.fromBase64(t.lastMsg)), t
                                }))), e(t)
                            }, n.default.request("/kefu/api/chatlist/v3/done", t)
                        },
                        getHistoryMessages: function(t) {
                            var e = t.success;
                            t.success = function(i) {
                                var n;
                                try {
                                    0 === i.rescode && i.data.res.length > 0 ? (n = s.default.Response.fromBase64(i.data.res[0]), e({
                                        next: i.data.next,
                                        messageData: n.msgs
                                    }), o.default.report({
                                        nm: "message_fetch_kefu_history_success",
                                        val: {
                                            chat: t && t.data ? t.data.u : "0",
                                            type: 1,
                                            count: n.msgs.length,
                                            mids: n.msgs.map((function(t) {
                                                return t.msgId.toString()
                                            }))
                                        }
                                    })) : e({
                                        next: 0,
                                        messageData: []
                                    })
                                } catch (t) {
                                    e({
                                        next: 0,
                                        messageData: []
                                    })
                                }
                            }, t.error = function(t) {
                                o.default.report({
                                    nm: "message_fetch_kefu_history_error",
                                    val: {
                                        code: t && t.request && t.request.status ? t.request.status : void 0
                                    }
                                })
                            }, n.default.request("/msg/api/kefu/v1/history/chat/kf/mergebyuid/channel", t), o.default.report({
                                nm: "message_fetch_kefu_history_start",
                                val: {
                                    chat: t && t.data ? t.data.u : "0",
                                    type: 1
                                }
                            })
                        },
                        getHistoryMessagesByRange: function(t) {
                            var e = t.success;
                            t.success = function(i) {
                                var n;
                                try {
                                    0 === i.rescode && i.data.res.length > 0 ? (n = s.default.Response.fromBase64(i.data.res[0]), e({
                                        next: i.data.next,
                                        messageData: n.msgs
                                    }), o.default.report({
                                        nm: "message_fetch_kefu_history_success",
                                        val: {
                                            chat: t && t.data ? t.data.u : "0",
                                            type: 1,
                                            count: n.msgs.length,
                                            mids: n.msgs.map((function(t) {
                                                return t.msgId.toString()
                                            }))
                                        }
                                    })) : e({
                                        next: 0,
                                        messageData: []
                                    })
                                } catch (t) {
                                    e({
                                        next: 0,
                                        messageData: []
                                    })
                                }
                            }, t.error = function(t) {
                                o.default.report({
                                    nm: "message_fetch_kefu_history_error",
                                    val: {
                                        code: t && t.request && t.request.status ? t.request.status : void 0
                                    }
                                })
                            }, n.default.request("/msg/api/kefu/v1/history/chat/kf/byrange/channel", t), o.default.report({
                                nm: "message_fetch_kefu_history_start",
                                val: {
                                    chat: t && t.data ? t.data.u : "0",
                                    type: 2
                                }
                            })
                        },
                        getHistoryMessagesToC: function(t) {
                            t.data && (t.data.svid = 415, t.data.id = t.data.id || "9223372036854775806"), n.default._history("/msg/api/kefu/v1/history/chat/byid/channel", t, a.LOG_FROM_SOURCE.KEFU)
                        },
                        getRemoteSessionListToC: function(t) {
                            n.default._kefuChatlist("/kefu/api/info/v1/getChatlist/byChannelId", t)
                        },
                        getOfflineMessages: function(t) {
                            t.data && (t.data.svid = 415), n.default._offline("/msg/api/kefu/v1/offline/chat", t)
                        }
                    }
                },
                4327: function(t, e, i) {
                    "use strict";
                    var s = this && this.__assign || function() {
                        return (s = Object.assign || function(t) {
                            for (var e, i = 1, s = arguments.length; i <
                                s; i++)
                                for (var n in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                            return t
                        }).apply(this, arguments)
                    };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var n = i(5675),
                        a = i(5605),
                        o = i(8882),
                        r = i(5678);
                    e.default = {
                        getVisitorUidAndToken: function(t) {
                            t.data = {
                                ai: r.default.get("appId"),
                                dt: o.default.deviceType
                            }, n.default.request("/account/api/v3/web/login/anonymity", t, !0)
                        },
                        getRemoteLoginAddr: function(t) {
                            void 0 === t && (t = {
                                data: {}
                            });
                            var e = t.success,
                                i = !!r.default.get("useChatRoomURL");
                            t.data = s(s({}, t.data), {
                                uid: r.default.get("uid"),
                                ai: r.default.get("appId"),
                                dt: o.default.deviceType,
                                lt: r.default.get("useHTTPS") || r.default.get("env") === a.ENV.ONLINE ? 3 : 2,
                                cnt: 1,
                                supportCr: i
                            }), t.success = function(t) {
                                var i = t.rescode,
                                    s = t.data;
                                e(0 === i ? {
                                    websocketAddr: s.websocketAddr.filter((function(t) {
                                        return t
                                    })),
                                    longPollingAddr: s.longPollingAddr.filter((function(t) {
                                        return t
                                    }))
                                } : {
                                    websocketAddr: [],
                                    longPollingAddr: []
                                })
                            }, n.default.request("/dxlvs/open/v2/lgservers/json", t, !0)
                        }
                    }
                },
                221: (t, e, i) => {
                    "use strict";
                    var s = i(5675),
                        n = i(5605),
                        a = i(5509),
                        o = i(5678);
                    e.Z = {
                        chatlistByTime: function(t) {
                            s.default._pubChatlist("/msg/api/pub/v1/chatlist", t)
                        },
                        chatListByAppId: function(t) {
                            s.default._pubChatlist("/pubread/v2/user/chat/getPubList/byAppId", t)
                        },
                        offline: function(t) {
                            t.data.svid = 410, s.default._offline("/msg/api/pub/v1/offline/chat", t, n.LOG_FROM_SOURCE.PUB)
                        },
                        historyOfChannelByRange: function(t) {
                            t.data.svid = 410, s.default._history("/msg/api/pub/v3/history/chat/range", t, n.LOG_FROM_SOURCE.PUB)
                        },
                        historyReverseOfChannelByRange: function(t) {
                            t.data.svid = 410, s.default._history("/msg/api/pub/v3/history/chat/reverse/range", t, n.LOG_FROM_SOURCE.PUB)
                        },
                        historyReverseById: function(t) {
                            t.data.svid = 410, s.default._history("/msg/api/pub/v1/history/chat/reverse/byid", t, n.LOG_FROM_SOURCE.PUB)
                        },
                        single: function(t) {
                            t.data.svid = 410, s.default._history("/msg/api/pub/v1/single", t, n.LOG_FROM_SOURCE.PUB)
                        },
                        _unreads: function(t, e) {
                            var i = e.success;
                            e.success = function(t) {
                                0 === t.rescode && (t.data.sync_data = a.default.Response.fromBase64(t.data.sync_data)), i(t)
                            }, s.default.request(t, e)
                        },
                        readSync: function(t) {
                            t.data.req = t.data.req.getBase64(), s.default.request("/pubread/v1/user/chat/sync", t)
                        },
                        unreads: function(t) {
                            this._unreads("/pubread/v2/user/chat/getUnread", t)
                        },
                        getPubUnreadList: function(t) {
                            this._unreads("/v2/user/chat/getUnread", t)
                        },
                        getPreviousMessage: function(t) {
                            var e = t.success;
                            t.data.u = o.default.get("uid"), t.data.ai = o.default.get("appId"), t.data.svid = 410, t.data.ps && (t.data.ps.chid = 0), t.success = function(t) {
                                var i = t.data.res;
                                if (0 === t.rescode)
                                    for (var s = 0; s <
                                        i.length; s++) try {
                                        i[s] = a.default.Response.fromBase64(i[s])
                                    } catch (t) {
                                        s >
                                            0 && (console.error("~~~~~ : topChatlist解析失败，上一条记录"), console.error(a.default.Response.fromBase64(i[s - 1]))), console.error("~~~~~topChatlist 解析失败，当前原始数据"), console.error(i[s])
                                    }
                                e(t)
                            }, s.default.request("/msg/api/pub/v3/message/previous", t)
                        },
                        getPubVcard: function(t) {
                            s.default.request("/pubinfo/info/v1/get/simple", t)
                        },
                        getOppositeConfig: function(t) {
                            var e = t.success,
                                i = t.fail,
                                n = {
                                    data: {
                                        appId: o.default.get("appId"),
                                        svid: 410
                                    },
                                    success: e,
                                    fail: i
                                };
                            s.default.request("/pubread/v1/user/chat/config/tenant/opposite", n)
                        },
                        getOppositeReadTime: function(t) {
                            var e = t.data,
                                i = e.channelId,
                                n = void 0 === i ? 0 : i,
                                a = e.chatIds,
                                o = void 0 === a ? [] : a,
                                r = e.startTime,
                                u = t.success,
                                h = void 0 === u ? function() {} : u,
                                d = t.fail,
                                c = {
                                    data: {
                                        svid: 410,
                                        channel: n,
                                        chatIds: o,
                                        startTime: r
                                    },
                                    success: h,
                                    fail: void 0 === d ? function() {} : d
                                };
                            s.default.request("/pubread/v1/user/chat/opposite/getReadList", c)
                        }
                    }
                },
                2125: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(6528),
                        n = i(5509),
                        a = i(5344),
                        o = i(7294),
                        r = i(5678),
                        u = {};
                    u.MsgHistoryRes = n.default.Response.extend({
                        uri: s.default.HTTP.URI_MSG_HISTORY_RES,
                        init: function() {
                            this.uid = 0, this.msgs = [], this.next = 0, this.rescode = 0, this.requestId = 0
                        },
                        marshall: function() {
                            this.push(this.uid, a.default.LONG), this.push(this.msgs, a.default.ARRAY_ARRAY), this.push(this.next), this.push(this.rescode), this.push(this.requestId, a.default.LONG)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value();
                            for (var t = this._popArrayArray(), e = 0; e <
                                t.length; e++) t[e].byteLength >
                                0 && this.msgs.push(n.default.Response.fromBuffer(t[e]));
                            this.next = this.popInt(), this.rescode = this.popInt(), this.requestId = this.popLong().value()
                        }
                    }), u.MsgChatListRes = n.default.Response.extend({
                        uri: s.default.HTTP.URI_MSG_CHATLIST_RES,
                        init: function() {
                            this.uid = 0, this.chats = [], this.next = 0, this.rescode = 0, this.requestId = 0
                        },
                        marshall: function() {
                            this.push(this.uid, a.default.LONG), this.push(this.chats, a.default.ARRAY_ARRAY), this.push(this.next), this.push(this.rescode), this.push(this.requestId, a.default.LONG)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value();
                            for (var t = this._popArrayArray(), e = 0; e <
                                t.length; e++) t[e].byteLength >
                                0 && this.chats.push(n.default.Response.fromBuffer(t[e]));
                            this.next = this.popInt(), this.rescode = this.popInt(), this.requestId = this.popLong().value()
                        }
                    }), u.fromBase64ToBuffer = function(t, e) {
                        return (new e).parserFromBuffer(o.default.b64toBA(t).buffer)
                    }, u.LvsLoginAddr = n.default.Response.extend({
                        uri: s.default.SVID_LVS <<
                            16 | 11,
                        init: function() {
                            this.ip = [], this.port = "", this.domain = "", this.longPollingAddr = ""
                        },
                        getAddr: function() {
                            var t = r.default.get("useHTTPS") ? "wss://" : "ws://";
                            return this.domain ? t + this.domain + ":" + this.port : t + this.ip.reverse().join(".") + ":" + this.port
                        },
                        getLongPollingAddr: function() {
                            return this.longPollingAddr
                        },
                        unmarshall: function() {
                            this.ip.push(this.popByte()), this.ip.push(this.popByte()), this.ip.push(this.popByte()), this.ip.push(this.popByte()), this.port = this.popShort(), this.domain = this.popString(), this.longPollingAddr = this.popString()
                        }
                    }), e.default = u
                },
                9786: function(t, e, i) {
                    "use strict";
                    var s = this && this.__assign || function() {
                        return (s = Object.assign || function(t) {
                            for (var e, i = 1, s = arguments.length; i < s; i++)
                                for (var n in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                            return t
                        }).apply(this, arguments)
                    };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var n, a = i(5675),
                        o = i(4327),
                        r = i(3680),
                        u = i(2125),
                        h = i(8473),
                        d = i(8882),
                        c = i(5678),
                        p = s(s(s({}, a.default), o.default), {
                            Common: r.default,
                            Session: u.default
                        });
                    n = i(82).Z, p.Msg = n;
                    var l;
                    l = i(221).Z, p.Pub = l;
                    var f;
                    f = i(9770).Z, p.DATA = f;
                    var _;
                    _ = i(3112).Z, p.KEFU = _;
                    var g;
                    g = i(3326).Z, p.Chatroom = g, h.default.on("AuthSuccess", (function(t, e, i, s) {
                        a.default.setHeader({
                            u: t,
                            ck: e,
                            ai: i,
                            dt: d.default.deviceType,
                            al: s,
                            uu: c.default.get("deviceId")
                        })
                    })), e.default = p
                },
                1938: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5605).SVID.SVID_IM,
                        n = {
                            SVID_IM: s,
                            IM: {
                                URI_IM_SEND_MSG: s <<
                                    16 | 1,
                                URI_IM_SEND_MSG_RES: s << 16 | 2,
                                URI_IM_SEND_GROUP_MSG: s << 16 | 3,
                                URI_IM_SEND_GROUP_MSG_RES: s << 16 | 4,
                                URI_IM_ACK_MSG: s << 16 | 5,
                                URI_IM_DELETE_MSG: s << 16 | 7,
                                URI_IM_DELETE_MSG_RES: s << 16 | 8,
                                URI_IM_TEXT_INFO: s << 16 | 9,
                                URI_IM_AUDIO_INFO: s << 16 | 10,
                                URI_IM_VIDEO_INFO: s << 16 | 11,
                                URI_IM_IMAGE_INFO: s << 16 | 12,
                                URI_IM_CALENDAR_INFO: s << 16 | 13,
                                URI_IM_LINK_INFO: s << 16 | 14,
                                URI_IM_MULTI_LINK_INFO: s << 16 | 15,
                                URI_IM_FILE_INFO: s << 16 | 16,
                                URI_IM_GPS_INFO: s << 16 | 17,
                                URI_IM_VCARD_INFO: s << 16 | 18,
                                URI_IM_EMOTION_INFO: s << 16 | 19,
                                URI_IM_EVENT_INFO: s << 16 | 20,
                                URI_IM_ACK_GROUP_MSGS: s << 16 | 21,
                                URI_IM_ACK_MSGS: s << 16 | 22,
                                URI_IM_SYNC_READ_ITEM: s << 16 | 23,
                                URI_IM_SYNC_READ: s << 16 | 24,
                                URI_IM_SYNC_READ_GET: s << 16 | 25,
                                URI_IM_ACK_SYNC_GROUP_MSGS: s << 16 | 26,
                                URI_IM_ACK_SYNC_MSGS: s << 16 | 27,
                                URI_IM_GROUP_NOTICE: s << 16 | 28,
                                URI_IM_CUSTOM_INFO: s << 16 | 29,
                                URI_IM_CHAT_NOTICE: s << 16 | 30,
                                URI_IM_RECEIPT_MSG_REQ: s << 16 | 31,
                                URI_IM_RECEIPT_GROUP_MSG_REQ: s << 16 | 32,
                                URI_IM_RECEIPT_MSG_RES: s << 16 | 33,
                                URI_IM_RECEIPT_GROUP_MSG_RES: s << 16 | 34,
                                URI_IM_MARK_READ: s << 16 | 35,
                                URI_IM_MARK_READS: s << 16 | 36,
                                URI_IM_REDPACKET_INFO: s << 16 | 37,
                                URL_IM_GENERAL_INFO: s << 16 | 38,
                                URI_IM_GVCARD_INFO: s << 16 | 39,
                                URI_IM_PCALL_INFO: s << 16 | 40,
                                URI_IM_NEWEMOTION_INFO: s << 16 | 41,
                                URI_IM_OPPOSITE_SYNC2_READ: s << 16 | 44,
                                URI_IM_OPPOSITE_SYNC2_READ_ITEM: s << 16 | 45,
                                URI_IM_OPPOSITE_SYNC2_READ_RES: s << 16 | 46,
                                URI_IM_QUOTE_INFO: s << 16 | 47,
                                URI_IM_SYNC_READ_RES: s << 16 | 48,
                                URI_IM_RECEIPT_GROUP_MSGS: s << 16 | 49,
                                URI_IM_RECEIPT_GROUP_ITEM: s << 16 | 50,
                                URI_IM_RECEIPT_GROUP_MSGS_RES: s << 16 | 51,
                                URI_IM_RECEIPT_GROUP_MSGS_RECV: s << 16 | 52,
                                URI_IM_DYNAMIC_INFO: s << 16 | 53,
                                URI_IM_CANCEL_MSG: s << 16 | 301,
                                URI_IM_CANCEL_MSG_RES: s << 16 | 302,
                                URI_IM_CANCEL_GROUP_MSG: s << 16 | 303,
                                URI_IM_CANCEL_GROUP_MSG_RES: s << 16 | 304
                            },
                            NoticeType: {
                                GIM_GINFO_UPDATE: 1,
                                GIM_GROUP_GEN: 2,
                                GIM_GROUP_DEL: 3,
                                GIM_MEMBER_ADD: 4,
                                GIM_MEMBER_REMOVE: 5,
                                GIM_MEMBER_ROLE: 6,
                                GIM_GROUP_NOTICE: 13,
                                GIM_GROUP_PERMISSION: 14,
                                GIM_NOTICE_READ_STATUS: 18,
                                GIM_NOTICE_DELETE: 19,
                                GIM_NOTICE_UNREAD_COUNT_CHANGE: 20
                            }
                        };
                    e.default = n
                },
                8659: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(1938),
                        n = i(5344),
                        a = i(9118),
                        o = i(5605),
                        r = i(8554),
                        u = i(5509),
                        h = i(5678),
                        d = {};
                    d.IMTextMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_TEXT,
                        uri: s.default.IM.URI_IM_TEXT_INFO,
                        init: function() {
                            this.text = "", this.font_name = "serif", this.font_size = 12, this.bold = !1, this.cipher_type = o.CIPHER_TYPE.NO_CIPHER
                        },
                        marshall: function() {
                            this.push(this.text, n.default.STRING), this.push(this.font_name, n.default.STRING), this.push(this.font_size, n.default.INT), this.push(this.bold, n.default.BOOLEAN)
                        },
                        unmarshall: function() {
                            this.text = this.popString(), this.font_name = this.popString(), this.font_size = this.popInt(), this.bold = this.popBool()
                        }
                    }), d.IMImageMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_IMAGE,
                        uri: s.default.IM.URI_IM_IMAGE_INFO,
                        init: function() {
                            this.thumbnail = "", this.normal = "", this.original = "", this.type = "", this.token = "", this.originSize = 0, this.uploadImageType = 2, this.custom = ""
                        },
                        marshall: function() {
                            this.push(this.thumbnail), this.push(this.normal), this.push(this.original), this.push(this.type), this.push(this.token), this.push(this.originSize), this.push(this.uploadImageType), this.push(this.custom)
                        },
                        unmarshall: function() {
                            this.thumbnail = this.popString(), this.normal = this.popString(), this.original = this.popString(), this.type = this.popString(), this.token = this.popString(), this.originSize = this.popInt(), this.uploadImageType = this.popByte(), this.custom = this.popString()
                        }
                    }), d.IMLinkMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_LINK,
                        uri: s.default.IM.URI_IM_LINK_INFO,
                        init: function() {
                            this.title = "", this.image = "", this.content = "", this.link = ""
                        },
                        marshall: function() {
                            this.push(this.title), this.push(this.image), this.push(this.content), this.push(this.link)
                        },
                        unmarshall: function() {
                            this.title = this.popString(), this.image = this.popString(), this.content = this.popString(), this.link = this.popString()
                        }
                    }), d.IMMultiLinkMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_MULTI_LINK,
                        uri: s.default.IM.URI_IM_MULTI_LINK_INFO,
                        init: function() {
                            this.num = 0, this.content = ""
                        },
                        marshall: function() {
                            this.push(this.num, n.default.SHORT), this.push(this.content, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.num = this.popShort(), this.content = this.popString()
                        }
                    }), d.IMEmotionMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_EMOTION,
                        uri: s.default.IM.URI_IM_EMOTION_INFO,
                        init: function() {
                            this.category = "", this.type = "", this.name = ""
                        },
                        marshall: function() {
                            this.push(this.category, n.default.STRING), this.push(this.type, n.default.STRING), this.push(this.name, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.category = this.popString(), this.type = this.popString(), this.name = this.popString()
                        }
                    }), d.IMEventMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_EVENT,
                        uri: s.default.IM.URI_IM_EVENT_INFO,
                        init: function() {
                            this.type = "", this.text = ""
                        },
                        marshall: function() {
                            this.push(this.type), this.push(this.text)
                        },
                        unmarshall: function() {
                            this.type = this.popString(), this.text = this.popString()
                        }
                    }), d.IMCalendarMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_CALENDAR,
                        uri: s.default.IM.URI_IM_CALENDAR_INFO,
                        init: function() {
                            this.dtstart = 0, this.dtend = 0, this.summary = "", this.location = "", this.trigger = "", this.participant = "", this.remark = "", this.calendarID = ""
                        },
                        marshall: function() {
                            this.push(this.dtstart, n.default.LONG), this.push(this.dtend, n.default.LONG), this.push(this.summary), this.push(this.location), this.push(this.trigger), this.push(this.participant), this.push(this.remark), this.push(this.calendarID, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.dtstart = this.popLong().value(), this.dtend = this.popLong().value(), this.summary = this.popString(), this.location = this.popString(), this.trigger = this.popString(), this.participant = this.popString(), this.remark = this.popString(), this.calendarID = this.popLong().value()
                        }
                    }), d.IMAudioMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_VOICE,
                        uri: s.default.IM.URI_IM_AUDIO_INFO,
                        init: function() {
                            this.url = "", this.codec = 0, this.duration = 0, this.stamp = 0, this.token = "", this.custom = ""
                        },
                        marshall: function() {
                            this.push(this.url, n.default.STRING), this.push(this.codec, n.default.SHORT), this.push(this.duration, n.default.SHORT), this.push(this.stamp, n.default.LONG), this.push(this.token, n.default.STRING), this.push(this.custom, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.url = this.popString(), this.codec = this.popShort(), this.duration = this.popShort(), this.stamp = this.popLong().value(), this.token = this.popString(), this.custom = this.popString()
                        }
                    }), d.IMVideoMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_VIDEO,
                        uri: s.default.IM.URI_IM_VIDEO_INFO,
                        init: function() {
                            this.videoUrl = "", this.screenshotUrl = "", this.duration = 0, this.size = 0, this.width = 0, this.height = 0, this.timestamp = 0, this.token = "", this.custom = ""
                        },
                        marshall: function() {
                            this.push(this.videoUrl, n.default.STRING), this.push(this.screenshotUrl, n.default.STRING), this.push(this.duration, n.default.INT), this.push(this.size, n.default.INT), this.push(this.width, n.default.SHORT), this.push(this.height, n.default.SHORT), this.push(this.timestamp, n.default.LONG), this.push(this.token, n.default.STRING), this.push(this.custom, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.videoUrl = this.popString(), this.screenshotUrl = this.popString(), this.duration = this.popInt(), this.size = this.popInt(), this.width = this.popShort(), this.height = this.popShort(), this.timestamp = this.popLong().value(), this.token = this.popString(), this.custom = this.popString()
                        }
                    }), d.IMGPSMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_GPS,
                        uri: s.default.IM.URI_IM_GPS_INFO,
                        init: function() {
                            this.latitude = 0, this.longitude = 0, this.name = ""
                        },
                        marshall: function() {
                            this.push(1e6 * this.latitude), this.push(1e6 * this.longitude), this.push(this.name)
                        },
                        unmarshall: function() {
                            this.latitude = this.popInt() / 1e6, this.longitude = this.popInt() / 1e6, this.name = this.popString()
                        }
                    }), d.IMVCardMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_VCARD,
                        uri: s.default.IM.URI_IM_VCARD_INFO,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_VCARD_INFO, this.uid = 0, this.name = "", this.account = "", this.type = 0, this.subtype = 0
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.name), this.push(this.account), this.push(this.type, n.default.SHORT), this.push(this.subtype, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.name = this.popString(), this.account = this.popString(), this.type = this.popShort(), this.subtype = this.popShort()
                        }
                    }), d.IMFileMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_FILE,
                        uri: s.default.IM.URI_IM_FILE_INFO,
                        init: function() {
                            this.id = "", this.url = "", this.name = "", this.format = "", this.size = 0, this.token = "", this.lsize = 0, this.custom = ""
                        },
                        marshall: function() {
                            this.push(this.id), this.push(this.url), this.push(this.name), this.push(this.format), this.push(this.size), this.push(this.token), this.push(this.lsize, n.default.LONG), this.push(this.custom)
                        },
                        unmarshall: function() {
                            this.id = this.popString(), this.url = this.popString(), this.name = this.popString(), this.format = this.popString(), this.size = this.popInt(), this.token = this.popString(), this.lsize = this.popLong().value(), this.custom = this.popString()
                        }
                    }), d.IMCustomInfo = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_CUSTOM,
                        uri: s.default.IM.URI_IM_CUSTOM_INFO,
                        init: function() {
                            this.templateName = "", this.contentTitle = "", this.content = "", this.linkName = "", this.link = 0
                        },
                        marshall: function() {
                            this.push(this.templateName), this.push(this.contentTitle), this.push(this.content), this.push(this.linkName), this.push(this.link)
                        },
                        unmarshall: function() {
                            this.templateName = this.popString(), this.contentTitle = this.popString(), this.content = this.popString(), this.linkName = this.popString(), this.link = this.popString()
                        }
                    }), d.IMRedPacketInfo = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_RED_PACKET,
                        uri: s.default.IM.URI_IM_REDPACKET_INFO,
                        init: function() {
                            this.rpid = 0, this.type = 0, this.greetings = ""
                        },
                        marshall: function() {
                            this.push(this.rpid, n.default.LONG), this.push(this.type, n.default.SHORT), this.push(this.greetings, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.rpid = this.popLong().value(), this.type = this.popShort(), this.greetings = this.popString()
                        }
                    }), d.IMGVCardInfo = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_GVCARD,
                        uri: s.default.IM.URI_IM_GVCARD_INFO,
                        init: function() {
                            this.guid = 0, this.name = "", this.account = "", this.type = 0, this.subtype = 0
                        },
                        marshall: function() {
                            this.push(this.guid, n.default.LONG), this.push(this.name, n.default.STRING), this.push(this.account, n.default.STRING), this.push(this.type, n.default.SHORT), this.push(this.subtype, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.guid = this.popLong().value(), this.name = this.popString(), this.account = this.popString(), this.type = this.popShort(), this.subtype = this.popShort()
                        }
                    }), d.IMPCallMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_PCALL,
                        uri: s.default.IM.URI_IM_PCALL_INFO,
                        init: function() {
                            this.uid = 0, this.peerUid = "", this.roles = "", this.callStatus = 0, this.callType = 0, this.startCallTs = 0, this.startTalkTs = 0, this.endTs = 0, this.callDur = 0
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.peerUid, n.default.LONG), this.push(this.roles, n.default.INT), this.push(this.callStatus, n.default.INT), this.push(this.callType, n.default.INT), this.push(this.startCallTs, n.default.LONG), this.push(this.startTalkTs, n.default.LONG), this.push(this.endTs, n.default.LONG), this.push(this.callDur, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.peerUid = this.popLong().value(), this.roles = this.popInt(), this.callStatus = this.popInt(), this.callType = this.popInt(), this.startCallTs = this.popLong().value(), this.startTalkTs = this.popLong().value(), this.endTs = this.popLong().value(), this.callDur = this.popLong().value()
                        }
                    }), d.IMGeneralMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_GENERAL,
                        uri: s.default.IM.URL_IM_GENERAL_INFO,
                        init: function() {
                            this.data = {}, this.type = 0
                        },
                        marshall: function() {
                            this.push(a.default.strToBytes(this.data), n.default.BYTES), this.push(this.type, n.default.INT)
                        },
                        unmarshall: function() {
                            var t, e = this.popBytes(),
                                i = {},
                                s = h.default.get("appId");
                            if (this.type = this.popInt(), s === o.APPID.DX) switch (this.type) {
                                case o.GENERAL_TYPE.TYPE_CALL_1V1:
                                    (t = new r.default).buffer = new a.default(e), t.popInt(), t.popInt(), t.popShort(), i.creator = t.popUItem(), i.invitee = t.popUItem(), i.startTs = t.popLong().value(), i.endTs = t.popLong().value(), i.sid = t.popString(), i.callType = t.popByte(), i.callStatus = t.popByte(), this.data = i;
                                    break;
                                case o.GENERAL_TYPE.TYPE_CALL_MEETING:
                                    (t = new r.default).buffer = new a.default(e), t.popInt(), t.popInt(), t.popShort(), i.creator = t.popUItem(), i.startTs = t.popLong().value(), i.endTs = t.popLong().value(), i.gid = t.popLong().value(), i.sid = t.popString(), i.text = t.popString(), this.data = i;
                                    break;
                                case o.GENERAL_TYPE.TYPE_GROUP_VOTE:
                                    this.data = new a.default(e).readUTF8String(e.byteLength);
                                    break;
                                default:
                                    this.data = new a.default(e).readUTF8String(e.byteLength)
                            } else this.data = new a.default(e).readUTF8String(e.byteLength)
                        }
                    }), d.IMNewEmotionMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_NEWEMOTION,
                        uri: s.default.IM.URI_IM_NEWEMOTION_INFO,
                        init: function() {
                            this.category = "", this.packageId = "", this.packageName = "", this.id = "", this.name = "", this.type = "", this.params = ""
                        },
                        marshall: function() {
                            this.push(this.category, n.default.STRING), this.push(this.packageId, n.default.STRING), this.push(this.packageName, n.default.STRING), this.push(this.id, n.default.STRING), this.push(this.name, n.default.STRING), this.push(this.type, n.default.STRING), this.push(this.params, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.category = this.popString(), this.packageId = this.popString(), this.packageName = this.popString(), this.id = this.popString(), this.name = this.popString(), this.type = this.popString(), this.params = this.popString()
                        }
                    }), d.IMQuoteMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_QUOTE,
                        uri: s.default.IM.URI_IM_QUOTE_INFO,
                        init: function() {
                            this.lastReply = "{}", this.quoted = "[]", this.searchText = ""
                        },
                        marshall: function() {
                            this.push(this.lastReply, n.default.STRING), this.push(this.quoted, n.default.STRING), this.push(this.searchText, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.lastReply = this.popString(), this.quoted = this.popString(), this.searchText = this.popString();
                            var t = JSON.parse(this.lastReply);
                            t = {
                                message: u.default.Response.fromBase64(t.message),
                                defaultText: t.defaultText
                            }, this.lastReplyMessage = t;
                            var e = JSON.parse(this.quoted);
                            this.quotedMessage = e.map((function(t) {
                                return {
                                    message: u.default.Response.fromBase64(t.message),
                                    defaultText: t.defaultText
                                }
                            }))
                        }
                    }), d.IMDynamicMessage = u.default.Message.extend({
                        __category: "IM",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_DYNAMIC,
                        uri: s.default.IM.URI_IM_DYNAMIC_INFO,
                        init: function() {
                            this.id = "", this.title = "", this.dxData = "", this.appData = ""
                        },
                        marshall: function() {
                            this.push(this.id, n.default.LONG), this.push(this.title, n.default.STRING), this.push(this.dxData, n.default.STRING), this.push(this.appData, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.id = this.popLong().value(), this.title = this.popString(), this.dxData = this.popString(), this.appData = this.popString()
                        }
                    }), e.default = d
                },
                9615: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(1938),
                        n = i(5344),
                        a = i(5605),
                        o = i(8882),
                        r = i(5509),
                        u = i(6973),
                        h = i(5678),
                        d = i(4053),
                        c = {};
                    c.IMSendGroupMsgReq = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_SEND_GROUP_MSG,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_SEND_GROUP_MSG, this.deviceType = o.default.deviceType, this.msgUuid = d.default.next(), this.fromUid = 0, this.toGuid = 0, this.type, this.message, this.fromName = "", this.groupName = "", this.cts = u.default.get(), this.msgId = "", this.extension = "", this.seqId = 0, this.retries = 0, this.clusterId = "", this.receipt = 0, this.channel = 0, this.sessionSeqId = "", this.compatible = "", this.deviceId = h.default.get("deviceId"), this.messageReceivedType = a.MESSAGE_RECEIVED_TYPE.GROUP_MESSAGE
                        },
                        setUid: function(t) {
                            this.fromUid = t
                        },
                        initAfter: function() {
                            this.message && (this.type = this.type || this.message.__type)
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.msgUuid), this.push(this.fromUid, n.default.LONG), this.push(this.toGuid, n.default.LONG), this.push(this.type), this.push(this.message), this.push(this.fromName), this.push(this.groupName), this.push(this.cts, n.default.LONG), this.push(this.msgId, n.default.LONG), this.push(this.extension), this.push(this.seqId, n.default.LONG), this.push(this.retries, n.default.BYTE), this.push(this.clusterId, n.default.INT), this.push(this.receipt, n.default.BYTE), this.push(this.channel, n.default.SHORT), this.push(this.sessionSeqId, n.default.LONG), this.push(this.compatible, n.default.STRING), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.fromUid = this.popLong().value(), this.toGuid = this.popLong().value(), this.type = this.popInt(), this.message = r.default.Message.fromBuffer(this.popBytes()), this.fromName = this.popString(), this.groupName = this.popString(), this.cts = this.popLong().value(), this.msgId = this.popLong(), this.extension = this.popString(), this.seqId = this.popLong().value(), this.retries = this.popByte(), this.clusterId = this.popInt(), this.receipt = this.popByte(), this.channel = this.popShort(), this.sessionSeqId = this.popLong().value(), this.compatible = this.popString(), this.deviceId = this.popString()
                        }
                    }), c.IMSendGroupMsgRes = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_SEND_GROUP_MSG_RES,
                        init: function() {
                            this.msgUuid = "", this.msgId = "", this.cts = 0, this.rescode = 0, this.deviceType = 0, this.seqId = 0, this.clusterId = 0, this.sessionSeqId = ""
                        },
                        marshall: function() {
                            this.push(this.msgUuid, n.default.STRING), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.rescode, n.default.INT), this.push(this.deviceType, n.default.BYTE), this.push(this.seqId, n.default.LONG), this.push(this.clusterId, n.default.INT), this.push(this.sessionSeqId, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.rescode = this.popInt(), this.deviceType = this.popByte(), this.seqId = this.popLong().value(), this.clusterId = this.popInt(), this.sessionSeqId = this.popLong().value()
                        }
                    }), c.IMGroupNotice = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_GROUP_NOTICE,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_GROUP_NOTICE, this.toGuid = 0, this.type = 0, this.data = "", this.cts = u.default.get(), this.channel = ""
                        },
                        marshall: function() {
                            this.push(this.toGuid, n.default.LONG), this.push(this.type), this.push(this.data), this.push(this.cts, n.default.LONG), this.push(this.channel, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.toGuid = this.popLong().value(), this.type = this.popInt(), this.data = this.popString(), this.cts = this.popLong().value(), this.channel = this.popShort()
                        }
                    }), c.IMChatNotice = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_CHAT_NOTICE,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_CHAT_NOTICE, this.toUid = 0, this.type = 0, this.data = "", this.cts = u.default.get()
                        },
                        marshall: function() {
                            this.push(this.toUid, n.default.LONG), this.push(this.type), this.push(this.data), this.push(this.cts, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.toUid = this.popLong().value(), this.type = this.popInt(), this.data = this.popString(), this.cts = this.popLong().value()
                        }
                    }), c.IMSendMsgReq = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_SEND_MSG,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_SEND_MSG, this.deviceType = o.default.deviceType, this.msgUuid = d.default.next(), this.fromUid = 0, this.toUid = 0, this.type, this.message, this.fromName = "", this.cts = u.default.get(), this.msgId = "", this.toAppId = 1, this.extension = "", this.seqId = "0", this.retries = 0, this.clusterId = "", this.receipt = 0, this.channel = 0, this.sessionSeqId = "", this.compatible = "", this.deviceId = h.default.get("deviceId"), this.messageReceivedType = a.MESSAGE_RECEIVED_TYPE.CHAT_MESSAGE
                        },
                        setUid: function(t) {
                            this.fromUid = t
                        },
                        initAfter: function() {
                            this.message && (this.type = this.type || this.message.__type)
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.msgUuid, n.default.STRING), this.push(this.fromUid, n.default.LONG), this.push(this.toUid, n.default.LONG), this.push(this.type, n.default.INT), this.push(this.message), this.push(this.fromName, n.default.STRING), this.push(this.cts, n.default.LONG), this.push(this.msgId, n.default.LONG), this.push(this.toAppId, n.default.SHORT), this.push(this.extension, n.default.STRING), this.push(this.seqId, n.default.LONG), this.push(this.retries, n.default.BYTE), this.push(this.clusterId, n.default.INT), this.push(this.receipt, n.default.BYTE), this.push(this.channel, n.default.SHORT), this.push(this.sessionSeqId, n.default.LONG), this.push(this.compatible, n.default.STRING), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.fromUid = this.popLong().value(), this.toUid = this.popLong().value(), this.type = this.popInt(), this.message = r.default.Message.fromBuffer(this.popBytes()), this.fromName = this.popString(), this.cts = this.popLong().value(), this.msgId = this.popLong(), this.toAppId = this.popShort(), this.extension = this.popString(), this.seqId = this.popLong().value(), this.retries = this.popByte(), this.clusterId = this.popInt(), this.receipt = this.popByte(), this.channel = this.popShort(), this.sessionSeqId = this.popLong().value(), this.compatible = this.popString(), this.deviceId = this.popString();
                            var t = h.default.get("channelMap");
                            !t || this.channel && 0 !== this.channel || (this.fromUid === h.default.get("uid") ? this.channel = t[this.toAppId] || 0 : this.channel = t[this.appid] || 0)
                        }
                    }), c.IMSendMsgRes = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_SEND_MSG_RES,
                        init: function() {
                            this.msgUuid = "", this.msgId = "", this.cts = "", this.rescode = 0, this.deviceType = o.default.deviceType, this.sessionSeqId = ""
                        },
                        marshall: function() {
                            this.push(this.msgUuid, n.default.STRING), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.rescode, n.default.INT), this.push(this.deviceType, n.default.BYTE), this.push(this.sessionSeqId, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.rescode = this.popInt(), this.deviceType = this.popByte(), this.deviceType = this.popLong().value()
                        }
                    }), c.IMAckMsgs = r.default.Request.extend({
                        category: "IM",
                        __master: !0,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_ACK_MSGS, this.deviceType = o.default.deviceType, this.uid = 0, this.msgIds = [], this.deviceId = h.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.uid, n.default.LONG), this.push(this.msgIds), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.uid = this.popLong().value(), this.msgIds = this._popArrayLong(), this.deviceId = this.popString()
                        }
                    }), c.IMAckSyncMsgs = r.default.Request.extend({
                        __master: !0,
                        category: "IM",
                        init: function() {
                            this.uri = s.default.IM.URI_IM_ACK_SYNC_MSGS, this.deviceType = o.default.deviceType, this.uid = 0, this.msgIds = [], this.deviceId = h.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.uid, n.default.LONG), this.push(this.msgIds), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.uid = this.popLong().value(), this.msgIds = this._popArrayLong(), this.deviceId = this.popString()
                        }
                    }), c.IMAckGroupMsgs = r.default.Request.extend({
                        __master: !0,
                        category: "IM",
                        init: function() {
                            this.uri = s.default.IM.URI_IM_ACK_GROUP_MSGS, this.deviceType = o.default.deviceType, this.uid = 0, this.msgIds = [], this.deviceId = h.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.uid, n.default.LONG), this.push(this.msgIds), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.uid = this.popLong().value(), this.msgIds = this._popArrayLong(), this.deviceId = this.popString()
                        }
                    }), c.IMAckSyncGroupMsgs = r.default.Request.extend({
                        __master: !0,
                        category: "IM",
                        init: function() {
                            this.uri = s.default.IM.URI_IM_ACK_SYNC_GROUP_MSGS, this.deviceType = o.default.deviceType, this.uid = 0, this.msgIds = [], this.deviceId = h.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.uid, n.default.LONG), this.push(this.msgIds), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.uid = this.popLong().value(), this.msgIds = this._popArrayLong(), this.deviceId = this.popString()
                        }
                    }), c.IMSyncRead = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_SYNC_READ,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_SYNC_READ, this.uid = 0, this.deviceType = o.default.deviceType, this.syncReadItems = [], this.msgUuid = d.default.next(), this.deviceId = h.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.syncReadItems, n.default.ARRAY_ARRAY), this.push(this.msgUuid, n.default.STRING), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.deviceType = this.popByte();
                            for (var t = 0, e = this._popArrayArray(); t < e.length; t++) {
                                var i = e[t];
                                this.syncReadItems.push((new c.IMSyncReadItem).parserFromBuffer(i))
                            }
                            this.msgUuid = this.popString(), this.deviceId = this.popString()
                        }
                    }), c.IMSyncReadItem = r.default.Request.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_SYNC_READ_ITEM,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_SYNC_READ_ITEM, this.chatId = 0, this.stamp = u.default.get(), this.type = 0, this.peerAppId = 0, this.sts = 0, this.channel = 0
                        },
                        marshall: function() {
                            this.push(this.chatId, n.default.LONG), this.push(this.stamp, n.default.LONG), this.push(this.type, n.default.BYTE), this.push(this.peerAppId, n.default.SHORT), this.push(this.sts, n.default.LONG), this.push(this.channel, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.chatId = this.popLong().value(), this.stamp = this.popLong().value(), this.type = this.popByte(), this.peerAppId = this.popShort(), this.sts = this.popLong().value(), this.channel = this.popShort()
                        }
                    }), c.IMSyncReadRes = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_SYNC_READ_RES,
                        init: function() {
                            this.msgUuid = ""
                        },
                        marshall: function() {
                            this.push(this.msgUuid, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString()
                        }
                    }), c.IMCancelMsg = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_CANCEL_MSG,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_CANCEL_MSG, this.deviceType = o.default.deviceType, this.msgUuid = d.default.next(), this.fromUid = 0, this.toUid = 0, this.fromName = "", this.cts = u.default.get(), this.msgId = "", this.toAppId = 1, this.extension = "", this.channel = 0, this.isforce = 0, this.sts = "", this.sessionSeqId = "", this.deviceId = h.default.get("deviceId"), this.messageReceivedType = a.MESSAGE_RECEIVED_TYPE.CANCEL_CHAT_MESSAGE
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.msgUuid), this.push(this.fromUid, n.default.LONG), this.push(this.toUid, n.default.LONG), this.push(this.fromName), this.push(this.cts, n.default.LONG), this.push(this.msgId, n.default.LONG), this.push(this.toAppId, n.default.SHORT), this.push(this.extension), this.push(this.channel, n.default.SHORT), this.push(this.isforce, n.default.SHORT), this.push(this.sts, n.default.LONG), this.push(this.sessionSeqId, n.default.LONG), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.fromUid = this.popLong().value(), this.toUid = this.popLong().value(), this.fromName = this.popString(), this.cts = this.popLong().value(), this.msgId = this.popLong(), this.toAppId = this.popShort(), this.extension = this.popString(), this.channel = this.popShort(), this.isforce = this.popShort(), this.sts = this.popLong().value(), this.sessionSeqId = this.popLong().value(), this.deviceId = this.popString()
                        }
                    }), c.IMCancelMsgRes = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_CANCEL_MSG_RES,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_CANCEL_MSG_RES, this.deviceType = o.default.deviceType, this.msgUuid = d.default.next(), this.cts = u.default.get(), this.rescode = 0, this.msgId = ""
                        },
                        marshall: function() {
                            this.push(this.msgUuid), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.rescode, n.default.INT), this.push(this.deviceType, n.default.BYTE)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString(), this.msgId = this.popLong(), this.cts = this.popLong().value(), this.rescode = this.popInt(), this.deviceType = this.popByte()
                        }
                    }), c.IMCancelGroupMsg = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_CANCEL_GROUP_MSG,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_CANCEL_GROUP_MSG, this.deviceType = o.default.deviceType, this.msgUuid = d.default.next(), this.fromUid = 0, this.toGuid = 0, this.fromName = "", this.groupName = "", this.cts = u.default.get(), this.msgId = "", this.extension = "", this.channel = 0, this.isforce = !1, this.sts = 0, this.adminUid = 0, this.sessionSeqId = "", this.deviceId = h.default.get("deviceId"), this.messageReceivedType = a.MESSAGE_RECEIVED_TYPE.CANCEL_GROUP_MESSAGE
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.msgUuid), this.push(this.fromUid, n.default.LONG), this.push(this.toGuid, n.default.LONG), this.push(this.fromName), this.push(this.groupName), this.push(this.cts, n.default.LONG), this.push(this.msgId, n.default.LONG), this.push(this.extension), this.push(this.channel, n.default.SHORT), this.push(this.isforce, n.default.SHORT), this.push(this.sts, n.default.LONG), this.push(this.adminUid, n.default.LONG), this.push(this.sessionSeqId, n.default.LONG), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.fromUid = this.popLong().value(), this.toGuid = this.popLong().value(), this.fromName = this.popString(), this.groupName = this.popString(), this.cts = this.popLong().value(), this.msgId = this.popLong(), this.extension = this.popString(), this.channel = this.popShort(), this.isforce = this.popShort(), this.sts = this.popLong().value(), this.adminUid = this.popLong().value(), this.sessionSeqId = this.popLong().value(), this.deviceId = this.popString()
                        }
                    }), c.IMCancelGroupMsgRes = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_CANCEL_GROUP_MSG_RES,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_CANCEL_GROUP_MSG_RES, this.deviceType = o.default.deviceType, this.msgUuid = d.default.next(), this.cts = u.default.get(), this.rescode = 0, this.msgId = ""
                        },
                        marshall: function() {
                            this.push(this.msgUuid), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.rescode, n.default.INT), this.push(this.deviceType, n.default.BYTE)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString(), this.msgId = this.popLong(), this.cts = this.popLong().value(), this.rescode = this.popInt(), this.deviceType = this.popByte()
                        }
                    }), c.IMReceiptMsgReq = r.default.Request.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_RECEIPT_MSG_REQ,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_RECEIPT_MSG_REQ, this.msgUuid = d.default.next(), this.fromUid = 0, this.toUid = 0, this.msgId = "", this.cts = u.default.get(), this.deviceType = o.default.deviceType, this.channel = 0, this.deviceId = h.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.msgUuid), this.push(this.fromUid, n.default.LONG), this.push(this.toUid, n.default.LONG), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.channel, n.default.SHORT), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString(), this.fromUid = this.popLong().value(), this.toUid = this.popLong().value(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte(), this.channel = this.popShort(), this.deviceId = this.popString()
                        }
                    }), c.IMReceiptMsgRes = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_RECEIPT_MSG_RES,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_RECEIPT_MSG_RES, this.msgUuid = d.default.next(), this.msgId = "", this.cts = u.default.get(), this.deviceType = o.default.deviceType, this.fromUid = 0
                        },
                        marshall: function() {
                            this.push(this.msgUuid), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.fromUid, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte(), this.fromUid = this.popLong().value()
                        }
                    }), c.IMReceiptGroupMsgReq = r.default.Request.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_RECEIPT_GROUP_MSG_REQ,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_RECEIPT_GROUP_MSG_REQ, this.msgUuid = d.default.next(), this.fromUid = 0, this.toGuid = 0, this.toUid = 0, this.msgId = "", this.cts = u.default.get(), this.deviceType = o.default.deviceType, this.channel = 0, this.deviceId = h.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.msgUuid), this.push(this.fromUid, n.default.LONG), this.push(this.toGuid, n.default.LONG), this.push(this.toUid, n.default.LONG), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.channel, n.default.SHORT), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString(), this.fromUid = this.popLong().value(), this.toGuid = this.popLong().value(), this.toUid = this.popLong().value(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte(), this.channel = this.popShort(), this.deviceId = this.popString()
                        }
                    }), c.IMReceiptGroupMsgRes = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_RECEIPT_GROUP_MSG_RES,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_RECEIPT_GROUP_MSG_RES, this.msgUuid = d.default.next(), this.msgId = "", this.cts = u.default.get(), this.fromUid = 0, this.deviceType = o.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.msgUuid), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.fromUid, n.default.LONG), this.push(this.deviceType, n.default.BYTE)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.fromUid = this.popLong().value(), this.deviceType = this.popByte()
                        }
                    }), c.IMMarkReads = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_MARK_READS,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_MARK_READS, this.uid = "", this.deviceType = o.default.deviceType, this.markReads = []
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.markReads, n.default.BYTES)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.deviceType = this.popByte();
                            for (var t = 0, e = this._popArrayArray(); t < e.length; t++) {
                                var i = e[t];
                                this.markReads.push((new c.IMMarkRead).parserFromBuffer(i))
                            }
                        }
                    }), c.IMMarkRead = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_MARK_READ,
                        init: function() {
                            this.uri = s.default.IM.URI_IM_MARK_READ, this.chatId = 0, this.chatType = 0, this.chatAppId = 0, this.opt = 1, this.channel = 0
                        },
                        marshall: function() {
                            this.push(this.chatId, n.default.LONG), this.push(this.chatType, n.default.BYTE), this.push(this.chatAppId, n.default.SHORT), this.push(this.opt, n.default.BYTE), this.push(this.channel, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.chatId = this.popLong().value(), this.chatType = this.popByte(), this.chatAppId = this.popShort(), this.opt = this.popByte(), this.channel = this.popShort()
                        }
                    }), c.IMOppositeSyncRead = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_OPPOSITE_SYNC2_READ,
                        init: function() {
                            this.uid = "", this.msgUuid = d.default.next(), this.deviceType = o.default.deviceType, this.syncReadItems = [], this.deviceId = h.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.msgUuid, n.default.STRING), this.push(this.deviceType, n.default.BYTE), this.push(this.syncReadItems, n.default.ARRAY_ARRAY), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.msgUuid = this.popString(), this.deviceType = this.popByte();
                            for (var t = 0, e = this._popArrayArray(); t < e.length; t++) {
                                var i = e[t];
                                this.syncReadItems.push((new c.IMOppositeSyncReadItem).parserFromBuffer(i))
                            }
                            this.deviceId = this.popString()
                        }
                    }), c.IMOppositeSyncReadItem = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_OPPOSITE_SYNC2_READ_ITEM,
                        init: function() {
                            this.chatId = "", this.type = 0, this.peerAppId = 0, this.channel = 0, this.msgIds = []
                        },
                        marshall: function() {
                            this.push(this.chatId, n.default.LONG), this.push(this.type, n.default.BYTE), this.push(this.peerAppId, n.default.SHORT), this.push(this.channel, n.default.SHORT), this.push(this.msgIds, n.default.ARRAY_LONG)
                        },
                        unmarshall: function() {
                            this.chatId = this.popLong().value(), this.type = this.popByte(), this.peerAppId = this.popShort(), this.channel = this.popShort(), this.msgIds = this._popArrayLong()
                        }
                    }), c.IMOppositeSyncReadRes = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_OPPOSITE_SYNC2_READ_RES,
                        init: function() {
                            this.uid = "", this.msgUuid = "", this.deviceType = ""
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.msgUuid, n.default.STRING), this.push(this.deviceType, n.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.msgUuid = this.popString(), this.deviceType = this.popByte()
                        }
                    }), c.IMReceiptGroupMsgs = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_RECEIPT_GROUP_MSGS,
                        init: function() {
                            this.receiptUuid = d.default.next(), this.fromUid = "", this.toGuid = "", this.cts = u.default.get(), this.deviceType = o.default.deviceType, this.channel = 0, this.items = [], this.deviceId = h.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.receiptUuid, n.default.STRING), this.push(this.fromUid, n.default.LONG), this.push(this.toGuid, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.channel, n.default.SHORT), this.push(this.items, n.default.ARRAY_ARRAY), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.receiptUuid = this.popString(), this.fromUid = this.popLong().value(), this.toGuid = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte(), this.channel = this.popShort(), this.items = [];
                            for (var t = 0, e = this._popArrayArray(); t < e.length; t++) {
                                var i = e[t];
                                this.items.push((new c.IMReceiptGroupItem).parserFromBuffer(i))
                            }
                            this.deviceId = this.popString()
                        }
                    }), c.IMReceiptGroupItem = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_RECEIPT_GROUP_ITEM,
                        init: function() {
                            this.msgUuid = "", this.toUid = "", this.msgId = ""
                        },
                        marshall: function() {
                            this.push(this.msgUuid, n.default.STRING), this.push(this.toUid, n.default.LONG), this.push(this.msgId, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString(), this.toUid = this.popLong().value(), this.msgId = this.popLong().value()
                        }
                    }), c.IMReceiptGroupMsgsRes = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_RECEIPT_GROUP_MSGS_RES,
                        init: function() {
                            this.receiptUuid = d.default.next(), this.cts = 0, this.deviceType = 0, this.fromUid = "", this.items = []
                        },
                        marshall: function() {
                            this.push(this.receiptUuid, n.default.STRING), this.push(this.cts.bt.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.fromUid, n.default.LONG), this.push(this.items, n.default.ARRAY_ARRAY)
                        },
                        unmarshall: function() {
                            this.receiptUuid = this.popString(), this.cts = this.popLong().value(), this.deviceType = this.popByte(), this.fromUid = this.popLong().value(), this.items = [];
                            for (var t = 0, e = this._popArrayArray(); t < e.length; t++) {
                                var i = e[t];
                                this.items.push((new c.IMReceiptGroupItem).parserFromBuffer(i))
                            }
                        }
                    }), c.IMReceiptGroupMsgsRecv = r.default.Response.extend({
                        category: "IM",
                        uri: s.default.IM.URI_IM_RECEIPT_GROUP_MSGS_RECV,
                        init: function() {
                            this.receiptUuid = d.default.next(), this.fromUid = "", this.toGuid = "", this.cts = 0, this.deviceType = o.default.deviceType, this.channel = 0, this.items = []
                        },
                        marshall: function() {
                            this.push(this.receiptUuid, n.default.STRING), this.push(this.fromUid, n.default.LONG), this.push(this.toGuid, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.channel, n.default.SHORT), this.push(this.items, n.default.ARRAY_ARRAY)
                        },
                        unmarshall: function() {
                            this.receiptUuid = this.popString(), this.fromUid = this.popLong().value(), this.toGuid = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte(), this.channel = this.popShort(), this.items = [];
                            for (var t = 0, e = this._popArrayArray(); t < e.length; t++) {
                                var i = e[t];
                                this.items.push((new c.IMReceiptGroupItem).parserFromBuffer(i))
                            }
                        }
                    }), e.default = c
                },
                1545: (t, e, i) => {
                    "use strict";
                    var s = i(5675),
                        n = i(1938),
                        a = i(8659),
                        o = i(9615),
                        r = i(3257),
                        u = i(5605),
                        h = i(8473),
                        d = i(6973),
                        c = i(5678),
                        p = i(2939),
                        l = [
                            [o.default.IMAckMsgs, o.default.IMAckSyncMsgs],
                            [o.default.IMAckGroupMsgs, o.default.IMAckSyncGroupMsgs]
                        ],
                        f = function() {
                            function t(t) {
                                var e = this;
                                this._loginSDK = null, this._msgMap = {}, this._timeMap = {}, this._sendMessageTimeoutMap = {}, this._readTimeMap = {}, this._MAX_ACK_TIME = 15e3, this.constant = n.default, this._loginSDK = t, h.default.on(n.default.IM.URI_IM_SEND_MSG, this._onMessage.bind(this)), h.default.on(n.default.IM.URI_IM_SEND_GROUP_MSG, this._onMessage.bind(this)), h.default.on(n.default.IM.URI_IM_CANCEL_MSG, this._onMessage.bind(this)), h.default.on(n.default.IM.URI_IM_CANCEL_GROUP_MSG, this._onMessage.bind(this)), h.default.on(n.default.IM.URI_IM_MARK_READ, this._onNotice.bind(this)), h.default.on(n.default.IM.URI_IM_MARK_READS, this._onNotice.bind(this)), h.default.on(n.default.IM.URI_IM_GROUP_NOTICE, this._onNotice.bind(this)), h.default.on(n.default.IM.URI_IM_CHAT_NOTICE, this._onNotice.bind(this)), h.default.on(n.default.IM.URI_IM_SEND_MSG_RES, this._onACK.bind(this)), h.default.on(n.default.IM.URI_IM_SEND_GROUP_MSG_RES, this._onACK.bind(this)), h.default.on(n.default.IM.URI_IM_CANCEL_MSG_RES, this._onACK.bind(this)), h.default.on(n.default.IM.URI_IM_CANCEL_GROUP_MSG_RES, this._onACK.bind(this)), h.default.on(n.default.IM.URI_IM_SYNC_READ, this._onRead.bind(this)), h.default.on(n.default.IM.URI_IM_SYNC_READ_RES, this._onReadACK.bind(this)), h.default.on(n.default.IM.URI_IM_RECEIPT_MSG_RES, this._onReciept.bind(this)), h.default.on(n.default.IM.URI_IM_RECEIPT_GROUP_MSG_RES, this._onReciept.bind(this)), h.default.on(n.default.IM.URI_IM_OPPOSITE_SYNC2_READ, this._onOppsiteRead.bind(this)), h.default.on(n.default.IM.URI_IM_OPPOSITE_SYNC2_READ_RES, this._onOppositeReadAck.bind(this)), h.default.on(n.default.IM.URI_IM_RECEIPT_GROUP_MSGS_RECV, this._onReceiptGroupMessage.bind(this)), h.default.on(n.default.IM.URI_IM_RECEIPT_GROUP_MSGS_RES, this._onReceiptGroupMessageAck.bind(this)), h.default.on("__IMAck", (function(t) {
                                    var i, s = [
                                        [
                                            [],
                                            []
                                        ],
                                        [
                                            [],
                                            []
                                        ]
                                    ];
                                    for (i = 0; i < t.length; i++) s[1 & -1 !== [n.default.IM.URI_IM_SEND_GROUP_MSG, n.default.IM.URI_IM_CANCEL_GROUP_MSG].indexOf(t[i].uri)][1 & t[i].fromUid === e._loginSDK.getUID()].push(t[i].msgId);
                                    var a = 0;
                                    for (i = 0; i < 2; i++)
                                        for (var o = 0; o < 2; o++)
                                            for (;
                                                (a = s[i][o].splice(0, 1500)).length;) e.send(new l[i][o]({
                                                uid: e._loginSDK.getUID(),
                                                msgIds: a
                                            }))
                                })), h.default.on("chatAcks", (function(t) {
                                    t.length >
                                        0 && e.send(new o.default.IMAckMsgs({
                                            uid: e._loginSDK.getUID(),
                                            msgIds: t
                                        }))
                                })), h.default.on("groupAcks", (function(t) {
                                    t.length > 0 && e.send(new o.default.IMAckGroupMsgs({
                                        uid: e._loginSDK.getUID(),
                                        msgIds: t
                                    }))
                                }))
                            }
                            return t.prototype.clearMsgMap = function(t) {
                                var e = this._msgMap[t];
                                e && e.time && (this.sendStatisticalData(e), e.timer && (clearTimeout(this._msgMap[t].timer), this._msgMap[t].timer = null), this._msgMap[t] = null, delete this._msgMap[t])
                            }, t.prototype.clearTimemoutMsg = function() {
                                var t = d.default.get();
                                for (var e in this._msgMap) {
                                    var i = this._msgMap[e];
                                    i && t - i.time > this._MAX_ACK_TIME && this.clearMsgMap(e)
                                }
                            }, t.prototype.sendStatisticalData = function(t) {
                                var e = d.default.get() - t.time;
                                e > this._MAX_ACK_TIME && (e = this._MAX_ACK_TIME);
                                var i = c.default.get("Owl");
                                i && i.addApi({
                                    name: "sendMessageTime",
                                    responseTime: e
                                })
                            }, t.prototype.send = function(t) {
                                var e = this;
                                try {
                                    t && -1 !== [n.default.IM.URI_IM_SEND_GROUP_MSG, n.default.IM.URI_IM_SEND_MSG, n.default.IM.URI_IM_CANCEL_MSG, n.default.IM.URI_IM_CANCEL_GROUP_MSG, n.default.IM.URI_IM_RECEIPT_MSG_REQ, n.default.IM.URI_IM_RECEIPT_GROUP_MSG_REQ].indexOf(t.uri) && (this._msgMap[t.msgUuid] = {
                                        time: d.default.get(),
                                        timer: 0
                                    }, this._msgMap[t.msgUuid].timer = setTimeout((function() {
                                        var t = [],
                                            i = 0;
                                        for (var a in e._msgMap)
                                            if (e._msgMap[a]) {
                                                if (++i >= 10) break;
                                                t.push(a)
                                            } t.length && s.default.request("/msg/api/chat/v3/message/exist", {
                                            data: {
                                                u: e._loginSDK.getUID(),
                                                ai: e._loginSDK.getAppId(),
                                                svid: n.default.SVID_IM,
                                                msguuid: t
                                            },
                                            success: function(t) {
                                                if (t && 0 === t.rescode && t.data)
                                                    for (var i = 0, s = t.data.length; i <
                                                        s; i++) {
                                                        var n = t.data[i];
                                                        h.default.emit("ack", {
                                                            rescode: 0,
                                                            seqId: n.seqid,
                                                            msgId: n.msgid,
                                                            clusterId: n.clusterid,
                                                            msgUuid: n.msguuid,
                                                            deviceType: n.devicetype
                                                        }), e.clearMsgMap(n.msguuid)
                                                    }
                                            }
                                        })
                                    }), this._MAX_ACK_TIME)), this._loginSDK._sendTransUp(n.default.SVID_IM, t), t.uri !== n.default.IM.URI_IM_SEND_MSG && t.uri !== n.default.IM.URI_IM_SEND_GROUP_MSG && t.uri !== n.default.IM.URI_IM_CANCEL_MSG && t.uri !== n.default.IM.URI_IM_CANCEL_GROUP_MSG || (r.default.report({
                                        nm: "message_send_start",
                                        val: {
                                            id: t.msgUuid,
                                            chat: t.toUid ? t.toUid : t.toGuid ? t.toGuid : void 0,
                                            messageType: t.type ? t.type : 0,
                                            sessionType: t.uri === n.default.IM.URI_IM_SEND_MSG || t.uri === n.default.IM.URI_IM_CANCEL_MSG ? "chat" : "groupchat"
                                        }
                                    }), t.msgUuid && !this._timeMap[t.msgUuid] && (this._timeMap[t.msgUuid] = Date.now(), this._sendMessageTimeoutMap[t.msgUuid] = setTimeout((function() {
                                        p.default.send({
                                            name: "message_send_finished",
                                            value: 0,
                                            tag: {
                                                status: 0
                                            }
                                        })
                                    }), 15e3))), t.uri === n.default.IM.URI_IM_SYNC_READ && (r.default.report({
                                        nm: "read_im_send",
                                        val: {
                                            uuid: t.msgUuid,
                                            web_read: JSON.stringify(t.syncReadItems.map((function(t) {
                                                return {
                                                    id: t.chatId,
                                                    cts: t.stamp,
                                                    sts: t.sts
                                                }
                                            })))
                                        }
                                    }), t.msgUuid && !this._readTimeMap[t.msgUuid] && (this._readTimeMap[t.msgUuid] = Date.now()))
                                } catch (t) {
                                    console.error(t)
                                }
                            }, t.prototype._onMessage = function(t) {
                                try {
                                    this.send(this._ack(t)), r.default.report({
                                        nm: "message_receive_success",
                                        val: {
                                            id: t.msgUuid,
                                            mid: "string" == typeof t.msgId ? t.msgId : t.msgId.toString(),
                                            chat: t.toUid ? c.default.get("uid") === t.toUid ? t.fromUid : t.toGuid : t.toGuid ? t.toGuid : void 0,
                                            messageType: t.type ? t.type : 0
                                        }
                                    }), p.default.send({
                                        name: "message_receive_success",
                                        value: 0
                                    })
                                } catch (t) {
                                    console.error(t)
                                }
                                h.default.emit(u.MESSAGE_EVENT.MESSAGE, t), h.default.emit(u.MESSAGE_EVENT.IM_MESSAGE, t)
                            }, t.prototype._ack = function(t) {
                                return function(t, e) {
                                    return new(l[1 & -1 !== [n.default.IM.URI_IM_SEND_GROUP_MSG, n.default.IM.URI_IM_CANCEL_GROUP_MSG].indexOf(t.uri)][1 & t.fromUid === e])({
                                        uid: e,
                                        msgIds: [t.msgId]
                                    })
                                }(t, this._loginSDK.getUID())
                            }, t.prototype._onACK = function(t) {
                                t && this.clearMsgMap(t.msgUuid), h.default.emit("ack", t), 0 === t.rescode && this._timeMap[t.msgUuid] ? (r.default.report({
                                    nm: "message_send_success",
                                    val: {
                                        id: t.msgUuid,
                                        mid: t.msgId,
                                        time: Date.now() - this._timeMap[t.msgUuid]
                                    }
                                }), p.default.send({
                                    name: "message_send_finished",
                                    value: Date.now() - this._timeMap[t.msgUuid],
                                    tag: {
                                        status: 1
                                    }
                                }), clearTimeout(this._sendMessageTimeoutMap[t.msgUuid]), delete this._sendMessageTimeoutMap[t.msgUuid]) : r.default.report({
                                    nm: "message_send_error",
                                    val: {
                                        code: t.rescode,
                                        id: t.msgUuid
                                    }
                                }), this._timeMap[t.msgUuid] = void 0
                            }, t.prototype._onRead = function(t) {
                                h.default.emit(u.MESSAGE_EVENT.IM_READ, t), h.default.emit("read", t), r.default.report({
                                    nm: "read_im_receive",
                                    val: {
                                        web_read: JSON.stringify(t.syncReadItems.map((function(t) {
                                            return {
                                                id: t.chatId,
                                                cts: t.stamp,
                                                sts: t.sts
                                            }
                                        })))
                                    }
                                })
                            }, t.prototype._onReadACK = function(t) {
                                var e = t.msgUuid;
                                h.default.emit(u.MESSAGE_EVENT.IM_READ_ACK, {
                                    uuid: e
                                }), e && this._readTimeMap[e] && (r.default.report({
                                    nm: "read_im_success",
                                    val: {
                                        uuid: e,
                                        time: Date.now() - this._readTimeMap[e]
                                    }
                                }), delete this._readTimeMap[e])
                            }, t.prototype._onNotice = function(t) {
                                h.default.emit("notice", t)
                            }, t.prototype._onReciept = function(t) {
                                h.default.emit("receiptResponse", t)
                            }, t.prototype._onOppositeReadAck = function(t) {
                                h.default.emit("oppositeReadAck", t)
                            }, t.prototype._onOppsiteRead = function(t) {
                                h.default.emit("oppositeRead", t)
                            }, t.prototype._onReceiptGroupMessage = function(t) {
                                h.default.emit(u.MESSAGE_EVENT.RECEIPT_GROUP_MESSAGE, t)
                            }, t.prototype._onReceiptGroupMessageAck = function(t) {
                                h.default.emit(u.MESSAGE_EVENT.RECEIPT_GROUP_MESSAGE_ACK, t)
                            }, t.htpconstant = n.default, t.Session = o.default, t.Message = a.default, t
                        }();
                    e.Z = f
                },
                704: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s, n, a, o, r, u, h, d = i(9786),
                        c = i(330),
                        p = i(3257),
                        l = i(7294),
                        f = i(5605),
                        _ = i(5605),
                        g = i(8882),
                        m = i(8473),
                        S = i(6527),
                        I = i(5509),
                        T = i(6973),
                        v = i(7486),
                        E = i(5678),
                        y = i(4053),
                        R = i(306),
                        M = i(2939);
                    s = i(1545).Z, n = i(326).default, a = i(4583).Z, o = i(268).Z, r = i(1903).Z, u = i(4897).Z, h = i(5161).Z;
                    var N = !1,
                        U = function() {
                            function t(e) {
                                var i = this;
                                this.on = m.default.on.bind(m.default), this.emit = m.default.emit.bind(m.default), this.once = m.default.once.bind(m.default), this.loginSDK = null, this.imSDK = null, this.pubSDK = null, this.dataSDK = null, this.kefuSDK = null, this.corporationSDK = null, this.callSDK = null, this.chatroomSDK = null, this.generalKefuSDK = null, this.HTTP = d.default, this.loginWay = "ws", this.CONSTANT = {
                                    SESSION_TYPE: _.SESSION_TYPE,
                                    MESSAGE: _.MESSAGE_TYPE,
                                    LOGIN_STATUS: _.LOGIN_STATUS,
                                    LOGIN_EVENT: _.LOGIN_EVENT,
                                    MESSAGE_EVENT: _.MESSAGE_EVENT,
                                    MESSAGE_STATUS: _.MESSAGE_STATUS,
                                    SESSION_EVENT: _.SESSION_EVENT,
                                    CANCEL_STATUS: _.CANCEL_STATUS,
                                    MESSAGE_RESCODE: {
                                        RES_FORBIDDEN_GIM_CHAT: _.RESCODE.RES_FORBIDDEN_GIM_CHAT
                                    }
                                }, this.base64 = l.default, this.getSvrTime = S.default, N ? console.error("Web SDK 已经初始化过,请勿重复初始化 SDK") : (N = !0, e && (e.env !== f.ENV.ONLINE && e.env !== f.ENV.ST && e.env !== f.ENV.TEST && (console.warn("传入env参数无效,现已重置为online"), e.env = f.ENV.ONLINE), e.appId = e.appId || e.appid || 1, e.av = e.av || "", e.deviceType = e.deviceType || e.dt || 2, e.deviceId = e.deviceId || y.default.next(), v.default.isArray(e.multiChannelIds) && e.multiChannelIds.length > 0 && (e.channelId = e.multiChannelIds[0]), void 0 === e.useHTTPS && (e.useHTTPS = !0)), v.default.isNumber(e.localSessionNumber) || (e.localSessionNumber = 1e3), g.default.setDeviceType(e.deviceType), E.default.setAll(e), e.useHTTPS && console.log("Web SDK 已经开启 HTTPS"), p.default.init(), M.default.init(), this.HTTP.setEnv(e.env), e.defaultDomain && this.HTTP.setDefaultDomain(e.defaultDomain), this.loginSDK = new c.default(e), s && (t.IMSDK = s, this.imSDK = new s(this.loginSDK)), n && (t.PubSDK = n, this.pubSDK = new n(this.loginSDK)), a && (t.DataSDK = a, this.dataSDK = new a(this.loginSDK)), o && (t.KefuSDK = o, this.kefuSDK = new o(this.loginSDK)), r && (t.CorporationSDK = r, this.corporationSDK = new r(this.loginSDK)), u && (t.CallSDK = u, this.callSDK = new u(this.loginSDK)), h && (t.ChatroomSDK = h, this.chatroomSDK = new h(this.loginSDK)), m.default.on(_.LOGIN_EVENT.USE_LONG_POLLING, (function(t) {
                                    i.loginWay = t
                                })))
                            }
                            return t.fromBase64ToMessage = function(t) {
                                return I.default.Response.fromBase64(t)
                            }, t.getUuid = function() {
                                return y.default.next()
                            }, t.prototype.getSDKVersion = function() {
                                return R.version
                            }, t.prototype.login = function(t, e, i, s) {
                                this.loginSDK.login(t, e, i, s)
                            }, t.prototype.loginWithUidAndToken = function(t, e, i, s) {
                                this.loginSDK.loginWithUidAndToken(t, e, i, s)
                            }, t.prototype.loginWithVisitor = function(t, e) {
                                this.loginSDK.loginWithVisitor(t, e)
                            }, t.prototype.getVisitorInfoAndLogin = function() {
                                var t = this;
                                this.HTTP.getVisitorUidAndToken({
                                    success: function(e) {
                                        var i = e.rescode,
                                            s = e.data;
                                        0 === i ? t.loginWithVisitor(s.uidStr, s.xsid) : console.error("游客登录失败:", s.uid, s.message)
                                    }
                                })
                            }, t.prototype.logout = function() {
                                this.loginSDK.logout()
                            }, t.prototype.logoutByFalseKickoff = function(t) {
                                this.loginSDK.logoutByFalseKickoff(t)
                            }, t.prototype.getUid = function() {
                                return this.loginSDK.getUID()
                            }, t.prototype.fromBase64ToBuffer = function(t, e) {
                                return (new e).parserFromBuffer(l.default.b64toBA(t).buffer)
                            }, t.prototype.fromBase64ToMessage = function(t) {
                                return I.default.Response.fromBase64(t)
                            }, t.prototype.getCts = function() {
                                return T.default.get()
                            }, t.prototype.reconnect = function() {
                                this.loginSDK.reconnect()
                            }, t.constant = f, t.IMSDK = s, t.PubSDK = n, t.DataSDK = a, t.KefuSDK = o, t.CorporationSDK = r, t.CallSDK = u, t.ChatroomSDK = h, t.HTTP = d.default, t.getSvrTime = S.default, t
                        }();
                    e.default = U
                },
                268: (t, e, i) => {
                    "use strict";
                    var s = i(8473),
                        n = i(2455),
                        a = i(1317),
                        o = i(2033),
                        r = i(5678),
                        u = i(3257),
                        h = i(5605),
                        d = i(2939),
                        c = function() {
                            function t(t) {
                                this._loginSDK = null, this._timeMap = {}, this.constant = n.default, this._loginSDK = t, s.default.on(n.default.KF.URI_KF_SEND_MSG_REQ, this._onMessage.bind(this)), s.default.on(n.default.KF.URI_KF_SEND_KF_MSG_REQ, this._onMessage.bind(this)), s.default.on(n.default.KF.URI_KF_SEND_MSG_RES, this._onAck.bind(this)), s.default.on(n.default.KF.URI_KF_SEND_KF_MSG_RES, this._onAck.bind(this)), s.default.on(n.default.KF.URI_KF_SYNC_READ_KF, this._onRead.bind(this)), s.default.on(n.default.KF.URI_KF_NOTICE, this._onNotice.bind(this))
                            }
                            return t.prototype.sendMessage = function(t) {
                                var e = this.selectInnerMessage(t.type, t.body),
                                    i = new a.default.KFSendMsgReq({
                                        fromUid: t.fromUid,
                                        toUid: t.toUid,
                                        fromName: t.fromName,
                                        toAppId: t.toAppId,
                                        extension: t.extension,
                                        channel: t.channel,
                                        message: e,
                                        cts: t.cts,
                                        retries: t.retries
                                    });
                                return this.send(i), i
                            }, t.prototype._createKFMessage = function(t) {
                                var e = this.selectInnerMessage(t.type, t.body);
                                return new a.default.KFSendMsgKFReq({
                                    senderUid: t.senderUid,
                                    receiverUid: t.receiverUid,
                                    receiverAppId: t.receiverAppId,
                                    bid: t.bid,
                                    type: t.type,
                                    message: e,
                                    fromName: t.fromName,
                                    extension: t.extension,
                                    channel: t.channel,
                                    msgUuid: t.msgUuid,
                                    cts: t.cts,
                                    retries: t.retries
                                })
                            }, t.prototype.sendKFMessage = function(t) {
                                var e = this._createKFMessage(t);
                                return this.send(e), u.default.report({
                                    nm: "message_send_start",
                                    val: {
                                        id: e.msgUuid,
                                        chat: e.receiverUid,
                                        sessionType: "kfchat"
                                    }
                                }), this._timeMap[e.msgUuid] = Date.now(), e
                            }, t.prototype._transFormData = function(t) {
                                var e = t.quoted || "[]",
                                    i = t.selected || "{}",
                                    s = t.selectedMessage,
                                    n = t.add,
                                    a = t.quotedMessage;
                                return "[]" !== e ? ((e = JSON.parse(e)).push({
                                    message: this._createKFMessage(n.message).getBase64(),
                                    defaultText: n.defaultText
                                }), e = JSON.stringify(e)) : (i = {
                                    message: this._createKFMessage(s.message).getBase64(),
                                    defaultText: s.defaultText
                                }, i = JSON.stringify(i), e = [{
                                    message: this._createKFMessage(n.message).getBase64(),
                                    defaultText: n.defaultText
                                }], e = JSON.stringify(e)), {
                                    quoted: e,
                                    selected: i,
                                    selectedMessage: s,
                                    quotedMessage: a
                                }
                            }, t.prototype.selectInnerMessage = function(t, e) {
                                var i = null;
                                switch (t) {
                                    case h.MESSAGE_TYPE.MSG_TYPE_TEXT:
                                        i = new o.default.KFTextMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_QUOTE:
                                        var s = this._transFormData(e),
                                            n = s.selected,
                                            a = s.quoted;
                                        i = new o.default.KFQuoteMessage({
                                            selected: n,
                                            quoted: a
                                        });
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_VOICE:
                                        i = new o.default.KFAudioMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_VIDEO:
                                        i = new o.default.KFVideoMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_IMAGE:
                                        i = new o.default.KFImageMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_CALENDAR:
                                        i = new o.default.KFCalendarMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_LINK:
                                        i = new o.default.KFLinkMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_MULTI_LINK:
                                        i = new o.default.KFMultiLinkMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_FILE:
                                        i = new o.default.KFFileMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_GPS:
                                        i = new o.default.KFGPSMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_VCARD:
                                        i = new o.default.KFVCardMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_EMOTION:
                                        i = new o.default.KFEmotionMessage(e);
                                        break;
                                    case h.MESSAGE_TYPE.MSG_TYPE_EVENT:
                                        i = new o.default.KFEventMessage(e)
                                }
                                return i
                            }, t.prototype.sendRead = function(t, e) {
                                var i = e.map((function(t) {
                                    return new a.default.KFSyncReadItem(t)
                                }));
                                this.send(new a.default.KFSyncRead({
                                    uid: t,
                                    syncReadItems: i
                                })), u.default.report({
                                    nm: "read_kefu_send",
                                    val: {
                                        web_read: JSON.stringify(e.map((function(t) {
                                            return {
                                                id: t.chatId,
                                                peerUid: t.peerUid,
                                                peerAppId: t.peerAppId,
                                                channel: t.channel,
                                                cts: t.stamp
                                            }
                                        })))
                                    }
                                })
                            }, t.prototype.sendKFRead = function(t, e) {
                                var i = e.map((function(t) {
                                    return new a.default.KFSyncReadItem(t)
                                }));
                                this.send(new a.default.KFSyncReadKF({
                                    uid: t,
                                    syncReadItems: i
                                })), u.default.report({
                                    nm: "read_kefu_send",
                                    val: {
                                        web_read: JSON.stringify(e.map((function(t) {
                                            return {
                                                id: t.chatId,
                                                peerUid: t.peerUid,
                                                peerAppId: t.peerAppId,
                                                channel: t.channel,
                                                cts: t.stamp
                                            }
                                        })))
                                    }
                                })
                            }, t.prototype.send = function(t) {
                                try {
                                    this._loginSDK._sendTransUp(n.default.SVID_KEFU, t)
                                } catch (t) {
                                    console.error(t)
                                }
                            }, t.prototype._onMessage = function(t) {
                                try {
                                    this.send(this._ack(t))
                                } catch (t) {
                                    console.error(t)
                                }
                                s.default.emit(h.MESSAGE_EVENT.K_MESSAGE, t), u.default.report({
                                    nm: "message_receive_success",
                                    val: {
                                        id: t.msgUuid,
                                        mid: t.msgId,
                                        chat: r.default.get("uid") === t.receiverUid ? t.senderUid : t.receiverUid
                                    }
                                }), d.default.send({
                                    name: "message_receive_success",
                                    value: 0
                                })
                            }, t.prototype._ack = function(t) {
                                return function(t, e) {
                                    return new a.default.KFAckMsgs({
                                        uid: e,
                                        msgIds: [t.msgId]
                                    })
                                }(t, this._loginSDK.getUID())
                            }, t.prototype._onAck = function(t) {
                                s.default.emit(h.MESSAGE_EVENT.K_ACK, t), 0 === t.rescode && this._timeMap[t.msgUuid] ? u.default.report({
                                    nm: "message_send_success",
                                    val: {
                                        id: t.msgUuid,
                                        mid: t.msgId,
                                        time: Date.now() - this._timeMap[t.msgUuid]
                                    }
                                }) : u.default.report({
                                    nm: "message_send_error",
                                    val: {
                                        code: t.rescode,
                                        id: t.msgUuid
                                    }
                                })
                            }, t.prototype._onRead = function(t) {
                                s.default.emit(h.MESSAGE_EVENT.K_READ, t), u.default.report({
                                    nm: "read_kefu_receive",
                                    val: {
                                        web_read: JSON.stringify(t.syncReadItems.map((function(t) {
                                            return {
                                                id: t.chatId,
                                                peerUid: t.peerUid,
                                                peerAppId: t.peerAppId,
                                                channel: t.channel,
                                                cts: t.stamp
                                            }
                                        })))
                                    }
                                })
                            }, t.prototype._onNotice = function(t) {
                                s.default.emit(h.MESSAGE_EVENT.K_NOTICE, t)
                            }, t.constant = n.default, t.Session = a.default, t.Message = o.default, t
                        }();
                    e.Z = c
                },
                2455: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5605).SVID.SVID_KEFU,
                        n = {
                            SVID_KEFU: s,
                            KF: {
                                URI_KF_SEND_MSG_REQ: s <<
                                    16 | 1,
                                URI_KF_SEND_MSG_RES: s << 16 | 2,
                                URI_KF_SYNC_READ: s << 16 | 3,
                                URI_KF_SYNC_READ_ITEM: s << 16 | 4,
                                URI_KF_ACK_MSGS: s << 16 | 5,
                                URI_KF_SEND_KF_MSG_REQ: s << 16 | 6,
                                URI_KF_SEND_KF_MSG_RES: s << 16 | 7,
                                URI_KF_SYNC_READ_KF: s << 16 | 8,
                                URI_KF_NOTICE: s << 16 | 9,
                                URI_KF_TEXT_INFO: s << 16 | 21,
                                URI_KF_AUDIO_INFO: s << 16 | 22,
                                URI_KF_VIDEO_INFO: s << 16 | 23,
                                URI_KF_IMAGE_INFO: s << 16 | 24,
                                URI_KF_CALENDAR_INFO: s << 16 | 25,
                                URI_KF_LINK_INFO: s << 16 | 26,
                                URI_KF_MULTI_LINK_INFO: s << 16 | 27,
                                URI_KF_FILE_INFO: s << 16 | 28,
                                URI_KF_GPS_INFO: s << 16 | 29,
                                URI_KF_VCARD_INFO: s << 16 | 30,
                                URI_KF_EMOTION_INFO: s << 16 | 31,
                                URI_KF_EVENT_INFO: s << 16 | 32,
                                URI_KF_NEWEMOTION_INFO: s << 16 | 33,
                                URI_KF_QUOTE_INFO: s << 16 | 36
                            }
                        };
                    e.default = n
                },
                2033: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(2455),
                        n = i(5344),
                        a = i(5605),
                        o = i(5509),
                        r = {};
                    r.KFTextMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_TEXT,
                        uri: s.default.KF.URI_KF_TEXT_INFO,
                        init: function() {
                            this.text = "", this.font_name = "serif", this.font_size = 12, this.bold = !1, this.cipher_type = a.CIPHER_TYPE.NO_CIPHER
                        },
                        marshall: function() {
                            this.push(this.text, n.default.STRING), this.push(this.font_name, n.default.STRING), this.push(this.font_size, n.default.INT), this.push(this.bold, n.default.BOOLEAN), this.push(this.cipher_type, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.text = this.popString(), this.font_name = this.popString(), this.font_size = this.popInt(), this.bold = this.popBool()
                        }
                    }), r.KFImageMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_IMAGE,
                        uri: s.default.KF.URI_KF_IMAGE_INFO,
                        init: function() {
                            this.thumbnail = "", this.normal = "", this.original = "", this.type = "", this.token = "", this.originSize = 0, this.uploadImageType = 2
                        },
                        marshall: function() {
                            this.push(this.thumbnail, n.default.STRING), this.push(this.normal, n.default.STRING), this.push(this.original, n.default.STRING), this.push(this.type, n.default.STRING), this.push(this.token, n.default.STRING), this.push(this.originSize, n.default.INT), this.push(this.uploadImageType, n.default.BYTE)
                        },
                        unmarshall: function() {
                            this.thumbnail = this.popString(), this.normal = this.popString(), this.original = this.popString(), this.type = this.popString(), this.token = this.popString(), this.originSize = this.popInt(), this.uploadImageType = this.popByte()
                        }
                    }), r.KFLinkMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_LINK,
                        uri: s.default.KF.URI_KF_LINK_INFO,
                        init: function() {
                            this.title = "", this.image = "", this.content = "", this.link = ""
                        },
                        marshall: function() {
                            this.push(this.title, n.default.STRING), this.push(this.image, n.default.STRING), this.push(this.content, n.default.STRING), this.push(this.link, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.title = this.popString(), this.image = this.popString(), this.content = this.popString(), this.link = this.popString()
                        }
                    }), r.KFMultiLinkMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_MULTI_LINK,
                        uri: s.default.KF.URI_KF_MULTI_LINK_INFO,
                        init: function() {
                            this.num = 0, this.content = ""
                        },
                        marshall: function() {
                            this.push(this.num, n.default.SHORT), this.push(this.content, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.num = this.popShort(), this.content = this.popString()
                        }
                    }), r.KFEmotionMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_EMOTION,
                        uri: s.default.KF.URI_KF_EMOTION_INFO,
                        init: function() {
                            this.category = "", this.type = "", this.name = ""
                        },
                        marshall: function() {
                            this.push(this.category, n.default.STRING), this.push(this.type, n.default.STRING), this.push(this.name, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.category = this.popString(), this.type = this.popString(), this.name = this.popString()
                        }
                    }), r.KFEventMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_EVENT,
                        uri: s.default.KF.URI_KF_EVENT_INFO,
                        init: function() {
                            this.type = "", this.text = ""
                        },
                        marshall: function() {
                            this.push(this.type, n.default.STRING), this.push(this.text, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.type = this.popString(), this.text = this.popString()
                        }
                    }), r.KFCalendarMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_CALENDAR,
                        uri: s.default.KF.URI_KF_CALENDAR_INFO,
                        init: function() {
                            this.dtstart = 0, this.dtend = 0, this.summary = "", this.location = "", this.trigger = "", this.participant = "", this.remark = "", this.calendarID = ""
                        },
                        marshall: function() {
                            this.push(this.dtstart, n.default.LONG), this.push(this.dtend, n.default.LONG), this.push(this.summary, n.default.STRING), this.push(this.location, n.default.STRING), this.push(this.trigger, n.default.STRING), this.push(this.participant, n.default.STRING), this.push(this.remark, n.default.STRING), this.push(this.calendarID, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.dtstart = this.popLong().value(), this.dtend = this.popLong().value(), this.summary = this.popString(), this.location = this.popString(), this.trigger = this.popString(), this.participant = this.popString(), this.remark = this.popString(), this.calendarID = this.popLong().value()
                        }
                    }), r.KFAudioMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_VOICE,
                        uri: s.default.KF.URI_KF_AUDIO_INFO,
                        init: function() {
                            this.url = "", this.codec = 0, this.duration = 0, this.stamp = 0, this.token = ""
                        },
                        marshall: function() {
                            this.push(this.url, n.default.STRING), this.push(this.codec, n.default.SHORT), this.push(this.duration, n.default.SHORT), this.push(this.stamp, n.default.LONG), this.push(this.token, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.url = this.popString(), this.codec = this.popShort(), this.duration = this.popShort(), this.stamp = this.popLong().value(), this.token = this.popString()
                        }
                    }), r.KFVideoMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_VIDEO,
                        uri: s.default.KF.URI_KF_VIDEO_INFO,
                        init: function() {
                            this.videoUrl = "", this.screenshotUrl = 0, this.duration = 0, this.size = 0, this.width = 0, this.height = 0, this.timestamp = 0, this.token = ""
                        },
                        marshall: function() {
                            this.push(this.videoUrl, n.default.STRING), this.push(this.screenshotUrl, n.default.STRING), this.push(this.duration, n.default.INT), this.push(this.size, n.default.INT), this.push(this.width, n.default.SHORT), this.push(this.height, n.default.SHORT), this.push(this.timestamp, n.default.LONG), this.push(this.token, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.videoUrl = this.popString(), this.screenshotUrl = this.popString(), this.duration = this.popInt(), this.size = this.popInt(), this.width = this.popShort(), this.height = this.popShort(), this.timestamp = this.popLong().value(), this.token = this.popString()
                        }
                    }), r.KFGPSMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_GPS,
                        uri: s.default.KF.URI_KF_GPS_INFO,
                        init: function() {
                            this.latitude = 0, this.longitude = 0, this.name = ""
                        },
                        marshall: function() {
                            this.push(1e6 * this.latitude, n.default.INT), this.push(1e6 * this.longitude, n.default.INT), this.push(this.name, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.latitude = this.popInt() / 1e6, this.longitude = this.popInt() / 1e6, this.name = this.popString()
                        }
                    }), r.KFVCardMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_VCARD,
                        uri: s.default.KF.URI_KF_VCARD_INFO,
                        init: function() {
                            this.uri = s.default.KF.URI_KF_VCARD_INFO, this.uid = 0, this.name = "", this.account = "", this.type = 0, this.subtype = 0
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.name, n.default.STRING), this.push(this.account, n.default.STRING), this.push(this.type, n.default.SHORT), this.push(this.subtype, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.name = this.popString(), this.account = this.popString(), this.type = this.popShort(), this.subtype = this.popShort()
                        }
                    }), r.KFFileMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_FILE,
                        uri: s.default.KF.URI_KF_FILE_INFO,
                        init: function() {
                            this.id = "", this.url = "", this.name = "", this.format = "", this.size = 0, this.token = "", this.lsize = 0
                        },
                        marshall: function() {
                            this.push(this.id, n.default.STRING), this.push(this.url, n.default.STRING), this.push(this.name, n.default.STRING), this.push(this.format, n.default.STRING), this.push(this.size, n.default.INT), this.push(this.token, n.default.STRING), this.push(this.lsize, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.id = this.popString(), this.url = this.popString(), this.name = this.popString(), this.format = this.popString(), this.size = this.popInt(), this.token = this.popString(), this.lsize = this.popLong().value()
                        }
                    }), r.KFNewEmotionMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_NEWEMOTION,
                        uri: s.default.KF.URI_KF_NEWEMOTION_INFO,
                        init: function() {
                            this.category = "", this.packageId = "", this.packageName = "", this.id = "", this.name = "", this.type = "", this.params = ""
                        },
                        marshall: function() {
                            this.push(this.category, n.default.STRING), this.push(this.packageId, n.default.STRING), this.push(this.packageName, n.default.STRING), this.push(this.id, n.default.STRING), this.push(this.name, n.default.STRING), this.push(this.type, n.default.STRING), this.push(this.params, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.category = this.popString(), this.packageId = this.popString(), this.packageName = this.popString(), this.id = this.popString(), this.name = this.popString(), this.type = this.popString(), this.params = this.popString()
                        }
                    }), r.KFQuoteMessage = o.default.Message.extend({
                        __category: "KF",
                        __type: a.MESSAGE_TYPE.MSG_TYPE_QUOTE,
                        uri: s.default.KF.URI_KF_QUOTE_INFO,
                        init: function() {
                            this.lastReply = "{}", this.quoted = "[]", this.searchText = ""
                        },
                        marshall: function() {
                            this.push(this.lastReply, n.default.STRING), this.push(this.quoted, n.default.STRING), this.push(this.searchText, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.lastReply = this.popString(), this.quoted = this.popString(), this.searchText = this.popString();
                            var t = JSON.parse(this.lastReply);
                            t = {
                                message: o.default.Response.fromBase64(t.message),
                                defaultText: t.defaultText
                            }, this.lastReplyMessage = t;
                            var e = JSON.parse(this.quoted);
                            this.quotedMessage = e.map((function(t) {
                                return {
                                    message: o.default.Response.fromBase64(t.message),
                                    defaultText: t.defaultText
                                }
                            }))
                        }
                    }), e.default = r
                },
                1317: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(2455),
                        n = i(4053),
                        a = i(5509),
                        o = i(5344),
                        r = i(8882),
                        u = i(6973),
                        h = {};
                    h.KFSendMsgReq = a.default.Response.extend({
                        category: "KF",
                        uri: s.default.KF.URI_KF_SEND_MSG_REQ,
                        init: function() {
                            this.uri = s.default.KF.URI_KF_SEND_MSG_REQ, this.deviceType = r.default.deviceType, this.msgUuid = n.default.next(), this.msgId = 0, this.fromUid = 0, this.toUid = 0, this.toAppId = 1, this.type, this.message, this.fromName = "", this.cts = u.default.get(), this.retries = 0, this.direction = 1, this.extension = "", this.channel = 0, this.sessionSeqId = ""
                        },
                        initAfter: function() {
                            this.message && (this.type = this.type || this.message.__type)
                        },
                        marshall: function() {
                            this.push(this.deviceType, o.default.BYTE), this.push(this.msgUuid, o.default.STRING), this.push(this.msgId, o.default.LONG), this.push(this.fromUid, o.default.LONG), this.push(this.toUid, o.default.LONG), this.push(this.toAppId, o.default.SHORT), this.push(this.message.__type, o.default.INT), this.push(this.message), this.push(this.fromName, o.default.STRING), this.push(this.cts, o.default.LONG), this.push(this.retries, o.default.BYTE), this.push(this.direction, o.default.BYTE), this.push(this.extension, o.default.STRING), this.push(this.channel, o.default.SHORT), this.push(this.sessionSeqId, o.default.LONG)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.fromUid = this.popLong().value(), this.toUid = this.popLong().value(), this.toAppId = this.popShort(), this.type = this.popInt(), this.message = a.default.Message.fromBuffer(this.popBytes()), this.fromName = this.popString(), this.cts = this.popLong().value(), this.retries = this.popByte(), this.direction = this.popByte(), this.extension = this.popString(), this.channel = this.popShort(), this.sessionSeqId = this.popLong().value()
                        }
                    }), h.KFSendMsgRes = a.default.Response.extend({
                        category: "KF",
                        uri: s.default.KF.URI_KF_SEND_MSG_RES,
                        init: function() {
                            this.rescode = 0, this.msgUuid = "", this.msgId = "", this.cts = u.default.get(), this.deviceType = r.default.deviceType, this.sessionSeqId = ""
                        },
                        marshall: function() {
                            this.push(this.rescode, o.default.INT), this.push(this.msgUuid, o.default.STRING), this.push(this.msgId, o.default.LONG), this.push(this.cts, o.default.LONG), this.push(this.deviceType, o.default.BYTE), this.push(this.sessionSeqId, o.default.LONG)
                        },
                        unmarshall: function() {
                            this.rescode = this.popInt(), this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte(), this.sessionSeqId = this.popLong().value()
                        }
                    }), h.KFSendMsgKFReq = a.default.Response.extend({
                        category: "KF",
                        uri: s.default.KF.URI_KF_SEND_KF_MSG_REQ,
                        init: function() {
                            this.deviceType = r.default.deviceType, this.msgUuid = n.default.next(), this.msgId = "", this.senderUid = "", this.receiverUid = "", this.receiverAppId = "", this.bid = "", this.type = "", this.message = "", this.fromName = "", this.cts = u.default.get(), this.pushType = 0, this.direction = 1, this.retries = 0, this.extension = "", this.channel = 0, this.sessionId = "", this.sessionSeqId = ""
                        },
                        initAfter: function() {
                            this.message && (this.type = this.type || this.message.__type)
                        },
                        marshall: function() {
                            this.push(this.deviceType, o.default.BYTE), this.push(this.msgUuid, o.default.STRING), this.push(this.msgId, o.default.LONG), this.push(this.senderUid, o.default.LONG), this.push(this.receiverUid, o.default.LONG), this.push(this.receiverAppId, o.default.SHORT), this.push(this.bid, o.default.LONG), this.push(this.type, o.default.INT), this.push(this.message), this.push(this.fromName, o.default.STRING), this.push(this.cts, o.default.LONG), this.push(this.pushType, o.default.INT), this.push(this.direction, o.default.BYTE), this.push(this.retries, o.default.BYTE), this.push(this.extension, o.default.STRING), this.push(this.channel, o.default.SHORT), this.push(this.sessionId, o.default.LONG), this.push(this.sessionSeqId, o.default.LONG)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.senderUid = this.popLong().value(), this.receiverUid = this.popLong().value(), this.receiverAppId = this.popShort(), this.bid = this.popLong().value(), this.type = this.popInt(), this.message = a.default.Message.fromBuffer(this.popBytes()), this.fromName = this.popString(), this.cts = this.popLong().value(), this.pushType = this.popInt(), this.direction = this.popByte(), this.retries = this.popByte(), this.extension = this.popString(), this.channel = this.popShort(), this.sessionId = this.popLong().value(), this.sessionSeqId = this.popLong().value()
                        }
                    }), h.KFSendMsgKFRes = a.default.Response.extend({
                        category: "KF",
                        uri: s.default.KF.URI_KF_SEND_KF_MSG_RES,
                        init: function() {
                            this.rescode = 0, this.msgUuid = "", this.msgId = "", this.cts = u.default.get(), this.deviceType = r.default.deviceType, this.sessionSeqId = ""
                        },
                        marshall: function() {
                            this.push(this.rescode, o.default.INT), this.push(this.msgUuid, o.default.STRING), this.push(this.msgId, o.default.LONG), this.push(this.cts, o.default.LONG), this.push(this.deviceType, o.default.BYTE), this.push(this.sessionSeqId, o.default.LONG)
                        },
                        unmarshall: function() {
                            this.rescode = this.popInt(), this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte(), this.sessionSeqId = this.popLong().value()
                        }
                    }), h.KFAckMsgs = a.default.Response.extend({
                        category: "KF",
                        uri: s.default.KF.URI_KF_ACK_MSGS,
                        init: function() {
                            this.deviceType = r.default.deviceType, this.uid = 0, this.msgIds = []
                        },
                        marshall: function() {
                            this.push(this.deviceType, o.default.BYTE), this.push(this.uid, o.default.LONG), this.push(this.msgIds)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.uid = this.popLong().value(), this.msgIds = this._popArrayLong()
                        }
                    }), h.KFSyncRead = a.default.Response.extend({
                        category: "KF",
                        uri: s.default.KF.URI_KF_SYNC_READ,
                        init: function() {
                            this.uid = "", this.deviceType = r.default.deviceType, this.syncReadItems = []
                        },
                        marshall: function() {
                            this.push(this.uid, o.default.LONG), this.push(this.deviceType, o.default.BYTE), this.push(this.syncReadItems, o.default.ARRAY_ARRAY)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.deviceType = this.popByte();
                            for (var t = this._popArrayArray(), e = 0; e < t.length; e++) this.syncReadItems.push((new h.KFSyncReadItem).parserFromBuffer(t[e]))
                        }
                    }), h.KFSyncReadKF = a.default.Response.extend({
                        category: "KF",
                        uri: s.default.KF.URI_KF_SYNC_READ_KF,
                        init: function() {
                            this.uid = 0, this.deviceType = r.default.deviceType, this.syncReadItems = []
                        },
                        marshall: function() {
                            this.push(this.uid, o.default.LONG), this.push(this.deviceType, o.default.BYTE), this.push(this.syncReadItems, o.default.ARRAY_ARRAY)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.deviceType = this.popByte();
                            for (var t = this._popArrayArray(), e = 0; e < t.length; e++) this.syncReadItems.push((new h.KFSyncReadItem).parserFromBuffer(t[e]))
                        }
                    }), h.KFSyncReadItem = a.default.Response.extend({
                        category: "KF",
                        uri: s.default.KF.URI_KF_SYNC_READ_ITEM,
                        init: function() {
                            this.chatId = "", this.peerUid = "", this.peerAppId = 0, this.stamp = "", this.channel = 0
                        },
                        marshall: function() {
                            this.push(this.chatId, o.default.LONG), this.push(this.peerUid, o.default.LONG), this.push(this.peerAppId, o.default.SHORT), this.push(this.stamp, o.default.LONG), this.push(this.channel, o.default.SHORT)
                        },
                        unmarshall: function() {
                            this.chatId = this.popLong().value(), this.peerUid = this.popLong().value(), this.peerAppId = this.popShort(), this.stamp = this.popLong().value(), this.channel = this.popShort()
                        }
                    }), h.KFNotice = a.default.Response.extend({
                        category: "KF",
                        uri: s.default.KF.URI_KF_NOTICE,
                        init: function() {
                            this.toUid = 0, this.type = 0, this.data = "", this.cts = u.default.get(), this.channel = 0
                        },
                        marshall: function() {
                            this.push(this.toUid, o.default.LONG), this.push(this.type, o.default.INT), this.push(this.data, o.default.STRING), this.push(this.cts, o.default.LONG), this.push(this.channel, o.default.SHORT)
                        },
                        unmarshall: function() {
                            this.toUid = this.popLong().value(), this.type = this.popInt(), this.data = this.popString(), this.cts = this.popLong().value(), this.channel = this.popShort()
                        }
                    }), e.default = h
                },
                7352: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(4423),
                        n = i(6271),
                        a = i(3257),
                        o = i(5605),
                        r = i(8473),
                        u = i(2939),
                        h = i(5678),
                        d = function() {
                            function t(t) {
                                this._authenticationData = {}, this._protocols = {
                                    passport: n.default.PassportReq,
                                    uid: n.default.UidReq,
                                    visitor: n.default.VisitorReq
                                }, this._timeoutHandle = 0, this._lastAuthSuccessTime = 0, this._connection = t, r.default.on("ConnStatusChange", this._onConnectionStatusChange.bind(this)), r.default.on(s.default.Login.PLOGINBYPASSPORTRES_URI, this._onAuthSuccess.bind(this)), r.default.on(s.default.Login.PLOGINBYUIDRES_URI, this._onAuthSuccess.bind(this)), r.default.on(s.default.Login.PVISITORLOGINRES_URI, this._onAuthSuccess.bind(this)), r.default.on(s.default.Login.PKICKOFF_URI, this._onKickOff.bind(this)), r.default.on(s.default.Login.PKICKOFFWITHSAMEDEVICEID_URI, this._onKickOffWithSameDevice.bind(this))
                            }
                            return t.prototype.loginWithPassport = function(t, e, i) {
                                void 0 === t && (t = ""), void 0 === e && (e = ""), void 0 === i && (i = !1), this._register("passport", {
                                    passport: t,
                                    password: e,
                                    supportMultiDevices: i
                                }), this._authenticate()
                            }, t.prototype.loginWithUid = function(t, e, i) {
                                void 0 === t && (t = ""), void 0 === e && (e = ""), void 0 === i && (i = !1), this._register("uid", {
                                    uid: t,
                                    cookie: e,
                                    supportMultiDevices: i
                                }), this._authenticate()
                            }, t.prototype.loginWithVisitor = function(t, e) {
                                void 0 === t && (t = ""), void 0 === e && (e = ""), this._register("visitor", {
                                    uid: t,
                                    xsid: e
                                }), this._authenticate()
                            }, t.prototype._register = function(t, e) {
                                void 0 === t && (t = ""), this._authenticationData = {
                                    type: t,
                                    data: e
                                }
                            }, t.prototype._getAuthenticationData = function() {
                                return new this._protocols[this._authenticationData.type](this._authenticationData.data)
                            }, t.prototype._authenticate = function() {
                                var t = this;
                                this._connection.getStatus() === o.LOGIN_STATUS.CONNECTED && this._authenticationData.type && (a.default.report({
                                    nm: "login_send_start",
                                    val: {
                                        type: this._authenticationData.uid ? 2 : 1,
                                        passport: this._authenticationData.data.uid ? this._authenticationData.data.uid : this._authenticationData.data.passport,
                                        id: this._authenticationData.data.cookie ? this._authenticationData.data.cookie.slice(0, 15) : void 0,
                                        websocketId: h.default.get("websocketId")
                                    }
                                }), this._connection.send(this._getAuthenticationData(), !1), this._reset(), this._connection._changeConnectStatus(o.LOGIN_STATUS.AUTHENTICATING, "authenticating"), this._timeoutHandle = setTimeout((function() {
                                    a.default.report({
                                        nm: "login_auth_timeout",
                                        val: {
                                            type: "websocket" === t._connection.connectionType ? 2 : 3,
                                            id: t._authenticationData.cookie ? t._authenticationData.cookie.slice(0, 15) : void 0,
                                            websocketId: h.default.get("websocketId")
                                        }
                                    }), t._onAuthSuccess({
                                        rescode: o.RESCODE.RES_TIMEOUT
                                    }), t._connection._changeConnectStatus(o.LOGIN_STATUS.DISCONNECTED, "authenticate_timeout")
                                }), 3e4), h.default.set("_startSendLoginTime", Date.now()))
                            }, t.prototype.logout = function() {
                                this._connection.send(new n.default.LogoutReq({
                                    uid: h.default.get("uid")
                                })), this._authenticationData = {}, r.default.emit("Logout")
                            }, t.prototype.logoutByFalseKickoff = function(t) {
                                r.default.emit(s.default.Login.PKICKOFF_URI, {
                                    uid: h.default.get("uid"),
                                    appid: h.default.get("appId"),
                                    reason: t
                                })
                            }, t.prototype._onConnectionStatusChange = function(t) {
                                switch (void 0 === t && (t = o.LOGIN_STATUS.CONNECTING), t) {
                                    case o.LOGIN_STATUS.CONNECTING:
                                        r.default.emit(o.LOGIN_EVENT.CONNECTING);
                                        break;
                                    case o.LOGIN_STATUS.CONNECTED:
                                        r.default.emit(o.LOGIN_EVENT.CONNECTED), this._authenticate();
                                        break;
                                    case o.LOGIN_STATUS.AUTHENTICATING:
                                        r.default.emit(o.LOGIN_EVENT.AUTHENTICATING);
                                        break;
                                    case o.LOGIN_STATUS.DISCONNECTED:
                                        r.default.emit(o.LOGIN_EVENT.DISCONNECT), this._lastAuthSuccessTime = Date.now()
                                }
                            }, t.prototype._onAuthSuccess = function(t) {
                                if (this._reset(), t.rescode === o.RESCODE.RES_SUCCESS) {
                                    this._connection._changeConnectStatus(o.LOGIN_STATUS.AUTHENTICATED, "authenticated"), r.default.emit("AuthSuccess", t.uid, t.cookie, h.default.get("appId"), t.altoken, t.channel_map), h.default.setAll({
                                        uid: t.uid,
                                        xsid: t.cookie,
                                        altoken: t.altoken,
                                        channelMap: t.channel_map
                                    }), a.default.setAnalyticsUid(t.uid);
                                    var e = h.default.get("_startLoginTime"),
                                        i = h.default.get("_startSendLoginTime"),
                                        s = h.default.get("_startConnectToLoginTime");
                                    a.default.report({
                                        nm: "login_success",
                                        val: {
                                            type: "websocket" === this._connection.connectionType ? 2 : 3,
                                            xsid: h.default.get("xsid").slice(0, 15),
                                            id: h.default.get("altoken").slice(0, 15),
                                            exchange_time: i ? Date.now() - i : void 0,
                                            login_time: e > 0 ? Date.now() - e : void 0,
                                            time: s ? Date.now() - s : void 0,
                                            websocketId: h.default.get("websocketId")
                                        }
                                    }), h.default.remove("_startLoginTime"), h.default.remove("_startConnectToLoginTime"), u.default.send({
                                        name: "login_finished",
                                        value: s > 0 ? Date.now() - s : 0,
                                        tag: {
                                            status: 1
                                        }
                                    })
                                } else a.default.report({
                                    nm: "login_authfail",
                                    val: {
                                        code: t.rescode,
                                        type: "websocket" === this._connection.connectionType ? 2 : 3,
                                        id: this._authenticationData.cookie ? this._authenticationData.cookie.slice(0, 15) : void 0,
                                        websocketId: h.default.get("websocketId")
                                    }
                                }), this._authenticationData = {}, r.default.emit("AuthFail", t.rescode), u.default.send({
                                    name: "login_finished",
                                    value: t.rescode,
                                    tag: {
                                        status: 0
                                    }
                                })
                            }, t.prototype._onKickOff = function(t) {
                                this._connection._changeConnectStatus(o.LOGIN_STATUS.DISCONNECTED, "terminated"), this._authenticationData = {}, r.default.emit("KickOff", {
                                    uid: t.uid,
                                    appid: t.appid,
                                    reason: t.reason
                                }), this._reset(), a.default.report({
                                    nm: "login_kickoff",
                                    val: {
                                        code: t.reason,
                                        xsid: h.default.get("xsid"),
                                        id: h.default.get("altoken").slice(0, 15),
                                        websocketId: h.default.get("websocketId")
                                    }
                                }), u.default.send({
                                    name: "login_kickoff",
                                    value: t.reason
                                })
                            }, t.prototype._onKickOffWithSameDevice = function(t) {
                                if (Date.now() - this._lastAuthSuccessTime < 500) return a.default.report({
                                    nm: "login_kickoff_same_in_delay",
                                    val: {
                                        code: -1,
                                        xsid: h.default.get("xsid"),
                                        id: h.default.get("altoken").slice(0, 15),
                                        websocketId: h.default.get("websocketId")
                                    }
                                }), void this._connection._changeConnectStatus(o.LOGIN_STATUS.DISCONNECTED, "login_kickoff_same_in_delay");
                                this._connection._changeConnectStatus(o.LOGIN_STATUS.DISCONNECTED, "terminated"), this._authenticationData = {}, r.default.emit("KickOffWithSameDeviceId", {
                                    uid: t.uid,
                                    appId: t.appId,
                                    deviceType: t.deviceType
                                }), this._reset(), a.default.report({
                                    nm: "login_kickoff_same",
                                    val: {
                                        code: -1,
                                        xsid: h.default.get("xsid"),
                                        id: h.default.get("altoken").slice(0, 15),
                                        websocketId: h.default.get("websocketId")
                                    }
                                }), u.default.send({
                                    name: "login_kickoff_same",
                                    value: t.reason
                                })
                            }, t.prototype._reset = function() {
                                clearTimeout(this._timeoutHandle), this._timeoutHandle = 0
                            }, t
                        }();
                    e.default = d
                },
                3234: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s, n, a = i(9786),
                        o = i(9225),
                        r = i(3257),
                        u = i(5605),
                        h = i(8473),
                        d = i(2939),
                        c = i(5678),
                        p = i(823);
                    s = i(4857).Z, n = i(6024).Z;
                    var l = /wss?:\/\/[^:]+(:\d+)?/,
                        f = function() {
                            function t(t) {
                                var e = this,
                                    s = t.shouldConnectWhenInit,
                                    n = void 0 === s || s,
                                    a = t.autoConnect,
                                    o = void 0 === a || a;
                                this._autoReconnectMark = !1, this._connection = null, this._onlyUseLongPolling = !1, this._status = u.LOGIN_STATUS.DISCONNECTED, this._singleConnectTimeoutHandle = 0, this._reconnectTimeoutHandle = 0, this._connectNetworkOnlineStatus = !0, this._currentUrl = "", this._websocketUrls = [], this._longPollingUrls = [], this._connectTimeoutTimer = 0, this._useLongPolling = !0, this._lastDetectTime = -1, this._lastGetRemoteUrlTime = 0, this._currentWebsocketRetryNumber = 0, this.connectionType = u.CONNECT_TYPE.WEBSOCKET, this._onlyUseLongPolling = "bosh" === c.default.get("loginWay"), this._useLongPolling = !1 !== c.default.get("useLongPolling"), this._initLoginUrl(), n && this._useNextConnection(), this._autoReconnectMark = o, this._autoReconnectMark && this._autoReconnect(), i.g.addEventListener("offline", (function() {
                                    e._status !== u.LOGIN_STATUS.DISCONNECTED && e.disconnect("offline"), clearTimeout(e._connectTimeoutTimer), e._connectTimeoutTimer = 0
                                })), i.g.addEventListener("online", (function() {
                                    e._autoReconnectMark && e.reconnectWhenConnectionDisconnected()
                                })), setInterval((function() {
                                    var t = Date.now();
                                    e._lastDetectTime > 0 && t - e._lastDetectTime > 3e4 && e.reconnect(), e._lastDetectTime = t
                                }), 5e3)
                            }
                            return t.prototype.connect = function() {
                                var t = this;
                                this._initConnectAnalytics();
                                var e = this._getLoginUrl();
                                e === this._currentUrl && this.connectionType === u.CONNECT_TYPE.WEBSOCKET && this._connectNetworkOnlineStatus ? this._currentWebsocketRetryNumber++ : this._currentWebsocketRetryNumber = 1, this._connectNetworkOnlineStatus = this.getNetWorkStatus(), this._connection.connect(e), this._connection.url = e, this._currentUrl = e, this._connection.onOpen(this.onConnectSuccess.bind(this)), this._connection.onMessage(this.onMessage.bind(this)), this._connection.onClose(this.onClose.bind(this)), this._connection.onError(this.onError.bind(this)), this._changeConnectStatus(u.LOGIN_STATUS.CONNECTING, "connecting"), this._singleConnectTimeoutHandle = setTimeout((function() {
                                    t.reconnect()
                                }), this.connectionType === u.CONNECT_TYPE.WEBSOCKET && c.default.get("env") === u.ENV.ONLINE ? 3e3 : 15e3);
                                var i = this.getNetWorkStatus();
                                r.default.report({
                                    nm: "login_connect",
                                    val: {
                                        net: i ? 1 : 0
                                    }
                                }), i && d.default.send({
                                    name: "login_connect",
                                    value: 0,
                                    tag: {
                                        status: 0
                                    }
                                })
                            }, t.prototype.reconnect = function() {
                                this._status !== u.LOGIN_STATUS.AUTHENTICATING && this._useNextConnection()
                            }, t.prototype.reconnectWhenConnectionDisconnected = function() {
                                this._status === u.LOGIN_STATUS.DISCONNECTED && this._useNextConnection()
                            }, t.prototype.getNetWorkStatus = function() {
                                return i.g.navigator.onLine
                            }, t.prototype._autoReconnect = function() {
                                var t = this;
                                h.default.on("ConnStatusChange", (function() {
                                    if (t._autoReconnectMark) switch (t._status) {
                                        case u.LOGIN_STATUS.DISCONNECTED:
                                            clearTimeout(t._reconnectTimeoutHandle), t._reconnectTimeoutHandle = setTimeout((function() {
                                                t.reconnectWhenConnectionDisconnected()
                                            }), 500)
                                    }
                                }))
                            }, t.prototype.setAutoConnectToFalse = function() {
                                this._autoReconnectMark = !1
                            }, t.prototype.disconnect = function(t) {
                                void 0 === t && (t = ""), this._changeConnectStatus(u.LOGIN_STATUS.DISCONNECTING, t), this._connection.disconnect(), this._changeConnectStatus(u.LOGIN_STATUS.DISCONNECTED, t)
                            }, t.prototype.send = function(t, e) {
                                void 0 === e && (e = !0), this._status !== u.LOGIN_STATUS.AUTHENTICATED && e || this._connection.send(t.getBytes())
                            }, t.prototype.onConnectSuccess = function() {
                                this._changeConnectStatus(u.LOGIN_STATUS.CONNECTED, "connected"), this._reset(), this._connectedReset();
                                var t = c.default.get("_startConnectTime");
                                r.default.report({
                                    nm: "login_connect_success",
                                    val: {
                                        socket_time: t ? Date.now() - t : void 0
                                    }
                                }), d.default.send({
                                    name: "login_connect_finished",
                                    value: t ? Date.now() - t : 0,
                                    tag: {
                                        status: 1,
                                        isWebSocket: this.connectionType === u.CONNECT_TYPE.WEBSOCKET ? 1 : 0
                                    }
                                }), c.default.remove("_startConnectTime"), clearTimeout(this._connectTimeoutTimer), this._connectTimeoutTimer = 0, this._recordCurrentURLInLocalStorage()
                            }, t.prototype.onMessage = function(t) {
                                h.default.emit("_dataRecv", t)
                            }, t.prototype.onClose = function(t) {
                                void 0 === t && (t = ""), this._connection.sessionId === t && (this._reset(), (this._status !== u.LOGIN_STATUS.CONNECTING || !this._connectNetworkOnlineStatus || !this.getNetWorkStatus() || this._currentWebsocketRetryNumber <
                                    3) && this._connectedReset(), this.disconnect("onClose"), this.getNetWorkStatus() && d.default.send({
                                    name: "login_connect_finished",
                                    value: 0,
                                    tag: {
                                        status: 0
                                    }
                                }))
                            }, t.prototype.onError = function() {}, t.prototype.isWebSocket = function() {
                                return this.connectionType === u.CONNECT_TYPE.WEBSOCKET
                            }, t.prototype.isLongPolling = function() {
                                return this.connectionType === u.CONNECT_TYPE.LONG_POLLING
                            }, t.prototype.getStatus = function() {
                                return this._status
                            }, t.prototype._getLoginUrl = function() {
                                return this.connectionType === u.CONNECT_TYPE.WEBSOCKET ? (0 === this._websocketUrls.length && this._putLocalWebSocketUrlInArray(), this._websocketUrls.shift() || "") : this._longPollingUrls[0]
                            }, t.prototype._getRemoteWebSocketUrl = function() {
                                var t = this;
                                r.default.report("login_lvs_start");
                                var e = Date.now();
                                if (e - this._lastGetRemoteUrlTime < 1e4) return this._putLocalWebSocketUrlInArray(), this._putLocalLongPollingUrlInArray(), void r.default.report({
                                    nm: "login_lvs_local_success"
                                });
                                this._lastGetRemoteUrlTime = e, a.default.getRemoteLoginAddr({
                                    success: function(e) {
                                        var i, s = e.websocketAddr,
                                            n = void 0 === s ? [] : s,
                                            a = e.longPollingAddr,
                                            o = void 0 === a ? [] : a;
                                        if (n.length > 0) {
                                            var h = (n = n.map((function(t) {
                                                return c.default.get("useHTTPS") || c.default.get("env") === u.ENV.ONLINE ? "wss://" + t : "ws://" + t
                                            }))).filter((function(t) {
                                                return l.test(t)
                                            }));
                                            h.length > 0 ? (i = t._websocketUrls).push.apply(i, h) : t._putLocalWebSocketUrlInArray()
                                        }
                                        o.length > 0 ? t._longPollingUrls = o.map((function(t) {
                                            return c.default.get("useHTTPS") || c.default.get("env") === u.ENV.ONLINE ? "https://" + t : "http://" + t
                                        })) : t._putLocalLongPollingUrlInArray(), r.default.report({
                                            nm: "login_lvs_success",
                                            val: {
                                                host: n.join(",")
                                            }
                                        })
                                    },
                                    error: function() {
                                        0 === t._websocketUrls.length && t._putLocalWebSocketUrlInArray(), 0 === t._longPollingUrls.length && t._putLocalLongPollingUrlInArray(), r.default.report("login_lvs_error")
                                    }
                                })
                            }, t.prototype._putLocalWebSocketUrlInArray = function() {
                                var t;
                                (t = this._websocketUrls).push.apply(t, this._getConfigLoginUrl(u.CONNECT_TYPE.WEBSOCKET))
                            }, t.prototype._putLocalLongPollingUrlInArray = function() {
                                this._longPollingUrls = this._getConfigLoginUrl(u.CONNECT_TYPE.LONG_POLLING)
                            }, t.prototype._useNextConnection = function() {
                                this._connection && this._connection.disconnect(), this._shouldUseLongPolling() ? this._useLongPolling ? this._degradeConnection() : (this._putLocalWebSocketUrlInArray(), this._useNextConnection(), this._getRemoteWebSocketUrl()) : (this._initWebSocket(), this.connect())
                            }, t.prototype._degradeConnection = function() {
                                this._getRemoteWebSocketUrl(), this.connectionType === u.CONNECT_TYPE.WEBSOCKET || this._onlyUseLongPolling ? (this._initLongPolling(), this.connect()) : this._changeConnectStatus(u.LOGIN_STATUS.DISCONNECTED, "disconnected")
                            }, t.prototype._initWebSocket = function() {
                                this._connection = new s, this.connectionType = u.CONNECT_TYPE.WEBSOCKET
                            }, t.prototype._initLongPolling = function() {
                                this._connection = new n, this.connectionType = u.CONNECT_TYPE.LONG_POLLING
                            }, t.prototype._initLoginUrl = function() {
                                this._putLocalWebSocketUrlInArray(), this._putLocalLongPollingUrlInArray()
                            }, t.prototype._getConfigLoginUrl = function(t) {
                                return void 0 === t && (t = u.CONNECT_TYPE.WEBSOCKET), o.default.getConfig(c.default.get("env"), c.default.get("useHTTPS"), c.default.get("appId"), t, c.default.get("useChatRoomURL"))
                            }, t.prototype._changeConnectStatus = function(t, e) {
                                this._status = t, h.default.emit("ConnStatusChange", t, e)
                            }, t.prototype._reset = function() {
                                clearTimeout(this._reconnectTimeoutHandle), this._connectNetworkOnlineStatus = !0, clearTimeout(this._singleConnectTimeoutHandle), this._singleConnectTimeoutHandle = null
                            }, t.prototype._connectedReset = function() {
                                this.connectionType === u.CONNECT_TYPE.WEBSOCKET && this._websocketUrls.unshift(this._connection.url)
                            }, t.prototype._shouldUseLongPolling = function() {
                                return this._onlyUseLongPolling || (p.default || 0 === this._websocketUrls.length) && this._currentWebsocketRetryNumber >= 3
                            }, t.prototype._initConnectAnalytics = function() {
                                (c.default.get("_startConnectTime") || this._connectTimeoutTimer) && this.getNetWorkStatus() || (c.default.set("_startConnectTime", Date.now()), c.default.set("_startConnectToLoginTime", Date.now()), clearTimeout(this._connectTimeoutTimer), this._connectTimeoutTimer = setTimeout((function() {
                                    r.default.report({
                                        nm: "login_connect_timeout",
                                        val: {
                                            passport: c.default.get("passport"),
                                            uid: c.default.get("uid")
                                        }
                                    })
                                }), 15e3))
                            }, t.prototype._recordCurrentURLInLocalStorage = function() {
                                try {
                                    localStorage.setItem("web_sdk_current_url", this._currentUrl)
                                } catch (t) {
                                    console.log("web_sdk_current_url: ", this._currentUrl)
                                }
                            }, t
                        }();
                    e.default = f
                },
                4423: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5605).SVID.SVID_LOGIN,
                        n = {
                            SVID_LOGIN: s,
                            Login: {
                                PKICKOFF_URI: s << 16 | 100,
                                EXCHANGEREQ_URI: s << 16 | 102,
                                EXCHANGERES_URI: s << 16 | 103,
                                PKICKOFFWITHSAMEDEVICEID_URI: s << 16 | 106,
                                PKICKOFFWITHSAMEDEVICEID2_URI: s << 16 | 127,
                                PLOGINBYUID_URI: s << 16 | 1,
                                PLOGINBYUIDRES_URI: s << 16 | 2,
                                PLOGINPING_URI: s << 16 | 3,
                                PLOGINBYPASSPORT_URI: s << 16 | 4,
                                PLOGINBYPASSPORTRES_URI: s << 16 | 5,
                                PLOGOUT_URI: s << 16 | 10,
                                PQRYSRVTIMESTAMP_URI: s << 16 | 11,
                                PQRYSRVTIMESTAMPRES_URI: s << 16 | 12,
                                PDETECTCLIENT_URI: s << 16 | 13,
                                PDETECTCLIENTACK_URI: s << 16 | 14,
                                PVISITORLOGIN_URI: s << 16 | 16,
                                PVISITORLOGINRES_URI: s << 16 | 17
                            }
                        };
                    e.default = n
                },
                2182: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(4423),
                        n = i(6271),
                        a = i(5605),
                        o = i(8473),
                        r = i(5251),
                        u = i(5678),
                        h = function() {
                            function t(t) {
                                var e = this;
                                this._pingTry = null, this._connection = null, this._sendPingHandle = null, this._connection = t, this._pingTry = new r.default([10], this), this._pingTry.timeout((function() {
                                    e._connection.disconnect("pingTimeout")
                                })), o.default.on(s.default.Login.PDETECTCLIENT_URI, (function(t) {
                                    e._sendDetectAck(t.server_tsms)
                                })), o.default.on("AuthSuccess", (function() {
                                    clearInterval(e._sendPingHandle), e._connection.isWebSocket() && (e._sendPingHandle = setInterval((function() {
                                        e._sendPing()
                                    }), 1e4))
                                })), o.default.on("_dataRecv", (function() {
                                    e.reset()
                                })), o.default.on("ConnStatusChange", (function(t) {
                                    t === a.LOGIN_STATUS.DISCONNECTED && (clearInterval(e._sendPingHandle), e._sendPingHandle = null, e.reset())
                                }))
                            }
                            return t.prototype.reset = function() {
                                this._pingTry.reset()
                            }, t.prototype._sendPing = function() {
                                var t = this;
                                this._connection.send(new n.default.Ping({
                                    uid: this._connection.UID
                                })), this._pingTry.run((function() {
                                    t._sendPing()
                                }))
                            }, t.prototype._sendDetectAck = function(t) {
                                this._connection.send(new n.default.DetectAck({
                                    uid: u.default.get("uid"),
                                    server_tsms: t
                                }))
                            }, t.prototype.disconnect = function() {
                                this._connection.disconnect(500)
                            }, t
                        }();
                    e.default = h
                },
                330: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(7352),
                        n = i(3234),
                        a = i(2182),
                        o = i(5476),
                        r = i(3257),
                        u = i(5605),
                        h = i(5605),
                        d = i(8473),
                        c = i(8554),
                        p = i(5509),
                        l = i(5678),
                        f = function() {
                            function t(t) {
                                this.on = d.default.on, this.once = d.default.once, this.emit = d.default.emit, this.off = d.default.removeAllListeners, l.default.setAll(t);
                                var e = l.default.get("appId");
                                c.default.prototype.appid = e;
                                var i = !0;
                                void 0 !== l.default.get("autoConnect") && (i = l.default.get("autoConnect"));
                                var r = !0;
                                void 0 !== l.default.get("shouldConnectWhenInit") && (r = l.default.get("shouldConnectWhenInit")), this._connection = new n.default({
                                    shouldConnectWhenInit: r,
                                    autoConnect: i
                                }), this._authManager = new s.default(this._connection), this._timeCalibration = new o.default(this._connection), this._daemon = new a.default(this._connection)
                            }
                            return t.prototype._sendTransUp = function(t, e) {
                                if (e) {
                                    e.setUid(this.getUID());
                                    var i = new p.default.TransUp({
                                        __master: e.__master,
                                        uri: h.BASE_URI.URI_UNI_TRANSUP,
                                        svid: t,
                                        uid: this.getUID(),
                                        buf: e.getBytes()
                                    });
                                    this._send(i)
                                }
                            }, t.prototype.getUID = function() {
                                return l.default.get("uid")
                            }, t.prototype.getAppId = function() {
                                return l.default.get("appId")
                            }, t.prototype.getConnectionUrl = function() {
                                return this._connection.url
                            }, t.prototype.login = function(t, e, i, s) {
                                l.default.set("_startLoginTime", Date.now()), this._authManager.loginWithPassport(t, e, i, s), l.default.set("passport", t), r.default.report("login_start")
                            }, t.prototype.loginWithUidAndToken = function(t, e, i, s) {
                                l.default.set("_startLoginTime", Date.now()), this._authManager.loginWithUid(t, e, i, s), l.default.set("uid", t), r.default.report("login_start")
                            }, t.prototype.loginWithVisitor = function(t, e) {
                                l.default.set("_startLoginTime", Date.now()), this._authManager.loginWithVisitor(t, e), r.default.report("login_start")
                            }, t.prototype.logout = function() {
                                this._authManager.logout(), this.reconnect()
                            }, t.prototype.logoutByFalseKickoff = function() {
                                this._authManager.logoutByFalseKickoff()
                            }, t.prototype.reconnect = function() {
                                this._connection.reconnect()
                            }, t.prototype._send = function(t) {
                                this._connection.send(t)
                            }, t.constant = u, t
                        }();
                    e.default = f
                },
                9225: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5605),
                        n = i(7486),
                        a = function() {
                            function t() {
                                this._config = {
                                    test: {
                                        websocket: {
                                            0: ["wss.xm.test.sankuai.com"]
                                        },
                                        longPolling: {
                                            0: ["polling.xm.test.sankuai.com/nx-webpush"]
                                        }
                                    },
                                    st: {
                                        websocket: {
                                            0: ["dxlwss.xm.st.sankuai.com"]
                                        },
                                        longPolling: {
                                            0: ["polling.xm.st.sankuai.com/nx-webpush"]
                                        }
                                    },
                                    online: {
                                        websocket: {
                                            0: ["wss.neixin.cn"],
                                            3: ["wmdxlwss.meituan.com"],
                                            4: ["wmdxlwss.meituan.com"],
                                            14: ["wmdxlwss.meituan.com"],
                                            17: ["wmdxlwss.meituan.com"],
                                            36: ["dxlwss.meituan.com"],
                                            47: ["dxlwss.meituan.com"],
                                            chatRoomURL: ["dxlwss.meituan.com"]
                                        },
                                        longPolling: {
                                            0: ["polling.neixin.cn/sdk-webpush"],
                                            1: ["polling.neixin.cn/nx-webpush"],
                                            36: ["chatroom.sankuai.com/crwebpush"],
                                            chatRoomURL: ["chatroom.sankuai.com/crwebpush"]
                                        }
                                    }
                                }
                            }
                            return t.prototype.getConfig = function(t, e, i, a, o) {
                                void 0 === t && (t = s.ENV.ONLINE), void 0 === e && (e = !1), void 0 === a && (a = s.CONNECT_TYPE.WEBSOCKET), void 0 === o && (o = !1), n.default.isNumber(i) || (i = 0), t !== s.ENV.TEST && t !== s.ENV.ST && t !== s.ENV.ONLINE && (t = s.ENV.ONLINE);
                                var r = [],
                                    u = this._config[t][a];
                                if (r = o && u.chatRoomURL ? u.chatRoomURL : u[i] ? u[i] : u[0], t === s.ENV.ONLINE || e) {
                                    if (a === s.CONNECT_TYPE.WEBSOCKET) return r.map((function(t) {
                                        return "wss://" + t
                                    }));
                                    if (a === s.CONNECT_TYPE.LONG_POLLING) return r.map((function(t) {
                                        return "https://" + t
                                    }))
                                } else {
                                    if (a === s.CONNECT_TYPE.WEBSOCKET) return r.map((function(t) {
                                        return "ws://" + t
                                    }));
                                    if (a === s.CONNECT_TYPE.LONG_POLLING) return r.map((function(t) {
                                        return "http://" + t
                                    }))
                                }
                            }, t
                        }();
                    e.default = new a
                },
                6024: (t, e, i) => {
                    "use strict";
                    var s = i(7294),
                        n = i(823),
                        a = i(3257),
                        o = i(4053),
                        r = i(5678),
                        u = i(6729),
                        h = {
                            code: 1,
                            reason: "timeout"
                        },
                        d = {
                            code: 2,
                            reason: "abort"
                        },
                        c = {
                            code: 3,
                            reason: "auth fail"
                        },
                        p = {
                            code: 4,
                            reason: "server error"
                        },
                        l = function() {
                            function t() {
                                this._token = "", this._pollingXHR = null, this._eventEmitter = null, this._startTime = 0, this._startConnectFlag = !0, this._retryHandle = null, this._retryTime = 500, this.url = "", this.status = "normal", this.sessionId = o.default.next(), this._eventEmitter = new u, this.status = "normal"
                            }
                            return t.prototype.connect = function(t) {
                                this.url = t, this._token = "", this.status = "normal", this._closePolling(), this._pollingXHR = new f({
                                    url: this.url + "/polling",
                                    method: "POST",
                                    reqType: "open",
                                    onRequestStateChange: this._onRequestStateChange.bind(this),
                                    onError: this._XHRError.bind(this)
                                }), this._startConnectFlag = !0, this._pollingXHR.reqType = "open", this._pollingXHR.send("open=true"), this._startTime = Date.now(), a.default.report({
                                    nm: "login_bosh_start",
                                    val: {
                                        net: navigator.onLine ? 1 : 0
                                    }
                                })
                            }, t.prototype.disconnect = function() {
                                this._closePolling(), this.status = "disconnect", a.default.report({
                                    nm: "login_bosh_close",
                                    val: {
                                        net: navigator.onLine ? 1 : 0,
                                        host: this.url
                                    }
                                })
                            }, t.prototype.send = function(t) {
                                var e = new f({
                                    url: this.url + "/send",
                                    method: "POST",
                                    reqType: "send",
                                    onRequestStateChange: this._onRequestStateChange.bind(this),
                                    onError: this._XHRError.bind(this)
                                });
                                e.reqType = "send";
                                try {
                                    var i = s.default.BAtob64(new Uint8Array(t));
                                    e.send("token=" + this._token + "&base64Str =" + encodeURIComponent(i))
                                } catch (t) {
                                    console.error(t)
                                }
                            }, t.prototype.onOpen = function(t) {
                                var e = this;
                                this._eventEmitter.on("open", (function() {
                                    a.default.report({
                                        nm: "login_bosh_success",
                                        val: {
                                            time: Date.now() - e._startTime
                                        }
                                    }), t()
                                }))
                            }, t.prototype.onMessage = function(t) {
                                this._eventEmitter.on("message", (function(e) {
                                    t(e)
                                }))
                            }, t.prototype.onClose = function(t) {
                                var e = this;
                                this._eventEmitter.on("close", (function() {
                                    a.default.report({
                                        nm: "login_bosh_error",
                                        val: {
                                            net: navigator.onLine ? 1 : 0
                                        }
                                    }), t(e.sessionId)
                                }))
                            }, t.prototype.onError = function(t) {
                                var e = this;
                                this._eventEmitter.on("error", (function(i) {
                                    t(i), e._retryHandle || (e._retryHandle = setTimeout((function() {
                                        e._eventEmitter.emit("close"), e._retryHandle = null
                                    }), e._retryTime))
                                }))
                            }, t.prototype._connectSuccess = function(t) {
                                try {
                                    var e = JSON.parse(t);
                                    this._token = e.data.token, this._pollingXHR = null, this._polling()
                                } catch (t) {
                                    this._eventEmitter.emit("error", p)
                                }
                                console.log("current polling url: ", this.url)
                            }, t.prototype._polling = function() {
                                "disconnect" != this.status && (this._closePolling(), this._pollingXHR = new f({
                                    url: this.url + "/polling",
                                    method: "POST",
                                    reqType: "polling",
                                    onRequestStateChange: this._onRequestStateChange.bind(this),
                                    onError: this._XHRError.bind(this)
                                }), this._pollingXHR.reqType = "polling", !this._startConnectFlag && r.default.get("uid") ? this._pollingXHR.send("token=" + this._token + "&open =false &ping =true &appId =" + r.default.get("appId") + "&uid =" + r.default.get("uid")) : (this._pollingXHR.send("token=" + this._token + "&open =false"), this._startConnectFlag = !1))
                            }, t.prototype._closePolling = function() {
                                this._pollingXHR && (this._pollingXHR.close(), this._pollingXHR = null)
                            }, t.prototype._XHRError = function(t) {
                                this._eventEmitter.emit("error", t)
                            }, t.prototype._onRequestStateChange = function(t) {
                                var e = t.xhr;
                                if (4 === e.readyState) try {
                                    if (clearTimeout(t._timer), 200 <= e.status && e.status <= 206) switch (t.status = "success", t.reqType) {
                                        case "open":
                                            this._connectSuccess(e.responseText);
                                            break;
                                        case "polling":
                                            this._onMessage(e.responseText)
                                    } else switch (t.status = "error", t.reqType) {
                                        case "open":
                                        case "polling":
                                            this._eventEmitter.emit("error", p)
                                    }
                                } catch (t) {
                                    console.error(t)
                                }
                            }, t.prototype._onMessage = function(t) {
                                var e, i = this;
                                try {
                                    e = JSON.parse(t)
                                } catch (t) {
                                    console.error(t), this._eventEmitter.emit("error", p)
                                }
                                if (e && 200 === e.code) {
                                    if (e.data && e.data.length)
                                        for (var n = 0, a = e.data.length; n < a; n++) {
                                            var o = e.data[n];
                                            if (0 == o.content.code) this._eventEmitter.emit("error", p);
                                            else if ("open" == o.content.type) this._eventEmitter.emit("open");
                                            else if ("transfer" == o.content.type) {
                                                var r = o.content.data.base64Str,
                                                    u = s.default.b64toBA(r);
                                                this._eventEmitter.emit("message", u.buffer)
                                            }
                                        }
                                    this._pollingXHR = null, setTimeout((function() {
                                        i._polling()
                                    }), 0)
                                } else e && void 0 !== e.code && 411 === e.code ? this._eventEmitter.emit("error", c) : e && void 0 !== e.code && 500 === e.code ? this._eventEmitter.emit("error", p) : e || this._eventEmitter.emit("error", p)
                            }, t
                        }();
                    e.Z = l;
                    var f = function() {
                        function t(t) {
                            var e = t.url,
                                i = t.method,
                                s = void 0 === i ? "POST" : i,
                                n = t.contentType,
                                a = void 0 === n ? "application/x-www-form-urlencoded" : n,
                                o = t.reqType,
                                r = void 0 === o ? "send" : o,
                                u = t.timeout,
                                h = void 0 === u ? 4e4 : u,
                                d = t.onRequestStateChange,
                                c = t.onError;
                            this._method = "GET", this._contentType = "application/x-www-form-urlencoded", this._timeout = 4e4, this._reqType = "", this._timer = null, this.url = "", this.xhr = null, this.status = "", this.url = e, this._method = s, this._contentType = a, this._reqType = r, this._timeout = h, this._onError = c, this.xhr = this.create(d), this.status = ""
                        }
                        return t.prototype.create = function(t) {
                            var e = this,
                                i = new XMLHttpRequest;
                            return i.open(this._method, this.url, !0), this.status = "open", i.overrideMimeType && i.overrideMimeType("text/plain"), i.onreadystatechange = function(i) {
                                t(e)
                            }, i.onerror = function(t) {
                                t.stopImmediatePropagation()
                            }, i
                        }, t.prototype.send = function(t) {
                            var e = this;
                            this.xhr.setRequestHeader("Content-type", this._contentType), this.xhr.send(t), this.status = "pending", this._timer && (clearTimeout(this._timer), this._timer = null), this._timer = setTimeout((function() {
                                e._onError(h)
                            }), this._timeout)
                        }, t.prototype.close = function(t) {
                            n.default || this.xhr.abort(), this.status = "abort", this._onError(d), clearTimeout(this._timer)
                        }, t
                    }()
                },
                6271: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(4423),
                        n = i(5344),
                        a = i(8882),
                        o = i(5509),
                        r = i(5678),
                        u = i(306),
                        h = o.default.Response.extend({
                            uri: [s.default.Login.PLOGINBYPASSPORTRES_URI, s.default.Login.PLOGINBYUIDRES_URI, s.default.Login.PVISITORLOGINRES_URI],
                            __master: !0,
                            unmarshall: function() {
                                this.rescode = this.popInt(), this.uid = this.popLong().value(), this.cookie = this.popString(), this.deviceData = this.popString(), this.altoken = this.popString(), this.channel_map = this.popMapOfShortAndInt()
                            }
                        }),
                        d = o.default.Request.extend({
                            __master: !0,
                            uri: s.default.Login.PLOGINBYPASSPORT_URI,
                            init: function() {
                                this.passport = "", this.password = "", this.deviceid = r.default.get("deviceId"), this.version = u.version, this.os = 3, this.sdkVersion = 1, this.deviceType = a.default.deviceType, this.pushToken = "", this.deviceData = "", this.supportMultiDevices = !1, this.capacity = 200
                            },
                            marshall: function() {
                                this.push(this.passport, n.default.STRING), this.push(this.password, n.default.STRING), this.push(this.deviceid, n.default.STRING), this.push(this.version, n.default.STRING), this.push(this.os, n.default.SHORT), this.push(this.sdkVersion, n.default.INT), this.push(this.deviceType, n.default.SHORT), this.push(this.pushToken, n.default.STRING), this.push(this.deviceData, n.default.STRING), this.push(this.supportMultiDevices, n.default.BOOLEAN)
                            }
                        }),
                        c = o.default.Request.extend({
                            __master: !0,
                            uri: s.default.Login.PLOGINBYUID_URI,
                            init: function() {
                                this.uid = "", this.os = 3, this.sdkVersion = 1, this.cookie = "", this.deviceid = r.default.get("deviceId"), this.version = u.version, this.deviceType = a.default.deviceType, this.pushToken = "", this.deviceData = "", this.supportMultiDevices = !1, this.capacity = 200
                            },
                            marshall: function() {
                                this.push(this.uid, n.default.LONG), this.push(this.os, n.default.SHORT), this.push(this.sdkVersion, n.default.INT), this.push(this.cookie, n.default.STRING), this.push(this.deviceid, n.default.STRING), this.push(this.version, n.default.STRING), this.push(this.deviceType, n.default.SHORT), this.push(this.pushToken, n.default.STRING), this.push(this.deviceData, n.default.STRING), this.push(this.supportMultiDevices, n.default.BOOLEAN)
                            }
                        }),
                        p = o.default.Response.extend({
                            uri: s.default.Login.PKICKOFF_URI,
                            __master: !0,
                            unmarshall: function() {
                                this.uid = this.popLong().value(), this.appid = this.popShort(), this.reason = this.popShort()
                            }
                        }),
                        l = o.default.Response.extend({
                            uri: s.default.Login.PKICKOFFWITHSAMEDEVICEID_URI,
                            __master: !0,
                            init: function() {
                                this.uid = 0, this.appId = 0, this.deviceType = 0
                            },
                            unmarshall: function() {
                                this.uid = this.popLong().value(), this.appId = this.popShort(), this.deviceType = this.popShort()
                            }
                        }),
                        f = o.default.Request.extend({
                            __master: !0,
                            init: function() {
                                this.uri = s.default.Login.PLOGOUT_URI, this.uid = 0
                            },
                            marshall: function() {
                                this.push(this.uid, n.default.LONG)
                            }
                        }),
                        _ = o.default.Response.extend({
                            uri: s.default.Login.PQRYSRVTIMESTAMPRES_URI,
                            unmarshall: function() {
                                this.client_tsms = this.popLong().value(), this.server_tsms = this.popLong().value()
                            }
                        }),
                        g = o.default.Request.extend({
                            __master: !0,
                            init: function() {
                                this.uri = s.default.Login.PQRYSRVTIMESTAMP_URI, this.client_tsms = (new Date).getTime(), this.capacity = 100
                            },
                            marshall: function() {
                                this.push(this.client_tsms, n.default.LONG)
                            }
                        }),
                        m = o.default.Response.extend({
                            __master: !0,
                            uri: s.default.Login.PDETECTCLIENT_URI,
                            unmarshall: function() {
                                this.server_tsms = this.popLong().value()
                            }
                        }),
                        S = o.default.Response.extend({
                            __master: !0,
                            uri: s.default.Login.PLOGINPING_URI,
                            init: function() {
                                this.uid = ""
                            },
                            marshall: function() {
                                this.push(this.uid, n.default.LONG)
                            },
                            unmarshall: function() {
                                this.uid = this.popLong()
                            }
                        }),
                        I = o.default.Request.extend({
                            __master: !0,
                            uri: s.default.Login.PDETECTCLIENTACK_URI,
                            init: function() {
                                this.uid = "", this.server_tsms = ""
                            },
                            marshall: function() {
                                this.push(this.uid, n.default.LONG), this.push(this.server_tsms, n.default.LONG)
                            }
                        }),
                        T = o.default.Request.extend({
                            __master: !0,
                            uri: s.default.Login.PVISITORLOGIN_URI,
                            init: function() {
                                this.uid = "", this.os = 3, this.sdkversion = 0, this.xsid = "", this.deviceid = r.default.get("deviceId"), this.version = u.version, this.device_type = a.default.deviceType
                            },
                            marshall: function() {
                                this.push(this.uid, n.default.LONG), this.push(this.os, n.default.SHORT), this.push(this.sdkversion, n.default.INT), this.push(this.xsid, n.default.STRING), this.push(this.deviceid, n.default.STRING), this.push(this.version, n.default.STRING), this.push(this.device_type, n.default.SHORT)
                            }
                        });
                    e.default = {
                        LoginRes: h,
                        PassportReq: d,
                        UidReq: c,
                        KickOff: p,
                        KickOffWithSameDeviceId: l,
                        LogoutReq: f,
                        SvrTimeRes: _,
                        AdjustByServerStampReq: g,
                        Detect: m,
                        Ping: S,
                        DetectAck: I,
                        VisitorReq: T
                    }
                },
                5476: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(6271),
                        n = i(4423),
                        a = i(5678),
                        o = i(8473),
                        r = i(5605),
                        u = function() {
                            function t(t) {
                                var e = this;
                                this._connection = null, this._adjustHandle = null, this._connection = t, a.default.set("deltaT", 0), o.default.on("AuthSuccess", (function() {
                                    clearInterval(e._adjustHandle), e._sendAdjustByServerStamp(), e._adjustHandle = setInterval((function() {
                                        e._sendAdjustByServerStamp()
                                    }), 6e4)
                                })), o.default.on(r.LOGIN_STATUS.DISCONNECTED, (function() {
                                    clearInterval(e._adjustHandle), e._adjustHandle = null
                                })), o.default.on(n.default.Login.PQRYSRVTIMESTAMPRES_URI, (function(t) {
                                    var e = t.client_tsms,
                                        i = t.server_tsms,
                                        s = (new Date).getTime(),
                                        n = parseInt(e, 10),
                                        o = s - n;
                                    if (!(Math.abs(o) > 5e3)) {
                                        var r = parseInt(i, 10) - (s + n) / 2;
                                        a.default.set("deltaT", Math.floor(r))
                                    }
                                }))
                            }
                            return t.prototype._sendAdjustByServerStamp = function() {
                                this._connection.send(new s.default.AdjustByServerStampReq)
                            }, t
                        }();
                    e.default = u
                },
                4857: (t, e, i) => {
                    "use strict";
                    var s = i(3257),
                        n = i(5605),
                        a = i(5678),
                        o = i(4053),
                        r = function() {
                            function t() {
                                this._socket = null, this._version = 0, this._startTime = 0, this.url = "", this.sessionId = ""
                            }
                            return t.prototype.connect = function(t) {
                                this.url = t, this.sessionId = o.default.next(), this._closeSocket(), this._socket = new WebSocket(this.url), this._socket.binaryType = "arraybuffer", this._socket.version = this._version++, this._startTime = Date.now(), s.default.report({
                                    nm: "login_websocket_start",
                                    val: {
                                        host: this.url,
                                        net: navigator.onLine ? 1 : 0,
                                        websocketId: this.sessionId
                                    }
                                })
                            }, t.prototype.disconnect = function() {
                                this._socket && this._socket.readyState !== WebSocket.CLOSED && this._closeSocket()
                            }, t.prototype.send = function(t) {
                                if (this._socket && this._socket.readyState === WebSocket.OPEN) try {
                                    this._socket.send(t)
                                } catch (t) {
                                    console.error(t)
                                } else this.disconnect()
                            }, t.prototype.getSocketId = function() {
                                return this.sessionId
                            }, t.prototype._closeSocket = function() {
                                if (this._socket) try {
                                    this._socket.close(), this._socket.onMessage = function(t) {}, s.default.report({
                                        nm: "login_websocket_close",
                                        val: {
                                            websocketId: this.sessionId,
                                            net: navigator.onLine ? 1 : 0,
                                            host: this.url
                                        }
                                    })
                                } catch (t) {
                                    console.error(t)
                                }
                                this._socket = null
                            }, t.prototype.onOpen = function(t) {
                                var e = this;
                                this._socket.onopen = function(i) {
                                    s.default.report({
                                        nm: "login_websocket_success",
                                        val: {
                                            websocketId: e.sessionId,
                                            time: Date.now() - e._startTime,
                                            host: e.url
                                        }
                                    }), a.default.set("websocketId", e.sessionId), t(e._socket);
                                    var o = a.default.get("env");
                                    o === n.ENV.TEST || o === n.ENV.ST ? console.warn("当前 WebSocket 地址: " + e.url + "   当前使用环境:" + a.default.get("env")) : console.log("当前 WebSocket 地址: " + e.url + "   当前使用环境:" + a.default.get("env"))
                                }
                            }, t.prototype.onMessage = function(t) {
                                this._socket.onmessage = function(e) {
                                    t(e.data)
                                }
                            }, t.prototype.onClose = function(t) {
                                var e = this;
                                this._socket.onclose = function(i) {
                                    console.warn("websocket close"), s.default.report({
                                        nm: "login_websocket_error",
                                        val: {
                                            code: i.code,
                                            websocketId: e.sessionId,
                                            net: navigator.onLine ? 1 : 0,
                                            result: i.wasClean ? 1 : 0,
                                            host: e.url
                                        }
                                    }), t(e.sessionId)
                                }
                            }, t.prototype.onError = function(t) {
                                var e = this;
                                this._socket.onerror = function() {
                                    t(e._socket)
                                }
                            }, t
                        }();
                    e.Z = r
                },
                326: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(8473),
                        n = i(1299),
                        a = i(8927),
                        o = i(97),
                        r = i(3257),
                        u = i(5678),
                        h = i(5605),
                        d = i(2939),
                        c = [a.default.PubAckMsgs, a.default.PubAckSyncMsgs],
                        p = function() {
                            function t(t) {
                                var e = this;
                                this._loginSDK = null, this._timeMap = {}, this._sendMessageTimeoutMap = {}, this._readTimeMap = {}, this.constant = n.default, this._loginSDK = t, s.default.on(n.default.PUB.URI_PUB_SEND_MSG_REQ, this._onMessage.bind(this)), s.default.on(n.default.PUB.URI_PUB_SEND_MSG_RES, this._onACK.bind(this)), s.default.on(n.default.PUB.URI_PUB_CANCEL_MSG, this._onMessage.bind(this)), s.default.on(n.default.PUB.URI_PUB_CANCEL_MSG_RES, this._onACK.bind(this)), s.default.on(n.default.PUB.URI_PUB_SEND_MSG_KF_REQ, this._onMessage.bind(this)), s.default.on(n.default.PUB.URI_PUB_SEND_MSG_KF_RES, this._onACK.bind(this)), s.default.on(n.default.PUB.URI_PUB_SEND_TT_REQ, this._onMessage.bind(this)), s.default.on(n.default.PUB.URI_PUB_SEND_TT_RES, this._onACK.bind(this)), s.default.on(n.default.PUB.URI_PUB_BC_MSG_REQ, this._onMessage.bind(this)), s.default.on(n.default.PUB.URI_PUB_SYNC_READ, this._onRead.bind(this)), s.default.on(n.default.PUB.URI_PUB_SYNC_READ_RES, this._onReadACK.bind(this)), s.default.on(n.default.PUB.URI_PUB_MARK_READ, this._onNotice.bind(this)), s.default.on(n.default.PUB.URI_PUB_MARK_READS, this._onNotice.bind(this)), s.default.on(n.default.PUB.URI_PUB_OPPOSITE_READ, this._onOppositeRead.bind(this)), s.default.on(n.default.PUB.URI_PUB_OPPOSITE_READ_RES, this._onOppositeReadACK.bind(this)), s.default.on("__PubAck", (function(t) {
                                    for (var i = [
                                            [],
                                            []
                                        ], s = 0; s <
                                        t.length; s++) i[1 & t[s].fromUid == e._loginSDK.getUID()].push(t[s].msgId);
                                    for (var n = 0, a = 0; a < 2; a++)
                                        for (;
                                            (n = i[a].splice(0, 1500)).length;) e.send(new c[a]({
                                            uid: e._loginSDK.getUID(),
                                            msgIds: n
                                        }))
                                })), s.default.on("pubAcks", function(t) {
                                    t.length > 0 && this.send(new a.default.PubAckMsgs({
                                        uid: this._loginSDK.getUID(),
                                        msgIds: t
                                    }))
                                }.bind(this))
                            }
                            return t.prototype.send = function(t) {
                                try {
                                    this._loginSDK._sendTransUp(n.default.SVID_PUB, t), t.uri !== n.default.PUB.URI_PUB_SEND_MSG_REQ && t.uri !== n.default.PUB.URI_PUB_CANCEL_MSG && t.uri !== n.default.PUB.URI_PUB_SEND_MSG_KF_REQ && t.uri !== n.default.PUB.URI_PUB_SEND_TT_REQ && t.uri !== n.default.PUB.URI_PUB_BC_MSG_REQ || (r.default.report({
                                        nm: "message_send_start",
                                        val: {
                                            id: t.msgUuid,
                                            chat: t.toUid ? t.toUid : t.pubUid ? t.pubUid + "_" + t.receiverUid : void 0,
                                            messageType: t.type ? t.type : 0,
                                            sessionType: t.uri === n.default.PUB.URI_PUB_SEND_MSG_REQ || t.uri === n.default.PUB.URI_PUB_CANCEL_MSG ? "pubchat" : "cschat"
                                        }
                                    }), this._timeMap[t.msgUuid] = Date.now()), t.uri === n.default.PUB.URI_PUB_SYNC_READ && (r.default.report({
                                        nm: "read_pub_send",
                                        val: {
                                            uuid: t.msgUuid,
                                            web_read: JSON.stringify(t.syncReadItems.map((function(t) {
                                                return {
                                                    id: t.chatId,
                                                    peerUid: t.peerUid,
                                                    cts: t.stamp,
                                                    sts: t.sts
                                                }
                                            })))
                                        }
                                    }), t.msgUuid && !this._readTimeMap[t.msgUuid] && (this._readTimeMap[t.msgUuid] = Date.now()), this._sendMessageTimeoutMap[t.msgUuid] = setTimeout((function() {
                                        d.default.send({
                                            name: "message_send_finished",
                                            value: 0,
                                            tag: {
                                                status: 0
                                            }
                                        })
                                    }), 15e3))
                                } catch (t) {
                                    console.error(t)
                                }
                            }, t.prototype._onMessage = function(t) {
                                try {
                                    this._ack(t, this._loginSDK.getUID()), r.default.report({
                                        nm: "message_receive_success",
                                        val: {
                                            id: t.msgUuid,
                                            mid: "string" == typeof t.msgId ? t.msgId : t.msgId.toString(),
                                            chat: t.toUid ? u.default.get("uid") === t.toUid ? t.fromUid : t.toUid : t.pubUid ? u.default.get("uid") === t.receiverUid ? t.pubUid + "_" + t.fromUid : t.pubUid + "_" + t.receiverUid : void 0,
                                            messageType: t.type ? t.type : 0
                                        }
                                    }), d.default.send({
                                        name: "message_receive_success",
                                        value: 0
                                    })
                                } catch (t) {
                                    console.error(t)
                                }
                                s.default.emit(h.MESSAGE_EVENT.MESSAGE, t), s.default.emit(h.MESSAGE_EVENT.PUB_MESSAGE, t)
                            }, t.prototype._ack = function(t, e) {
                                try {
                                    this.send(new c[1 & t.fromUid == e]({
                                        uid: e,
                                        msgIds: [t.msgId]
                                    }))
                                } catch (t) {
                                    console.error(t)
                                }
                            }, t.prototype._onRead = function(t) {
                                s.default.emit(h.MESSAGE_EVENT.PUB_READ, t), s.default.emit("read", t), r.default.report({
                                    nm: "read_pub_receive",
                                    val: {
                                        web_read: JSON.stringify(t.syncReadItems.map((function(t) {
                                            return {
                                                id: t.chatId,
                                                peerUid: t.peerUid,
                                                cts: t.stamp,
                                                sts: t.sts
                                            }
                                        })))
                                    }
                                })
                            }, t.prototype._onReadACK = function(t) {
                                var e = t.msgUuid;
                                s.default.emit(h.MESSAGE_EVENT.PUB_READ_ACK, {
                                    uuid: e
                                }), e && this._readTimeMap[e] && (r.default.report({
                                    nm: "read_pub_success",
                                    val: {
                                        uuid: e,
                                        time: Date.now() - this._readTimeMap[e]
                                    }
                                }), delete this._readTimeMap[e])
                            }, t.prototype._onACK = function(t) {
                                s.default.emit("ack", t), 0 === t.rescode && this._timeMap[t.msgUuid] ? (r.default.report({
                                    nm: "message_send_success",
                                    val: {
                                        id: t.msgUuid,
                                        mid: t.msgId,
                                        time: Date.now() - this._timeMap[t.msgUuid]
                                    }
                                }), d.default.send({
                                    name: "message_send_finished",
                                    value: Date.now() - this._timeMap[t.msgUuid],
                                    tag: {
                                        status: 1
                                    }
                                }), clearTimeout(this._sendMessageTimeoutMap[t.msgUuid]), delete this._sendMessageTimeoutMap[t.msgUuid]) : r.default.report({
                                    nm: "message_send_error",
                                    val: {
                                        code: t.rescode,
                                        id: t.msgUuid
                                    }
                                }), this._timeMap[t.msgUuid] = void 0
                            }, t.prototype._onNotice = function(t) {
                                s.default.emit("notice", t)
                            }, t.prototype._onOppositeRead = function(t) {
                                s.default.emit(h.MESSAGE_EVENT.PUB_OPPOSITE_READ, t)
                            }, t.prototype._onOppositeReadACK = function(t) {
                                s.default.emit(h.MESSAGE_EVENT.PUB_OPPOSITE_READ_ACK, t)
                            }, t.constant = n.default, t.Session = a.default, t.Message = o.default, t
                        }();
                    e.default = p
                },
                1299: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5605).SVID.SVID_PUB,
                        n = {
                            SVID_PUB: s,
                            PUB: {
                                URI_PUB_SEND_MSG_REQ: s << 16 | 1,
                                URI_PUB_SEND_MSG_RES: s << 16 | 2,
                                URI_PUB_SEND_MSG_KF_REQ: s << 16 | 17,
                                URI_PUB_SEND_MSG_KF_RES: s << 16 | 18,
                                URI_PUB_BC_MSG_REQ: s << 16 | 13,
                                URI_PUB_BC_MSG_RES: s << 16 | 14,
                                URI_PUB_BC_NOTIFY: s << 16 | 15,
                                URI_PUB_SEND_TT_REQ: s << 16 | 9,
                                URI_PUB_SEND_TT_RES: s << 16 | 10,
                                URI_PUB_MENU_LIST_REQ: s << 16 | 3,
                                URI_PUB_MENU_LIST_RES: s << 16 | 4,
                                URI_PUB_MENU_ACTION_REQ: s << 16 | 5,
                                URI_PUB_MENU_ACTION_RES: s << 16 | 6,
                                URI_PUB_ACK_MSGS: s << 16 | 7,
                                URI_PUB_SEND_MSG_S2US_REQ: s << 16 | 11,
                                URI_PUB_SEND_MSG_S2US_RES: s << 16 | 12,
                                URI_PUB_TEXT_INFO: s << 16 | 21,
                                URI_PUB_AUDIO_INFO: s << 16 | 22,
                                URI_PUB_VIDEO_INFO: s << 16 | 23,
                                URI_PUB_IMAGE_INFO: s << 16 | 24,
                                URI_PUB_CALENDAR_INFO: s << 16 | 25,
                                URI_PUB_LINK_INFO: s << 16 | 26,
                                URI_PUB_MULTI_LINK_INFO: s << 16 | 27,
                                URI_PUB_FILE_INFO: s << 16 | 28,
                                URI_PUB_GPS_INFO: s << 16 | 29,
                                URI_PUB_VCARD_INFO: s << 16 | 30,
                                URI_PUB_EMOTION_INFO: s << 16 | 31,
                                URI_PUB_EVENT_INFO: s << 16 | 32,
                                URI_PUB_CUSTOM_INFO: s << 16 | 33,
                                URI_PUB_NOTICE_INFO: s << 16 | 34,
                                URL_PUB_GENERAL_INFO: s << 16 | 35,
                                URL_PUB_GVCARD_INFO: s << 16 | 36,
                                URI_PUB_ACK_SYNC_MSGS: s << 16 | 41,
                                URI_PUB_SYNC_READ_ITEM: s << 16 | 42,
                                URI_PUB_SYNC_READ: s << 16 | 43,
                                URI_PUB_SYNC_READ_MSGS: s << 16 | 45,
                                URI_PUB_MARK_READ: s << 16 | 47,
                                URI_PUB_MARK_READS: s << 16 | 48,
                                URI_PUB_CANCEL_MSG: s << 16 | 49,
                                URI_PUB_CANCEL_MSG_RES: s << 16 | 50,
                                URI_PUB_NEWEMOTION_INFO: s << 16 | 51,
                                URI_PUB_QUOTE_INFO: s << 16 | 54,
                                URI_PUB_OPPOSITE_READ: s << 16 | 56,
                                URI_PUB_OPPOSITE_READ_TS_ITEM: s << 16 | 57,
                                URI_PUB_OPPOSITE_READ_RES: s << 16 | 58,
                                URI_PUB_SYNC_READ_RES: s << 16 | 60,
                                URI_PUB_DYNAMIC_INFO: s << 16 | 61
                            }
                        };
                    e.default = n
                },
                97: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(1299),
                        n = i(5344),
                        a = i(9118),
                        o = i(5605),
                        r = i(5509),
                        u = {};
                    u.PubTextMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_TEXT,
                        uri: s.default.PUB.URI_PUB_TEXT_INFO,
                        init: function() {
                            this.text = "", this.font_name = "serif", this.font_size = 12, this.bold = !1, this.cipher_type = o.CIPHER_TYPE.NO_CIPHER
                        },
                        unmarshall: function() {
                            this.text = this.popString(), this.font_name = this.popString(), this.font_size = this.popInt(), this.bold = this.popBool(), this.cipher_type = this.popShort()
                        },
                        marshall: function() {
                            this.push(this.text), this.push(this.font_name), this.push(this.font_size), this.push(this.bold, n.default.BOOLEAN), this.push(this.cipher_type, n.default.SHORT)
                        }
                    }), u.PubImageMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_IMAGE,
                        uri: s.default.PUB.URI_PUB_IMAGE_INFO,
                        init: function() {
                            this.thumbnail = "", this.normal = "", this.original = "", this.type = "", this.token = "", this.originSize = 0, this.uploadImageType = 2, this.custom = ""
                        },
                        unmarshall: function() {
                            this.thumbnail = this.popString(), this.normal = this.popString(), this.original = this.popString(), this.type = this.popString(), this.token = this.popString(), this.originSize = this.popInt(), this.uploadImageType = this.popByte(), this.custom = this.popString()
                        },
                        marshall: function() {
                            this.push(this.thumbnail, n.default.STRING), this.push(this.normal, n.default.STRING), this.push(this.original, n.default.STRING), this.push(this.type, n.default.STRING), this.push(this.token, n.default.STRING), this.push(this.originSize, n.default.INT), this.push(this.uploadImageType, n.default.BYTE), this.push(this.custom, n.default.STRING)
                        }
                    }), u.PubLinkMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_LINK,
                        uri: s.default.PUB.URI_PUB_LINK_INFO,
                        init: function() {
                            this.title = "", this.image = "", this.content = "", this.link = ""
                        },
                        unmarshall: function() {
                            this.title = this.popString(), this.image = this.popString(), this.content = this.popString(), this.link = this.popString()
                        },
                        marshall: function() {
                            this.push(this.title), this.push(this.image), this.push(this.content), this.push(this.link)
                        }
                    }), u.PubMultiLinkMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_MULTI_LINK,
                        uri: s.default.PUB.URI_PUB_MULTI_LINK_INFO,
                        init: function() {
                            this.num = 0, this.content = ""
                        },
                        unmarshall: function() {
                            this.num = this.popShort(), this.content = this.popString()
                        },
                        marshall: function() {
                            this.push(this.num, n.default.SHORT), this.push(this.content)
                        }
                    }), u.PubEmotionMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_EMOTION,
                        uri: s.default.PUB.URI_PUB_EMOTION_INFO,
                        init: function() {
                            this.category = "", this.type = "", this.name = ""
                        },
                        unmarshall: function() {
                            this.category = this.popString(), this.type = this.popString(), this.name = this.popString()
                        },
                        marshall: function() {
                            this.push(this.category), this.push(this.type), this.push(this.name)
                        }
                    }), u.PubEventMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_EVENT,
                        uri: s.default.PUB.URI_PUB_EVENT_INFO,
                        init: function() {
                            this.type = "", this.text = ""
                        },
                        unmarshall: function() {
                            this.type = this.popString(), this.text = this.popString()
                        },
                        marshall: function() {
                            this.push(this.type), this.push(this.text)
                        }
                    }), u.PubCalendarMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_CALENDAR,
                        uri: s.default.PUB.URI_PUB_CALENDAR_INFO,
                        init: function() {
                            this.dtstart = 0, this.dtend = 0, this.summary = "", this.location = "", this.trigger = "", this.participant = "", this.remark = "", this.calendarID = 0
                        },
                        unmarshall: function() {
                            this.dtstart = this.popLong().value(), this.dtend = this.popLong().value(), this.summary = this.popString(), this.location = this.popString(), this.trigger = this.popString(), this.participant = this.popString(), this.remark = this.popString(), this.calendarID = this.popLong().value()
                        },
                        marshall: function() {
                            this.push(this.dtstart, n.default.LONG), this.push(this.dtend, n.default.LONG), this.push(this.summary), this.push(this.location), this.push(this.trigger), this.push(this.participant), this.push(this.remark), this.push(this.calendarID, n.default.LONG)
                        }
                    }), u.PubAudioMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_VOICE,
                        uri: s.default.PUB.URI_PUB_AUDIO_INFO,
                        init: function() {
                            this.url = "", this.codec = 0, this.duration = 0, this.stamp = 0, this.token = "", this.custom = ""
                        },
                        unmarshall: function() {
                            this.url = this.popString(), this.codec = this.popShort(), this.duration = this.popShort(), this.stamp = this.popLong().value(), this.token = this.popString(), this.custom = this.popString()
                        },
                        marshall: function() {
                            this.push(this.url), this.push(this.codec, n.default.SHORT), this.push(this.duration, n.default.SHORT), this.push(this.stamp, n.default.LONG), this.push(this.token), this.push(this.custom, n.default.STRING)
                        }
                    }), u.PubVideoMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_VIDEO,
                        uri: s.default.PUB.URI_PUB_VIDEO_INFO,
                        init: function() {
                            this.videoUrl = "", this.screenshotUrl = 0, this.duration = 0, this.size = 0, this.width = 0, this.height = 0, this.timestamp = 0, this.token = "", this.custom = ""
                        },
                        unmarshall: function() {
                            this.videoUrl = this.popString(), this.screenshotUrl = this.popString(), this.duration = this.popInt(), this.size = this.popInt(), this.width = this.popShort(), this.height = this.popShort(), this.timestamp = this.popLong().value(), this.token = this.popString(), this.custom = this.popString()
                        },
                        marshall: function() {
                            this.push(this.videoUrl), this.push(this.screenshotUrl), this.push(this.duration), this.push(this.size), this.push(this.width, n.default.SHORT), this.push(this.height, n.default.SHORT), this.push(this.timestamp, n.default.LONG), this.push(this.token), this.push(this.custom, n.default.STRING)
                        }
                    }), u.PubGPSMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_GPS,
                        uri: s.default.PUB.URI_PUB_GPS_INFO,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_GPS_INFO, this.latitude = 0, this.longitude = 0, this.name = ""
                        },
                        unmarshall: function() {
                            this.latitude = this.popInt() / 1e6, this.longitude = this.popInt() / 1e6, this.name = this.popString()
                        },
                        marshall: function() {
                            this.push(1e6 * this.latitude), this.push(1e6 * this.longitude), this.push(this.name)
                        }
                    }), u.PubVCardMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_VCARD,
                        uri: s.default.PUB.URI_PUB_VCARD_INFO,
                        init: function() {
                            this.uid = 0, this.name = "", this.account = "", this.type = 0, this.subtype = 0
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.name = this.popString(), this.account = this.popString(), this.type = this.popShort(), this.subtype = this.popShort()
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.name), this.push(this.account), this.push(this.type, n.default.SHORT), this.push(this.subtype, n.default.SHORT)
                        }
                    }), u.PubFileMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_FILE,
                        uri: s.default.PUB.URI_PUB_FILE_INFO,
                        init: function() {
                            this.id = "", this.url = "", this.name = "", this.format = "", this.size = 0, this.token = "", this.lsize = 0, this.custom = ""
                        },
                        unmarshall: function() {
                            this.id = this.popString(), this.url = this.popString(), this.name = this.popString(), this.format = this.popString(), this.size = this.popInt(), this.token = this.popString(), this.lsize = this.popLong().value(), this.custom = this.popString()
                        },
                        marshall: function() {
                            this.push(this.id), this.push(this.url), this.push(this.name), this.push(this.format), this.push(this.size), this.push(this.token), this.push(this.lsize, n.default.LONG), this.push(this.custom)
                        }
                    }), u.PubCustomMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_CUSTOM,
                        uri: s.default.PUB.URI_PUB_CUSTOM_INFO,
                        init: function() {
                            this.templateName = "", this.contentTitle = "", this.content = "", this.linkName = "", this.link = 0
                        },
                        unmarshall: function() {
                            this.templateName = this.popString(), this.contentTitle = this.popString(), this.content = this.popString(), this.linkName = this.popString(), this.link = this.popString()
                        },
                        marshall: function() {
                            this.push(this.templateName), this.push(this.contentTitle), this.push(this.content), this.push(this.linkName), this.push(this.link)
                        }
                    }), u.PubNoticeMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_NOTICE,
                        uri: s.default.PUB.URI_PUB_NOTICE_INFO,
                        init: function() {
                            this.title = "", this.image = "", this.content = "", this.link = ""
                        },
                        marshall: function() {
                            this.push(this.title), this.push(this.image), this.push(this.content), this.push(this.link)
                        },
                        unmarshall: function() {
                            this.title = this.popString(), this.image = this.popString(), this.content = this.popString(), this.link = this.popString()
                        }
                    }), u.PubGVcardMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_GVCARD,
                        uri: s.default.PUB.URL_PUB_GVCARD_INFO,
                        init: function() {
                            this.guid = 0, this.name = "", this.account = "", this.type = 0, this.subtype = 0
                        },
                        marshall: function() {
                            this.push(this.guid, n.default.LONG), this.push(this.name, n.default.STRING), this.push(this.account, n.default.STRING), this.push(this.type, n.default.SHORT), this.push(this.subtype, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.guid = this.popLong().value(), this.name = this.popString(), this.account = this.popString(), this.type = this.popShort(), this.subtype = this.popShort()
                        }
                    }), u.PubGeneralMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_GENERAL,
                        uri: s.default.PUB.URL_PUB_GENERAL_INFO,
                        init: function() {
                            this.data = [], this.type = 0
                        },
                        marshall: function() {
                            this.push(a.default.strToBytes(this.data), n.default.BYTES), this.push(this.type, n.default.INT)
                        },
                        unmarshall: function() {
                            var t = this.popBytes();
                            this.data = new a.default(t).readUTF8String(t.byteLength), this.type = this.popInt()
                        }
                    }), u.PubNewEmotionMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_NEWEMOTION,
                        uri: s.default.PUB.URI_PUB_NEWEMOTION_INFO,
                        init: function() {
                            this.category = "", this.packageId = "", this.packageName = "", this.id = "", this.name = "", this.type = "", this.params = ""
                        },
                        marshall: function() {
                            this.push(this.category, n.default.STRING), this.push(this.packageId, n.default.STRING), this.push(this.packageName, n.default.STRING), this.push(this.id, n.default.STRING), this.push(this.name, n.default.STRING), this.push(this.type, n.default.STRING), this.push(this.params, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.category = this.popString(), this.packageId = this.popString(), this.packageName = this.popString(), this.id = this.popString(), this.name = this.popString(), this.type = this.popString(), this.params = this.popString()
                        }
                    }), u.PubQuoteMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_QUOTE,
                        uri: s.default.PUB.URI_PUB_QUOTE_INFO,
                        init: function() {
                            this.lastReply = "{}", this.quoted = "[]", this.searchText = ""
                        },
                        marshall: function() {
                            this.push(this.lastReply, n.default.STRING), this.push(this.quoted, n.default.STRING), this.push(this.searchText, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.lastReply = this.popString(), this.quoted = this.popString(), this.searchText = this.popString();
                            var t = JSON.parse(this.lastReply);
                            t = {
                                message: r.default.Response.fromBase64(t.message),
                                defaultText: t.defaultText
                            }, this.lastReplyMessage = t;
                            var e = JSON.parse(this.quoted);
                            this.quotedMessage = e.map((function(t) {
                                return {
                                    message: r.default.Response.fromBase64(t.message),
                                    defaultText: t.defaultText
                                }
                            }))
                        }
                    }), u.PubDynamicMessage = r.default.Message.extend({
                        __category: "PUB",
                        __type: o.MESSAGE_TYPE.MSG_TYPE_DYNAMIC,
                        uri: s.default.PUB.URI_PUB_DYNAMIC_INFO,
                        init: function() {
                            this.id = "", this.title = "", this.dxData = "", this.appData = ""
                        },
                        marshall: function() {
                            this.push(this.id, n.default.LONG), this.push(this.title, n.default.STRING), this.push(this.dxData, n.default.STRING), this.push(this.appData, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.id = this.popLong().value(), this.title = this.popString(), this.dxData = this.popString(), this.appData = this.popString()
                        }
                    }), e.default = u
                },
                8927: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(1299),
                        n = i(5344),
                        a = i(9118),
                        o = i(5605),
                        r = i(8882),
                        u = i(5509),
                        h = i(6973),
                        d = i(5678),
                        c = i(4053),
                        p = {};
                    p.PubSendTTReq = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_SEND_TT_REQ,
                        init: function() {
                            this.deviceType = r.default.deviceType, this.msgUuid = c.default.next(), this.fromUid = 0, this.toUid = 0, this.message, this.cts = h.default.get(), this.msgId = "", this.toAppId = 1, this.pushType = 2, this.direction = 1, this.retries = 0, this.toDeviceTypes = 0, this.deviceId = d.default.get("deviceId"), this.messageReceivedType = o.MESSAGE_RECEIVED_TYPE.PUB_MESSAGE, this.pubTTMessage = !0
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.msgUuid), this.push(this.fromUid, n.default.LONG), this.push(this.toUid, n.default.LONG), this.push(a.default.strToBytes(this.message), n.default.BYTES), this.push(this.cts, n.default.LONG), this.push(this.msgId, n.default.LONG), this.push(this.toAppId, n.default.SHORT), this.push(this.pushType, n.default.SHORT), this.push(this.direction, n.default.BYTE), this.push(this.retries, n.default.BYTE), this.push(this.toDeviceTypes, n.default.BYTE), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.fromUid = this.popLong().value(), this.toUid = this.popLong().value(), this.message = this.popBytes(), this.message = new a.default(this.message).readUTF8String(this.message.byteLength), this.cts = this.popLong().value(), this.msgId = this.popLong(), this.toAppId = this.popShort(), this.pushType = this.popShort(), this.direction = this.popByte(), this.retries = this.popByte(), this.toDeviceTypes = this.popByte(), this.deviceId = this.popString()
                        }
                    }), p.PubSendTTRes = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_SEND_TT_RES,
                        marshall: function() {
                            this.push(this.rescode, n.default.INT), this.push(this.msgUuid, n.default.STRING), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.deviceType, n.default.BYTE)
                        },
                        unmarshall: function() {
                            this.rescode = this.popInt(), this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte()
                        }
                    }), p.PubSendMsgReq = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_SEND_MSG_REQ,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_SEND_MSG_REQ, this.deviceType = r.default.deviceType, this.msgUuid = c.default.next(), this.msgId = "", this.fromUid = 0, this.toUid = 0, this.toAppId = 0, this.type, this.message, this.fromName = "", this.cts = h.default.get(), this.pushType = 0, this.direction = 1, this.extension = "", this.retries = 0, this.toDeviceTypes = 0, this.channel = 0, this.sessionSeqId = "", this.compatible = "", this.deviceId = d.default.get("deviceId"), this.messageReceivedType = o.MESSAGE_RECEIVED_TYPE.PUB_MESSAGE
                        },
                        setUid: function(t) {
                            this.fromUid = t
                        },
                        initAfter: function() {
                            this.message && (this.type = this.type || this.message.__type)
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.msgUuid), this.push(this.msgId, n.default.LONG), this.push(this.fromUid, n.default.LONG), this.push(this.toUid, n.default.LONG), this.push(this.toAppId, n.default.SHORT), this.push(this.message.__type), this.push(this.message), this.push(this.fromName), this.push(this.cts, n.default.LONG), this.push(this.pushType), this.push(this.direction, n.default.BYTE), this.push(this.extension), this.push(this.retries, n.default.BYTE), this.push(this.toDeviceTypes, n.default.BYTE), this.push(this.channel, n.default.SHORT), this.push(this.sessionSeqId, n.default.LONG), this.push(this.compatible, n.default.STRING), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.msgId = this.popLong(), this.fromUid = this.popLong().value(), this.toUid = this.popLong().value(), this.toAppId = this.popShort(), this.type = this.popInt(), this.message = u.default.Message.fromBuffer(this.popBytes()), this.fromName = this.popString(), this.cts = this.popLong().value(), this.pushType = this.popInt(), this.direction = this.popByte(), this.extension = this.popString(), this.retries = this.popByte(), this.toDeviceTypes = this.popByte(), this.channel = this.popShort(), this.sessionSeqId = this.popLong().value(), this.compatible = this.popString(), this.deviceId = this.popString();
                            var t = d.default.get("channelMap");
                            !t || this.channel && 0 !== this.channel || (this.fromUid === d.default.get("uid") ? this.channel = t[this.toAppId] || 0 : this.channel = t[this.appid] || 0)
                        }
                    }), p.PubSendMsgKFReq = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_SEND_MSG_KF_REQ,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_SEND_MSG_KF_REQ, this.deviceType = r.default.deviceType, this.msgUuid = c.default.next(), this.msgId = "", this.senderUid = 0, this.receiverUid = 0, this.receiverAppId = 0, this.pubUid = 0, this.type, this.message, this.fromName = "", this.cts = h.default.get(), this.pushType = 0, this.direction = 1, this.extension = "", this.retries = 0, this.toDeviceTypes = 0, this.channel = 0, this.sessionSeqId = "", this.compatible = "", this.deviceId = d.default.get("deviceId"), this.messageReceivedType = o.MESSAGE_RECEIVED_TYPE.KEFU_MESSAGE
                        },
                        setUid: function(t) {
                            this.senderUid = t
                        },
                        initAfter: function() {
                            this.message && (this.type = this.type || this.message.__type)
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.msgUuid), this.push(this.msgId, n.default.LONG), this.push(this.senderUid, n.default.LONG), this.push(this.receiverUid, n.default.LONG), this.push(this.receiverAppId, n.default.SHORT), this.push(this.pubUid, n.default.LONG), this.push(this.message.__type), this.push(this.message), this.push(this.fromName), this.push(this.cts, n.default.LONG), this.push(this.pushType), this.push(this.direction, n.default.BYTE), this.push(this.extension), this.push(this.retries, n.default.BYTE), this.push(this.toDeviceTypes, n.default.BYTE), this.push(this.channel, n.default.SHORT), this.push(this.sessionSeqId, n.default.LONG), this.push(this.compatible, n.default.STRING), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.msgId = this.popLong(), this.senderUid = this.popLong().value(), this.receiverUid = this.popLong().value(), this.receiverAppId = this.popShort(), this.pubUid = this.popLong().value(), this.type = this.popInt(), this.message = u.default.Message.fromBuffer(this.popBytes()), this.fromName = this.popString(), this.cts = this.popLong().value(), this.pushType = this.popInt(), this.direction = this.popByte(), this.extension = this.popString(), this.retries = this.popByte(), this.toDeviceTypes = this.popByte(), this.channel = this.popShort(), this.sessionSeqId = this.popLong().value(), this.compatible = this.popString(), this.deviceId = this.popString();
                            var t = d.default.get("channelMap");
                            !t || this.channel && 0 !== this.channel || (this.senderUid === d.default.get("uid") ? this.channel = t[this.receiverAppId] || 0 : this.channel = t[this.appid] || 0)
                        }
                    }), p.PubSendMsgRes = u.default.Response.extend({
                        category: "PUB",
                        __master: !0,
                        uri: s.default.PUB.URI_PUB_SEND_MSG_RES,
                        init: function() {
                            this.rescode = 0, this.msgUuid = "", this.msgId = "", this.cts = "", this.deviceType = r.default.deviceType, this.sessionSeqId = ""
                        },
                        marshall: function() {
                            this.push(this.rescode, n.default.INT), this.push(this.msgUuid, n.default.STRING), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.sessionSeqId, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.rescode = this.popInt(), this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte(), this.sessionSeqId = this.popLong().value()
                        }
                    }), p.PubSendMsgKFRes = u.default.Response.extend({
                        category: "PUB",
                        __master: !0,
                        uri: s.default.PUB.URI_PUB_SEND_MSG_KF_RES,
                        init: function() {
                            this.rescode = 0, this.msgUuid = "", this.msgId = "", this.cts = "", this.deviceType = r.default.deviceType, this.sessionSeqId = ""
                        },
                        marshall: function() {
                            this.push(this.rescode, n.default.INT), this.push(this.msgUuid, n.default.STRING), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.sessionSeqId, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.rescode = this.popInt(), this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.deviceType = this.popByte(), this.sessionSeqId = this.popLong().value()
                        }
                    }), p.PubBroadcastMsgReq = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_BC_MSG_REQ,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_BC_MSG_REQ, this.deviceType = r.default.deviceType, this.msgUuid = c.default.next(), this.msgId = "", this.fromUid = 0, this.toAppId = 1, this.type, this.message, this.cts = h.default.get(), this.pushType = 0, this.delta = 0, this.extension = ""
                        },
                        setUid: function(t) {
                            this.fromUid = t
                        },
                        initAfter: function() {
                            this.message && (this.type = this.type || this.message.__type)
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.msgUuid), this.push(this.msgId, n.default.LONG), this.push(this.fromUid, n.default.LONG), this.push(this.toAppId, n.default.SHORT), this.push(this.message.__type), this.push(this.message), this.push(this.cts, n.default.LONG), this.push(this.pushType), this.push(this.delta), this.push(this.extension)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.msgId = this.popLong(), this.fromUid = this.popLong().value(), this.toAppId = this.popShort(), this.type = this.popInt(), this.message = u.default.Message.fromBuffer(this.popBytes()), this.cts = this.popLong().value(), this.pushType = this.popInt(), this.delta = this.popInt(), this.extension = this.popString()
                        }
                    }), p.PubMarkReads = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_MARK_READS,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_MARK_READS, this.uid = "", this.deviceType = r.default.deviceType, this.markReads = []
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.markReads, n.default.ARRAY_ARRAY)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.deviceType = this.popByte();
                            for (var t = this._popArrayArray(), e = 0; e < t.length; e++) this.markReads.push((new p.PubMarkRead).parserFromBuffer(t[e]))
                        }
                    }), p.PubMarkRead = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_MARK_READ,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_MARK_READ, this.uid = 0, this.deviceType = r.default.deviceType, this.chatId = 0, this.peerUid = 0, this.opt = 1, this.channel = 0
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.chatId, n.default.LONG), this.push(this.peerUid, n.default.LONG), this.push(this.opt, n.default.BYTE), this.push(this.channel, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.deviceType = this.popByte(), this.chatId = this.popLong().value(), this.peerUid = this.popLong().value(), this.opt = this.popByte(), this.channel = this.popShort()
                        }
                    }), p.PubBroadcastNotify = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_BC_NOTIFY,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_BC_NOTIFY, this.fromUid = 0, this.toAppId = 1, this.msgId = "", this.delta = 0
                        },
                        setUid: function(t) {
                            this.fromUid = t
                        },
                        marshall: function() {
                            this.push(this.fromUid, n.default.LONG), this.push(this.toAppId, n.default.SHORT), this.push(this.msgId, n.default.LONG), this.push(this.delta)
                        },
                        unmarshall: function() {
                            this.fromUid = this.popLong().value(), this.toAppId = this.popShort(), this.msgId = this.popLong(), this.delta = this.popInt()
                        }
                    }), p.PubAckMsgs = u.default.Request.extend({
                        category: "PUB",
                        __master: !0,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_ACK_MSGS, this.deviceType = r.default.deviceType, this.uid = 0, this.msgIds = [], this.msgCategory = 1, this.timeReceived = Date.now(), this.timeAck = "", this.deviceId = d.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.uid, n.default.LONG), this.push(this.msgIds), this.push(this.msgCategory, n.default.BYTE), this.push(this.timeReceived, n.default.LONG), this.push(this.timeAck, n.default.LONG), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.uid = this.popLong().value(), this.msgIds = this._popArrayLong(), this.msgCategory = this.popByte(), this.timeReceived = this.popLong().value(), this.timeAck = this.popLong().value(), this.deviceId = this.popString()
                        }
                    }), p.PubAckSyncMsgs = u.default.Request.extend({
                        category: "PUB",
                        __master: !0,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_ACK_SYNC_MSGS, this.deviceType = r.default.deviceType, this.uid = 0, this.msgIds = [], this.msgCategory = 1, this.deviceId = d.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.uid, n.default.LONG), this.push(this.msgIds), this.push(this.msgCategory, n.default.BYTE), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.uid = this.popLong().value(), this.msgIds = this._popArrayLong(), this.msgCategory = this.popByte(), this.deviceId = this.popString()
                        }
                    }), p.PubSyncRead = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_SYNC_READ,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_SYNC_READ, this.uid = 0, this.deviceType = r.default.deviceType, this.syncReadItems = [], this.msgUuid = c.default.next(), this.deviceId = d.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.deviceType, n.default.BYTE), this.push(this.syncReadItems, n.default.ARRAY_ARRAY), this.push(this.msgUuid, n.default.STRING), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.deviceType = this.popByte();
                            for (var t = this._popArrayArray(), e = 0; e < t.length; e++) this.syncReadItems.push(u.default.Response.fromBuffer(t[e]));
                            this.msgUuid = this.popString(), this.deviceId = this.popString()
                        }
                    }), p.PubSyncReadItem = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_SYNC_READ_ITEM,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_SYNC_READ_ITEM, this.chatId = 0, this.stamp = h.default.get(), this.type = 0, this.peerUid = 0, this.peerAppId = 0, this.sts = 0, this.channel = 0
                        },
                        marshall: function() {
                            this.push(this.chatId, n.default.LONG), this.push(this.stamp, n.default.LONG), this.push(this.type, n.default.BYTE), this.push(this.peerUid, n.default.LONG), this.push(this.peerAppId, n.default.SHORT), this.push(this.sts, n.default.LONG), this.push(this.channel, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.chatId = this.popLong().value(), this.stamp = this.popLong().value(), this.type = this.popByte(), this.peerUid = this.popLong().value(), this.peerAppId = this.popShort(), this.sts = this.popLong().value(), this.channel = this.popShort()
                        }
                    }), p.PubSyncReadRes = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_SYNC_READ_RES,
                        init: function() {
                            this.msgUuid = c.default.next()
                        },
                        marshall: function() {
                            this.push(this.msgUuid, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString()
                        }
                    }), p.PubSyncReadMsgs = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_SYNC_READ_MSGS,
                        init: function() {
                            this.uri = s.default.PUB.URI_PUB_SYNC_READ_MSGS, this.chatId = 0, this.msgIds = [], this.type = 0, this.peerUid = 0, this.peerAppId = 0
                        },
                        marshall: function() {
                            this.push(this.chatId, n.default.LONG), this.push(this.msgIds), this.push(this.type, n.default.BYTE), this.push(this.peerUid, n.default.LONG), this.push(this.peerAppId, n.default.SHORT)
                        },
                        unmarshall: function() {
                            this.chatId = this.popLong().value(), this.msgIds = this._popArrayLong(), this.type = this.popByte(), this.peerUid = this.popLong().value(), this.peerAppId = this.popShort()
                        }
                    }), p.PubCancelMsg = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_CANCEL_MSG,
                        init: function() {
                            this.deviceType = r.default.deviceType, this.msgUuid = "", this.fromUid = "", this.toUid = "", this.fromName = "", this.cts = h.default.get(), this.msgId = "", this.toAppid = 1, this.direction = "", this.extension = "", this.channel = 0, this.isforce = !1, this.sts = "", this.sessionSeqId = "", this.messageReceivedType = o.MESSAGE_RECEIVED_TYPE.CANCEL_PUB_MESSAGE
                        },
                        marshall: function() {
                            this.push(this.deviceType, n.default.BYTE), this.push(this.msgUuid, n.default.STRING), this.push(this.fromUid, n.default.LONG), this.push(this.toUid, n.default.LONG), this.push(this.fromName, n.default.STRING), this.push(this.cts, n.default.LONG), this.push(this.msgId, n.default.LONG), this.push(this.toAppid, n.default.SHORT), this.push(this.direction, n.default.BYTE), this.push(this.extension, n.default.STRING), this.push(this.channel, n.default.SHORT), this.push(this.isforce, n.default.SHORT), this.push(this.sts, n.default.LONG), this.push(this.sessionSeqId, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.deviceType = this.popByte(), this.msgUuid = this.popString(), this.fromUid = this.popLong().value(), this.toUid = this.popLong().value(), this.fromName = this.popString(), this.cts = this.popLong().value(), this.msgId = this.popLong().value(), this.toAppid = this.popShort(), this.direction = this.popByte(), this.extension = this.popString(), this.channel = this.popShort(), this.isforce = this.popShort(), this.sts = this.popLong().value(), this.sessionSeqId = this.popLong().value()
                        }
                    }), p.PubCancelMsgRes = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_CANCEL_MSG_RES,
                        init: function() {
                            this.msgUuid = "", this.msgId = "", this.cts = h.default.get(), this.resCode = "", this.deviceType = r.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.msgUuid, n.default.STRING), this.push(this.msgId, n.default.LONG), this.push(this.cts, n.default.LONG), this.push(this.resCode, n.default.INT), this.push(this.deviceType, n.default.BYTE)
                        },
                        unmarshall: function() {
                            this.msgUuid = this.popString(), this.msgId = this.popLong().value(), this.cts = this.popLong().value(), this.resCode = this.popInt(), this.deviceType = this.popByte()
                        }
                    }), p.PubOppositeSyncRead = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_OPPOSITE_READ,
                        init: function() {
                            this.uid = "", this.oppositeUuid = c.default.next(), this.deviceType = r.default.deviceType, this.syncReadItems = [], this.deviceId = d.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.oppositeUuid, n.default.STRING), this.push(this.deviceType, n.default.BYTE), this.push(this.syncReadItems, n.default.ARRAY_ARRAY), this.push(this.deviceId, n.default.STRING)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.oppositeUuid = this.popString(), this.deviceType = this.popByte();
                            for (var t = this._popArrayArray(), e = 0; e < t.length; e++) this.syncReadItems.push(u.default.Response.fromBuffer(t[e]));
                            this.deviceId = this.popString()
                        }
                    }), p.PubOppositeSyncReadItem = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_OPPOSITE_READ_TS_ITEM,
                        init: function() {
                            this.chatId = "", this.type = 0, this.peerUid = "", this.peerAppId = 0, this.channel = 0, this.sts = 0
                        },
                        marshall: function() {
                            this.push(this.chatId, n.default.LONG), this.push(this.type, n.default.BYTE), this.push(this.peerUid, n.default.LONG), this.push(this.peerAppId, n.default.SHORT), this.push(this.channel, n.default.SHORT), this.push(this.sts, n.default.LONG)
                        },
                        unmarshall: function() {
                            this.chatId = this.popLong().value(), this.type = this.popByte(), this.peerUid = this.popLong().value(), this.peerAppId = this.popShort(), this.channel = this.popShort(), this.sts = this.popLong().value()
                        }
                    }), p.PubOppositeSyncReadRes = u.default.Response.extend({
                        category: "PUB",
                        uri: s.default.PUB.URI_PUB_OPPOSITE_READ_RES,
                        init: function() {
                            this.uid = "", this.oppositeUuid = c.default.next(), this.deviceType = r.default.deviceType
                        },
                        marshall: function() {
                            this.push(this.uid, n.default.LONG), this.push(this.oppositeUuid, n.default.STRING), this.push(this.deviceType, n.default.BYTE)
                        },
                        unmarshall: function() {
                            this.uid = this.popLong().value(), this.oppositeUuid = this.popString(), this.deviceType = this.popByte()
                        }
                    }), e.default = p
                },
                3257: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(306),
                        n = i(8882),
                        a = i(7486),
                        o = i(5678),
                        r = i(4053),
                        u = function() {
                            function t() {
                                this._analytics = null
                            }
                            return t.prototype.init = function() {
                                var t;
                                t = i(7662), this._analytics = new t("xm_sdk_report", {
                                    ai: o.default.get("appId"),
                                    pt: this._getPT(),
                                    uid: o.default.get("uid") || "0",
                                    sv: s.version,
                                    env: o.default.get("env"),
                                    av: o.default.get("av"),
                                    did: o.default.get("deviceId"),
                                    traceid: o.default.get("traceid") || r.default.next()
                                }, {
                                    serviceid: 4,
                                    comboSize: 10,
                                    forceSendInterval: 1e4,
                                    maxSendInterval: 5e3
                                })
                            }, t.prototype.report = function() {
                                for (var t = [], e = 0; e <
                                    arguments.length; e++) t[e] = arguments[e];
                                if (this._analytics) {
                                    var i = 1 === t.length ? [t[0]] : t;
                                    if (0 !== i.length)
                                        if (3 !== i.length) {
                                            if (2 === i.length) {
                                                if (a.default.isString(i[0]) && a.default.isString(i[1])) return void this._sendLogByGroup.apply(this, i);
                                                if (a.default.isObject(i[0])) return void this._sendLog.apply(this, i);
                                                if (a.default.isString(i[0]) && a.default.isObject(i[1])) return i[1].nm ? void this._sendLogByGroup.apply(this, i) : void this._sendLog.apply(this, i)
                                            }
                                            1 !== i.length || this._sendLog.apply(this, i)
                                        } else this._sendLogByGroup.apply(this, i);
                                    else console.error("analytics param must be 1 at least")
                                }
                            }, t.prototype.setAnalyticsUid = function(t) {
                                this._analytics && this._analytics.set({
                                    uid: t
                                })
                            }, t.prototype._sendLog = function(t, e) {
                                if (this._analytics) try {
                                    this._analytics.report(t, e)
                                } catch (i) {
                                    console.error(t, e)
                                }
                            }, t.prototype._sendLogByGroup = function(t, e, i) {
                                if (this._analytics) try {
                                    this._analytics.groupReport(t, e, i)
                                } catch (t) {
                                    console.error(e, i)
                                }
                            }, t.prototype._getPT = function() {
                                switch (n.default.deviceType) {
                                    case 2:
                                        return "web";
                                    case 4:
                                        return "pc"
                                }
                            }, t
                        }();
                    e.default = new u
                },
                6583: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), e.default = function(t, e) {
                        if (t && e && "object" == typeof e)
                            for (var i in e) void 0 !== e[i] && (t[i] = e[i])
                    }
                },
                7294: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                        s = function(t) {
                            var e = "",
                                s = 0;
                            do {
                                var n = t.charCodeAt(s++),
                                    a = t.charCodeAt(s++),
                                    o = t.charCodeAt(s++),
                                    r = (3 & (n = n || 0)) <<
                                    4 | (a = a || 0) >> 4 & 15,
                                    u = (15 & a) << 2 | (o = o || 0) >> 6 & 3,
                                    h = 63 & o;
                                a ? o || (h = 64) : u = h = 64, e += i.charAt(n >> 2 & 63) + i.charAt(r) + i.charAt(u) + i.charAt(h)
                            } while (s < t.length);
                            return e
                        },
                        n = function(t) {
                            var e = "",
                                s = 0;
                            do {
                                var n = i.indexOf(t.charAt(s++)),
                                    a = i.indexOf(t.charAt(s++)),
                                    o = i.indexOf(t.charAt(s++)),
                                    r = (63 & n) << 2 | a >
                                    >
                                    4 & 3,
                                    u = (15 & a) <<
                                    4 | o >> 2 & 15,
                                    h = (3 & o) << 6 | 63 & i.indexOf(t.charAt(s++));
                                e += String.fromCharCode(r) + (u ? String.fromCharCode(u) : "") + (h ? String.fromCharCode(h) : "")
                            } while (s < t.length);
                            return e
                        };

                    function a(t) {
                        return "0123456789abcdefghijklmnopqrstuvwxyz".charAt(t)
                    }

                    function o(t) {
                        var e, s = function(t) {
                                var e, s, n = "",
                                    o = 0;
                                for (e = 0; e < t.length && "=" != t.charAt(e); ++e) {
                                    var r = i.indexOf(t.charAt(e));
                                    r < 0 || (0 == o ? (n += a(r >
                                        >
                                        2), s = 3 & r, o = 1) : 1 == o ? (n += a(s <<
                                        2 | r >> 4), s = 15 & r, o = 2) : 2 == o ? (n += a(s), n += a(r >> 2), s = 3 & r, o = 3) : (n += a(s << 2 | r >> 4), n += a(15 & r), o = 0))
                                }
                                return 1 == o && (n += a(s << 2)), n
                            }(t),
                            n = [];
                        for (e = 0; 2 * e < s.length; ++e) n[e] = parseInt(s.substring(2 * e, 2 * e + 2), 16);
                        return n
                    }
                    var r = {
                        encode: function(t) {
                            return s(function(t) {
                                var e, i, s, n;
                                for (e = "", s = t.length, i = 0; i < s; i++)(n = t.charCodeAt(i)) >= 1 && n <= 127 ? e += t.charAt(i) : n >
                                    2047 ? (e += String.fromCharCode(224 | n >> 12 & 15), e += String.fromCharCode(128 | n >> 6 & 63), e += String.fromCharCode(128 | n >> 0 & 63)) : (e += String.fromCharCode(192 | n >> 6 & 31), e += String.fromCharCode(128 | n >> 0 & 63));
                                return e
                            }(t))
                        },
                        decode: function(t) {
                            return function(t) {
                                var e, i, s, n, a, o;
                                for (e = "", s = t.length, i = 0; i <
                                    s;) switch ((n = t.charCodeAt(i++)) >
                                    >
                                    4) {
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                        e += t.charAt(i - 1);
                                        break;
                                    case 12:
                                    case 13:
                                        a = t.charCodeAt(i++), e += String.fromCharCode((31 & n) <<
                                            6 | 63 & a);
                                        break;
                                    case 14:
                                        a = t.charCodeAt(i++), o = t.charCodeAt(i++), e += String.fromCharCode((15 & n) << 12 | (63 & a) << 6 | (63 & o) << 0)
                                }
                                return e
                            }(n(t))
                        },
                        BAtob64: function(t) {
                            var e, s = t.length,
                                n = "";
                            if (t.get)
                                for (e = 0; e < s; e += 3) n += i[t.get(e) >
                                    >
                                    2], n += i[(3 & t.get(e)) <<
                                    4 | t.get(e + 1) >> 4], n += i[(15 & t.get(e + 1)) << 2 | t.get(e + 2) >> 6], n += i[63 & t.get(e + 2)];
                            else
                                for (e = 0; e < s; e += 3) n += i[t[e] >
                                    >
                                    2], n += i[(3 & t[e]) <<
                                    4 | t[e + 1] >> 4], n += i[(15 & t[e + 1]) << 2 | t[e + 2] >> 6], n += i[63 & t[e + 2]];
                            return s % 3 == 2 ? n = n.substring(0, n.length - 1) + "=" : s % 3 == 1 && (n = n.substring(0, n.length - 2) + "=="), n
                        },
                        b64toBA: function(t) {
                            return new Uint8Array(o(t))
                        }
                    };
                    e.default = r
                },
                5344: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), e.default = {
                        STRING: 0,
                        BYTE: 1,
                        SHORT: 2,
                        BOOLEAN: 3,
                        INT: 4,
                        BYTES: 5,
                        LONG: 8,
                        ARRAY_LONG: 10,
                        ARRAY_ARRAY: 11,
                        PACKET: 100
                    }
                },
                9118: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(3550),
                        n = function() {
                            var t = {
                                encodeUTF8: function(t, e) {
                                    var i = null;
                                    for ("number" == typeof t && (i = t, t = function() {
                                            return null
                                        }); null !== i || null !== (i = t());) i < 128 ? e(127 & i) : i < 2048 ? (e(i >> 6 & 31 | 192), e(63 & i | 128)) : i < 65536 ? (e(i >
                                        >
                                        12 & 15 | 224), e(i >> 6 & 63 | 128), e(63 & i | 128)) : (e(i >> 18 & 7 | 240), e(i >> 12 & 63 | 128), e(i >> 6 & 63 | 128), e(63 & i | 128)), i = null
                                },
                                decodeUTF8: function(t, e) {
                                    for (var i, s, n, a, o = function(t) {
                                            t = t.slice(0, t.indexOf(null));
                                            var e = Error(t.toString());
                                            throw e.name = "TruncatedError", e.bytes = t, e
                                        }; null !== (i = t());)
                                        if (0 == (128 & i)) e(i);
                                        else if (192 == (224 & i)) null === (s = t()) && o([i, s]), e((31 & i) <<
                                        6 | 63 & s);
                                    else if (224 == (240 & i))(null === (s = t()) || null === (n = t())) && o([i, s, n]), e((15 & i) << 12 | (63 & s) << 6 | 63 & n);
                                    else {
                                        if (240 != (248 & i)) throw RangeError("Illegal starting byte: " + i);
                                        (null === (s = t()) || null === (n = t()) || null === (a = t())) && o([i, s, n, a]), e((7 & i) << 18 | (63 & s) << 12 | (63 & n) << 6 | 63 & a)
                                    }
                                },
                                UTF16toUTF8: function(t, e) {
                                    for (var i, s = null; null !== (i = null !== s ? s : t());) i >= 55296 && i <= 57343 && null !== (s = t()) && s > = 56320 && s <=
                                        57343 ? (e(1024 * (i - 55296) + s - 56320 + 65536), s = null) : e(i);
                                    null !== s && e(s)
                                },
                                UTF8toUTF16: function(t, e) {
                                    var i = null;
                                    for ("number" == typeof t && (i = t, t = function() {
                                            return null
                                        }); null !== i || null !== (i = t());) i <= 65535 ? e(i) : (e(55296 + ((i -= 65536) >> 10)), e(i % 1024 + 56320)), i = null
                                },
                                encodeUTF16toUTF8: function(e, i) {
                                    t.UTF16toUTF8(e, (function(e) {
                                        t.encodeUTF8(e, i)
                                    }))
                                },
                                decodeUTF8toUTF16: function(e, i) {
                                    t.decodeUTF8(e, (function(e) {
                                        t.UTF8toUTF16(e, i)
                                    }))
                                },
                                calculateCodePoint: function(t) {
                                    return t < 128 ? 1 : t < 2048 ? 2 : t < 65536 ? 3 : 4
                                },
                                calculateUTF8: function(e) {
                                    for (var i, s = 0; null !== (i = e());) s += t.calculateCodePoint(i);
                                    return s
                                },
                                calculateUTF16asUTF8: function(e) {
                                    var i = 0,
                                        s = 0;
                                    return t.UTF16toUTF8(e, (function(e) {
                                        ++i, s += t.calculateCodePoint(e)
                                    })), [i, s]
                                }
                            };
                            return t
                        }(),
                        a = String.fromCharCode,
                        o = Object.prototype.toString;

                    function r(t) {
                        var e = 0;
                        return function() {
                            return e < t.length ? t.charCodeAt(e++) : null
                        }
                    }

                    function u() {
                        var t = [],
                            e = [];
                        return function() {
                            if (0 === arguments.length) return e.join("") + a.apply(String, t);
                            t.length + arguments.length > 1024 && (e.push(a.apply(String, t)), t.length = 0), Array.prototype.push.apply(t, arguments)
                        }
                    }
                    var h = function(t, e) {
                        "number" == typeof t ? (this.capacity = t, this.buffer = new ArrayBuffer(this.capacity)) : "object" == typeof t && (this.capacity = t.byteLength, this.buffer = t), this.array = new Uint8Array(this.buffer), this.view = new DataView(this.buffer), this.writeOffset = 0, this.readOffset = 0, this.snapshot = null, this.littleEndian = !!e
                    };
                    h.METRICS_CHARS = "c", h.METRICS_BYTES = "b", h.wrap = function(t) {
                        return "[object ArrayBuffer]" === o.apply(t) ? new h(t) : "[object Array]" === o.apply(t) ? new h(new Uint8Array(t).buffer) : t instanceof h ? t : new h(t)
                    }, h.strToBytes = function(t) {
                        if (null == t || "" == t) return new ArrayBuffer(0);
                        var e = new h(3 * t.length);
                        return e.writeUTF8String(t), e.getBytes()
                    }, h.prototype = {
                        putShort: function(t, e) {
                            var i = void 0 === e;
                            i && (e = this.writeOffset), e += 2;
                            var s = this.buffer.byteLength;
                            return e > s && this.resize((s *= 2) > e ? s : e), e -= 2, this.view.setUint16(e, t, this.littleEndian), i && (this.writeOffset += 2), this
                        },
                        popShort: function(t) {
                            var e = void 0 === t;
                            if (e && (t = this.readOffset), t >= this.capacity) return null;
                            var i = this.view.getUint16(t, this.littleEndian);
                            return e && (this.readOffset += 2), i
                        },
                        putInt: function(t, e) {
                            var i = void 0 === e;
                            i && (e = this.writeOffset), e += 4;
                            var s = this.buffer.byteLength;
                            return e > s && this.resize((s *= 2) > e ? s : e), e -= 4, this.view.setUint32(e, t, this.littleEndian), i && (this.writeOffset += 4), this
                        },
                        popInt: function(t) {
                            var e = void 0 === t;
                            if (e && (t = this.readOffset), t >= this.capacity) return null;
                            var i = this.view.getUint32(t, this.littleEndian);
                            return e && (this.readOffset += 4), i
                        },
                        readByte: function(t) {
                            var e = void 0 === t;
                            if (e && (t = this.readOffset), t >= this.capacity) return null;
                            var i = this.view.getUint8(t);
                            return e && (this.readOffset += 1), i
                        },
                        writeByte: function(t, e) {
                            var i = void 0 === e;
                            i && (e = this.writeOffset), e += 1;
                            var s = this.buffer.byteLength;
                            return e > s && this.resize((s *= 2) > e ? s : e), e -= 1, this.view.setUint8(e, t), i && (this.writeOffset += 1), this
                        },
                        putBytes: function(t, e) {
                            for (var i = new DataView(t), s = 0; s < t.byteLength; s++) this.writeByte(i.getUint8(s));
                            return this
                        },
                        popBytes: function(t, e) {
                            for (var i = new ArrayBuffer(t), s = new DataView(i), n = 0; n < t; n++) s.setUint8(n, this.readByte());
                            return i
                        },
                        putLong: function(t, e) {
                            var i = s.default.fromValue(t, !0);
                            return "number" == typeof e ? this.putInt(i.high, e).putInt(i.low, e + 4) : this.putInt(i.high).putInt(i.low), this
                        },
                        popLong: function(t) {
                            var e, i;
                            return "number" == typeof t ? (e = this.popInt(t), i = this.popInt(t + 4)) : (e = this.popInt(), i = this.popInt()), s.default.fromBits(i, e, !0)
                        },
                        putDouble: function(t, e) {
                            var i = void 0 === e;
                            i && (e = this.writeOffset), e += 8;
                            var s = this.buffer.byteLength;
                            return e > s && this.resize((s *= 2) > e ? s : e), e -= 8, this.view.setFloat64(e, t, this.littleEndian), i && (this.writeOffset += 8), this
                        },
                        popDouble: function(t) {
                            var e = void 0 === t;
                            if (e && (t = this.readOffset), t >= this.capacity) return null;
                            var i = this.view.getFloat64(t, this.littleEndian);
                            return e && (this.readOffset += 8), i
                        },
                        writeUTF8String: function(t, e) {
                            var i, s = void 0 === e;
                            s && (e = this.writeOffset);
                            var a = e;
                            i = n.calculateUTF16asUTF8(r(t))[1], e += i;
                            var o = this.buffer.byteLength;
                            return e > o && this.resize((o *= 2) > e ? o : e), e -= i, n.encodeUTF16toUTF8(r(t), function(t) {
                                this.view.setUint8(e++, t)
                            }.bind(this)), s && (this.writeOffset = e), e - a
                        },
                        readUTF8String: function(t, e, i) {
                            "number" == typeof e && (i = e, e = void 0);
                            var s = void 0 === i;
                            if (s && (i = this.readOffset), i > this.capacity) return null;
                            void 0 === e && (e = h.METRICS_BYTES);
                            var a, o = 0,
                                r = i;
                            if (e === h.METRICS_CHARS) {
                                if (a = u(), n.decodeUTF8(function() {
                                        return o < t && i < this.capacity ? this.view.getUint8(i++) : null
                                    }.bind(this), function(t) {
                                        ++o, n.UTF8toUTF16(t, a)
                                    }.bind(this)), o !== t) throw RangeError("Illegal range: Truncated data, " + o + " == " + t);
                                return s ? (this.readOffset = i, a()) : {
                                    string: a(),
                                    length: i - r
                                }
                            }
                            if (e === h.METRICS_BYTES) {
                                var d = i + t;
                                if (n.decodeUTF8toUTF16(function() {
                                        return i < d ? this.view.getUint8(i++) : null
                                    }.bind(this), a = u()), i !== d) throw RangeError("Illegal range: Truncated data, " + i + " == " + d);
                                return s ? (this.readOffset = i, a()) : {
                                    string: a(),
                                    length: i - r
                                }
                            }
                            throw TypeError("Unsupported metrics: " + e)
                        },
                        resize: function(t) {
                            if (this.buffer.byteLength < t) {
                                var e = new ArrayBuffer(t);
                                new Uint8Array(e).set(new Uint8Array(this.buffer)), this.buffer = e, this.view = new DataView(this.buffer), this.array = new Uint8Array(this.buffer), this.capacity = t
                            }
                            return this
                        },
                        position: function(t) {
                            if ("number" != typeof t) return this.writeOffset;
                            this.writeOffset = t
                        },
                        getBytes: function() {
                            return this.snapshot = new ArrayBuffer(this.writeOffset), new Uint8Array(this.snapshot).set(this.array.subarray(0, this.writeOffset)), this.snapshot
                        },
                        getArray: function() {
                            return this.array.subarray(0, this.writeOffset)
                        }
                    }, e.default = h
                },
                9794: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), e.default = function(t, e) {
                        var i = !0;
                        return e.every((function(e) {
                            return void 0 !== t[e] || (console.error('param "' + e + '" do not exist'), i = !1, !1)
                        })), i
                    }
                },
                5605: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                            value: !0
                        }), 
                        e.GROUP_NOTICE_TYPE = e.CONNECT_TYPE = e.ENV = e.MESSAGE_RECEIVED_TYPE = e.LOG_FROM_SOURCE = e.CHAT_TYPE = e.LOGIN_STATUS = e.MESSAGE_SOURCE = e.CANCEL_STATUS = e.MESSAGE_STATUS = e.CALL_EVENT = e.MESSAGE_EVENT = e.SESSION_EVENT = e.LOGIN_EVENT = e.CIPHER_TYPE = e.GENERAL_TYPE = e.CR_MESSAGE_TYPE = e.MESSAGE_TYPE = e.SESSION_TYPE = e.RESCODE = e.APPID = e.BASE_URI = e.SVID = e.PACKAT_CONFIG = void 0,
                        function(t) {
                            t[t.PACKET_HEAD_LENGTH = 10] = "PACKET_HEAD_LENGTH", t[t.PROTO_PACKET_SIZE = 1024] = "PROTO_PACKET_SIZE"
                        }(e.PACKAT_CONFIG || (e.PACKAT_CONFIG = {})),
                        function(t) {
                            t[t.SVID_DEAMON = 1] = "SVID_DEAMON", t[t.SVID_LVS = 2] = "SVID_LVS", t[t.SVID_LOGIN = 3] = "SVID_LOGIN", t[t.SVID_ROUTER = 4] = "SVID_ROUTER", t[t.SVID_BRIDGE = 5] = "SVID_BRIDGE", t[t.SVID_CALL_SIGNAL = 12] = "SVID_CALL_SIGNAL", t[t.SVID_UAUTH = 99] = "SVID_UAUTH", t[t.SVID_ONLINE = 101] = "SVID_ONLINE", t[t.SVID_GENERAL_KEFU = 102] = "SVID_GENERAL_KEFU", t[t.SVID_MSG = 201] = "SVID_MSG", t[t.SVID_MSG_LOGIC = 202] = "SVID_MSG_LOGIC", t[t.SVID_PUSH = 301] = "SVID_PUSH", t[t.SVID_PUSH_PROXY = 302] = "SVID_PUSH_PROXY", t[t.SVID_IM = 401] = "SVID_IM", t[t.SVID_PUB = 410] = "SVID_PUB", t[t.SVID_KEFU = 415] = "SVID_KEFU", t[t.SVID_DATA = 1101] = "SVID_DATA", t[t.SVID_CORP = 801] = "SVID_CORP", t[t.SVID_TPT = 501] = "SVID_TPT", t[t.SVID_TPT_PROXY = 502] = "SVID_TPT_PROXY", t[t.SVID_TPT2U = 503] = "SVID_TPT2U", t[t.SVID_TPT2S = 504] = "SVID_TPT2S", t[t.SVID_CHATROOM = 420] = "SVID_CHATROOM", t[t.SVID_BASE = 3e4] = "SVID_BASE"
                        }(e.SVID || (e.SVID = {})),
                        function(t) {
                            t[t.URI_BASE_PING = 1966080010] = "URI_BASE_PING", t[t.URI_BASE_PONG = 1966080011] = "URI_BASE_PONG", t[t.URI_UNI_TRANSUP = 1966080004] = "URI_UNI_TRANSUP", t[t.URI_UNI_TRANSP2P = 1966080006] = "URI_UNI_TRANSP2P", t[t.URI_UNI_TRANSUPGRP = 1966080007] = "URI_UNI_TRANSUPGRP", t[t.URI_UNI_TRANSPLATDEST = 1966080009] = "URI_UNI_TRANSPLATDEST"
                        }(e.BASE_URI || (e.BASE_URI = {})),
                        function(t) {
                            t[t.DX = 1] = "DX"
                        }(e.APPID || (e.APPID = {})),
                        function(t) {
                            t[t.RES_NONSENSE = -1] = "RES_NONSENSE", t[t.RES_TIMEOUT = -2] = "RES_TIMEOUT", t[t.RES_SUCCESS = 0] = "RES_SUCCESS", t[t.RES_FAIL = 1] = "RES_FAIL", t[t.RES_OVERLOAD = 2] = "RES_OVERLOAD", t[t.RES_INVAID_ISP = 3] = "RES_INVAID_ISP", t[t.RES_NO_GROUP = 4] = "RES_NO_GROUP", t[t.RES_NO_SESSION = 5] = "RES_NO_SESSION", t[t.RES_NO_USER = 6] = "RES_NO_USER", t[t.RES_INVALID_PASSWORD = 7] = "RES_INVALID_PASSWORD", t[t.RES_SESSION_OVERFLOW = 8] = "RES_SESSION_OVERFLOW", t[t.RES_BUSY = 9] = "RES_BUSY", t[t.RES_REJECT = 10] = "RES_REJECT", t[t.RES_INVALID_STREAM = 11] = "RES_INVALID_STREAM", t[t.RES_STREAM_EXIST = 12] = "RES_STREAM_EXIST", t[t.RES_EXISTS = 13] = "RES_EXISTS", t[t.RES_SERVER_NOT_READY = 14] = "RES_SERVER_NOT_READY", t[t.RES_NO_UID = 15] = "RES_NO_UID", t[t.RES_DUPLICATION = 16] = "RES_DUPLICATION", t[t.RES_INVALID_PARAMS = 17] = "RES_INVALID_PARAMS", t[t.RES_INVALID_CODE = 18] = "RES_INVALID_CODE", t[t.RES_INVALID_COOKIE = 19] = "RES_INVALID_COOKIE", t[t.RES_EXPIRE_COOKIE = 20] = "RES_EXPIRE_COOKIE", t[t.RES_NO_PASSPORT = 21] = "RES_NO_PASSPORT", t[t.RES_NO_PASSWORD = 22] = "RES_NO_PASSWORD", t[t.RES_NO_DEVICE_ID = 23] = "RES_NO_DEVICE_ID", t[t.RES_NO_COOKIE = 24] = "RES_NO_COOKIE", t[t.RES_AUTH_TIMEOUT = 25] = "RES_AUTH_TIMEOUT", t[t.RES_ONLINE_SYNC_TIMEOUT = 26] = "RES_ONLINE_SYNC_TIMEOUT", t[t.RES_NOT_ENCRYPTED = 27] = "RES_NOT_ENCRYPTED", t[t.RES_SQL_ERROR = 99] = "RES_SQL_ERROR", t[t.RES_NET_BROKEN = 100] = "RES_NET_BROKEN", t[t.RES_NO_RESPONSE = 101] = "RES_NO_RESPONSE", t[t.RES_CANCELING = 102] = "RES_CANCELING", t[t.RES_HTTP_SUCCESS = 200] = "RES_HTTP_SUCCESS", t[t.RES_NOT_FOUND = 404] = "RES_NOT_FOUND", t[t.RES_FORBIDDEN_GIM_CHAT = 985] = "RES_FORBIDDEN_GIM_CHAT", t[t.RES_FORBIDDEN = 1e3] = "RES_FORBIDDEN"
                        }(e.RESCODE || (e.RESCODE = {})),
                        function(t) {
                            t.CHAT = "chat", t.GROUP_CHAT = "groupchat", 
    t.PUB_CHAT = "pubchat", t.CS_CHAT = "cschat", t.KEFU_C_CHAT = "kecuCChat", t.KEFU_B_CHAT = "kefuBChat"
                        }(e.SESSION_TYPE || (e.SESSION_TYPE = {})),
                        function(t) {
                            t[t.MSG_TYPE_TEXT = 1] = "MSG_TYPE_TEXT", t[t.MSG_TYPE_VOICE = 2] = "MSG_TYPE_VOICE", t[t.MSG_TYPE_VIDEO = 3] = "MSG_TYPE_VIDEO", t[t.MSG_TYPE_IMAGE = 4] = "MSG_TYPE_IMAGE", t[t.MSG_TYPE_CALENDAR = 5] = "MSG_TYPE_CALENDAR", t[t.MSG_TYPE_LINK = 6] = "MSG_TYPE_LINK", t[t.MSG_TYPE_MULTI_LINK = 7] = "MSG_TYPE_MULTI_LINK", t[t.MSG_TYPE_FILE = 8] = "MSG_TYPE_FILE", t[t.MSG_TYPE_GPS = 9] = "MSG_TYPE_GPS", t[t.MSG_TYPE_VCARD = 10] = "MSG_TYPE_VCARD", t[t.MSG_TYPE_EMOTION = 11] = "MSG_TYPE_EMOTION", t[t.MSG_TYPE_EVENT = 12] = "MSG_TYPE_EVENT", t[t.MSG_TYPE_CUSTOM = 13] = "MSG_TYPE_CUSTOM", t[t.MSG_TYPE_NOTICE = 14] = "MSG_TYPE_NOTICE", t[t.MSG_TYPE_PCALL = 15] = "MSG_TYPE_PCALL", t[t.MSG_TYPE_RED_PACKET = 16] = "MSG_TYPE_RED_PACKET", t[t.MSG_TYPE_GENERAL = 17] = "MSG_TYPE_GENERAL", t[t.MSG_TYPE_GVCARD = 18] = "MSG_TYPE_GVCARD", t[t.MSG_TYPE_NEWEMOTION = 19] = "MSG_TYPE_NEWEMOTION", t[t.MSG_TYPE_QUOTE = 20] = "MSG_TYPE_QUOTE", t[t.MSG_TYPE_DYNAMIC = 21] = "MSG_TYPE_DYNAMIC", t[t.MSG_TYPE_TT = 100] = "MSG_TYPE_TT"
                        }(e.MESSAGE_TYPE || (e.MESSAGE_TYPE = {})),
                        function(t) {
                            t[t.CR_MSG_TYPE_TEXT = 1] = "CR_MSG_TYPE_TEXT", t[t.CR_MSG_TYPE_FACE = 2] = "CR_MSG_TYPE_FACE", t[t.CR_MSG_TYPE_LIKE = 3] = "CR_MSG_TYPE_LIKE", t[t.CR_MSG_TYPE_CUSTOM = 100] = "CR_MSG_TYPE_CUSTOM"
                        }(e.CR_MESSAGE_TYPE || (e.CR_MESSAGE_TYPE = {})),
                        function(t) {
                            t[t.TYPE_CALL_1V1 = 1] = "TYPE_CALL_1V1", t[t.TYPE_CALL_MEETING = 2] = "TYPE_CALL_MEETING", t[t.TYPE_GROUP_VOTE = 3] = "TYPE_GROUP_VOTE"
                        }(e.GENERAL_TYPE || (e.GENERAL_TYPE = {})),
                        function(t) {
                            t[t.NO_CIPHER = 0] = "NO_CIPHER", t[t.AES = 1] = "AES", t[t.RSA = 2] = "RSA", t[t.RC4 = 3] = "RC4", t[t.BASE64 = 4] = "BASE64"
                        }(e.CIPHER_TYPE || (e.CIPHER_TYPE = {})),
                        function(t) {
                            t.CONNECTING = "connecting", t.CONNECTED = "connected", t.AUTHENTICATING = "authenticating", t.AUTH_SUCCESS = "AuthSuccess", t.AUTH_FAIL = "AuthFail", t.KICK_OFF = "KickOff", t.USE_LONG_POLLING = "use_long_polling", t.DISCONNECT = "disconnect"
                        }(e.LOGIN_EVENT || (e.LOGIN_EVENT = {})),
                        function(t) {
                            t.INIT_SESSION_LIST = "init_session_list", t.UPDATE_SESSIONS = "update_session"
                        }(e.SESSION_EVENT || (e.SESSION_EVENT = {})),
                        function(t) {
                            t.MESSAGE = "message", t.IM_MESSAGE = "IM_message", t.PUB_MESSAGE = "PUB_MESSAGE", t.T_MESSAGE = "T_message", t.D_MESSAGE = "dMessage", t.ACK = "ack", t.READ = "read", t.IM_READ = "im_read", t.PUB_READ = "pub_read", t.IM_READ_ACK = "im_read_ack", t.PUB_READ_ACK = "pub_read_ack", t.NOTICE = "notice", t.RECEIPT_ACK = "receiptACK", t.SAVE_MESSAGE = "save_message", t.K_MESSAGE = "K_message", t.K_ACK = "K_ack", t.K_READ = "K_read", t.K_NOTICE = "K_Notice", t.OPPOSITE_READ = "oppositeRead", t.OPPOSITE_READ_ACK = "oppositeReadAck", t.PUB_OPPOSITE_READ = "pubOppositeRead", t.PUB_OPPOSITE_READ_ACK = "pubOppositeReadAck"
                        }(e.MESSAGE_EVENT || (e.MESSAGE_EVENT = {})),
                        function(t) {
                            t.CREATE_ACK = "callCreateAck", t.INVITE_ACK = "callInviteAck", t.INVITE = "callInvite", t.DETECT_ACK = "detectAck", t.INVITE_RESPONSE_ACK = "inviteResponseAck", t.JOIN = "callJoin", t.PING_ACK = "callPingAck", t.MEMBER_CHANGE = "callMemberChange", t.NOTICE = "callNotice", t.QUALITY_NOTICE = "callQualityNotice", t.LEAVE = "callLeave"
                        }(e.CALL_EVENT || (e.CALL_EVENT = {})),
                        function(t) {
                            t[t.STATUS_CREATED = 0] = "STATUS_CREATED", t[t.STATUS_SENT = 1] = "STATUS_SENT", t[t.STATUS_TIMEOUT = 2] = "STATUS_TIMEOUT", t[t.STATUS_ACK = 3] = "STATUS_ACK", t[t.STATUS_SEND_ERR = 6] = "STATUS_SEND_ERR", t[t.STATUS_SEND_FORBIDDEN = 7] = "STATUS_SEND_FORBIDDEN", t[t.STATUS_CANCELING = 8] = "STATUS_CANCELING", t[t.STATUS_CANCELED = 9] = "STATUS_CANCELED"
                        }(e.MESSAGE_STATUS || (e.MESSAGE_STATUS = {})),
                        function(t) {
                            t[t.DEFAULT = 1e3] = "DEFAULT", t[t.CANCELING = 1001] = "CANCELING", t[t.CANCELED = 1002] = "CANCELED"
                        }(e.CANCEL_STATUS || (e.CANCEL_STATUS = {})),
                        function(t) {
                            t.ONLINE = "online", t.OFFLINE = "offline", t.HISTORY = "history", t.SESSIONLIST = "sessionlist", t.LOCAL = "local"
                        }(e.MESSAGE_SOURCE || (e.MESSAGE_SOURCE = {})),
                        function(t) {
                            t[t.ERROR = -1] = "ERROR", t[t.CONNECTING = 1] = "CONNECTING", t[t.CONNECTED = 2] = "CONNECTED", t[t.AUTHENTICATING = 5] = "AUTHENTICATING", t[t.AUTHENTICATED = 6] = "AUTHENTICATED", t[t.DISCONNECTING = 7] = "DISCONNECTING", t[t.DISCONNECTED = 8] = "DISCONNECTED", t[t.TERMINATED = 9] = "TERMINATED", t[t.AUTHENTICATE_TIMEOUT = 10] = "AUTHENTICATE_TIMEOUT"
                        }(e.LOGIN_STATUS || (e.LOGIN_STATUS = {})),
                        function(t) {
                            t[t.CHAT_TYPE_ONE_VS_ONE = 1] = "CHAT_TYPE_ONE_VS_ONE", t[t.CHAT_TYPE_GROUP = 2] = "CHAT_TYPE_GROUP", t[t.CHAT_TYPE_PUB = 1] = "CHAT_TYPE_PUB", t[t.CHAT_TYPE_CS = 2] = "CHAT_TYPE_CS"
                        }(e.CHAT_TYPE || (e.CHAT_TYPE = {})),
                        function(t) {
                            t.CHAT = "chat", t.GROUP = "group", t.PUB = "pub", t.KEFU = "kefu", t.DATA = "data"
                        }(e.LOG_FROM_SOURCE || (e.LOG_FROM_SOURCE = {})),
                        function(t) {
                            t[t.CHAT_MESSAGE = 1] = "CHAT_MESSAGE", t[t.GROUP_MESSAGE = 2] = "GROUP_MESSAGE", t[t.PUB_MESSAGE = 3] = "PUB_MESSAGE", t[t.CANCEL_CHAT_MESSAGE = 4] = "CANCEL_CHAT_MESSAGE", t[t.CANCEL_GROUP_MESSAGE = 5] = "CANCEL_GROUP_MESSAGE", t[t.CANCEL_PUB_MESSAGE = 6] = "CANCEL_PUB_MESSAGE", t[t.KEFU_MESSAGE = 7] = "KEFU_MESSAGE"
                        }(e.MESSAGE_RECEIVED_TYPE || (e.MESSAGE_RECEIVED_TYPE = {})),
                        function(t) {
                            t.TEST = "test", t.ST = "st", t.ONLINE = "online"
                        }(e.ENV || (e.ENV = {})),
                        function(t) {
                            t.WEBSOCKET = "websocket", t.LONG_POLLING = "longPolling"
                        }(e.CONNECT_TYPE || (e.CONNECT_TYPE = {})),
                        function(t) {
                            t[t.UPDATE = 1] = "UPDATE", t[t.CREATE = 2] = "CREATE", t[t.DELETE = 3] = "DELETE", t[t.ADD = 4] = "ADD", t[t.REMOVE = 5] = "REMOVE", t[t.CHANGE_ROLE = 6] = "CHANGE_ROLE", t[t.READ_ANNOUNCEMENT = 20] = "READ_ANNOUNCEMENT"
                        }(e.GROUP_NOTICE_TYPE || (e.GROUP_NOTICE_TYPE = {}))
                },
                8882: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(7486),
                        n = function() {
                            function t() {
                                this.deviceType = 2
                            }
                            return t.prototype.setDeviceType = function(t) {
                                s.default.isNumber(t) || (this.deviceType = parseInt(t)), isNaN(t) || 2 !== t && 4 !== t ? this.deviceType = 2 : this.deviceType = t
                            }, t
                        }();
                    e.default = new n
                },
                8473: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(6729);
                    e.default = new s
                },
                5346: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s, n, a = i(6583);

                    function o(t, e) {
                        a.default(t.prototype, e)
                    }
                    e.default = (s = function(t) {
                        for (var e in t) this[e] = t[e]
                    }, n = Object.prototype.constructor, function(t, e) {
                        var i, a = function() {
                                t.apply(this, arguments)
                            },
                            r = function() {},
                            u = t.prototype;
                        return r.prototype = u, (i = a.prototype = new r).constructor = a, a.superclass = u, u.constructor == n && (u.constructor = t), a.override = function(t) {
                            o(a, t)
                        }, i.supr = function() {
                            return u
                        }, i.override = s, o(a, e), a
                    })
                },
                6527: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(3550);
                    e.default = function(t) {
                        return t ? s.default.fromString(t).shiftRight(22).toNumber() + 1361753741828 : 0
                    }
                },
                823: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = !1;
                    s = (i.g.navigator.userAgent.indexOf("MSIE") >= 0 || !!i.g.navigator.userAgent.match(/Trident.*rv:11\./)) && i.g.navigator.userAgent.indexOf("Opera") < 0 || !i.g.WebSocket, e.default = s
                },
                3550: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var i = function(t, e, i) {
                        this.low = 0 | t, this.high = 0 | e, this.unsigned = !!i
                    };
                    i.isLong = function(t) {
                        return !0 === (t && t instanceof i)
                    };
                    var s = {},
                        n = {};
                    i.fromInt = function(t, e) {
                        var a, o;
                        return e ? 0 <=
                            (t >
                                >>= 0) && t <
                            256 && (o = n[t]) ? o : (a = new i(t, (0 | t) < 0 ? -1 : 0, !0), 0 <= t && t < 256 && (n[t] = a), a) : -128 <= (t |= 0) && t < 128 && (o = s[t]) ? o : (a = new i(t, t < 0 ? -1 : 0, !1), -128 <= t && t < 128 && (s[t] = a), a)
                    }, i.fromNumber = function(t, e) {
                        return e = !!e, isNaN(t) || !isFinite(t) ? i.ZERO : !e && t <= -0x8000000000000000 ? i.MIN_VALUE : !e && t + 1 >= 0x8000000000000000 ? i.MAX_VALUE : e && t >= 0x10000000000000000 ? i.MAX_UNSIGNED_VALUE : t < 0 ? i.fromNumber(-t, e).negate() : new i(t % 4294967296 | 0, t / 4294967296 | 0, e)
                    }, i.fromBits = function(t, e, s) {
                        return new i(t, e, s)
                    }, i.fromString = function(t, e, s) {
                        if (0 === t.length) throw Error("number format error: empty string");
                        if ("NaN" === t || "Infinity" === t || "+Infinity" === t || "-Infinity" === t) return i.ZERO;
                        if ("number" == typeof e && (s = e, e = !1), (s = s || 10) < 2 || 36 < s) throw Error("radix out of range: " + s);
                        var n;
                        if ((n = t.indexOf("-")) >
                            0) throw Error('number format error: interior "-" character: ' + t);
                        if (0 === n) return i.fromString(t.substring(1), e, s).negate();
                        for (var a = i.fromNumber(Math.pow(s, 8)), o = i.ZERO, r = 0; r <
                            t.length; r += 8) {
                            var u = Math.min(8, t.length - r),
                                h = parseInt(t.substring(r, r + u), s);
                            if (u < 8) {
                                var d = i.fromNumber(Math.pow(s, u));
                                o = o.multiply(d).add(i.fromNumber(h))
                            } else o = (o = o.multiply(a)).add(i.fromNumber(h))
                        }
                        return o.unsigned = e, o
                    }, i.fromValue = function(t, e) {
                        return "number" == typeof t ? i.fromNumber(t, e) : "string" == typeof t ? i.fromString(t, e) : i.isLong(t) ? t : new i(t.low, t.high, t.unsigned)
                    };
                    var a = i.fromInt(1 << 24);
                    i.ZERO = i.fromInt(0), i.UZERO = i.fromInt(0, !0), i.ONE = i.fromInt(1), i.UONE = i.fromInt(1, !0), i.NEG_ONE = i.fromInt(-1), i.MAX_VALUE = i.fromBits(-1, 2147483647, !1), i.MAX_UNSIGNED_VALUE = i.fromBits(-1, -1, !0), i.MIN_VALUE = i.fromBits(0, -2147483648, !1), i.prototype.toInt = function() {
                        return this.unsigned ? this.low >>> 0 : this.low
                    }, i.prototype.toNumber = function() {
                        return this.unsigned ? 4294967296 * (this.high >>> 0) + (this.low >>> 0) : 4294967296 * this.high + (this.low >>> 0)
                    }, i.prototype.value = function(t) {
                        if ((t = t || 10) < 2 || 36 < t) throw RangeError("radix out of range: " + t);
                        if (this.isZero()) return "0";
                        var e;
                        if (this.isNegative()) {
                            if (this.equals(i.MIN_VALUE)) {
                                var s = i.fromNumber(t),
                                    n = this.div(s);
                                return e = n.multiply(s).subtract(this), n.value(t) + e.toInt().value(t)
                            }
                            return "-" + this.negate().value(t)
                        }
                        var a = i.fromNumber(Math.pow(t, 6), this.unsigned);
                        e = this;
                        for (var o = "";;) {
                            var r = e.div(a),
                                u = (e.subtract(r.multiply(a)).toInt() >>> 0).toString(t);
                            if ((e = r).isZero()) return u + o;
                            for (; u.length < 6;) u = "0" + u;
                            o = "" + u + o
                        }
                    }, i.prototype.toString = i.prototype.value, i.prototype.getNumBitsAbs = function() {
                        if (this.isNegative()) return this.equals(i.MIN_VALUE) ? 64 : this.negate().getNumBitsAbs();
                        for (var t = 0 != this.high ? this.high : this.low, e = 31; e >
                            0 && 0 == (t & 1 <<
                                e); e--);
                        return 0 != this.high ? e + 33 : e + 1
                    }, i.prototype.isZero = function() {
                        return 0 === this.high && 0 === this.low
                    }, i.prototype.isNegative = function() {
                        return !this.unsigned && this.high < 0
                    }, i.prototype.isOdd = function() {
                        return 1 == (1 & this.low)
                    }, i.prototype.equals = function(t) {
                        return i.isLong(t) || (t = i.fromValue(t)), (this.unsigned === t.unsigned || this.high >
                            >>
                            31 != 1 || t.high >>> 31 != 1) && (this.high === t.high && this.low === t.low)
                    }, i.prototype.lessThan = function(t) {
                        return i.isLong(t) || (t = i.fromValue(t)), this.compare(t) <
                            0
                    }, i.prototype.greaterThan = function(t) {
                        return i.isLong(t) || (t = i.fromValue(t)), this.compare(t) >
                            0
                    }, i.prototype.greaterThanOrEqual = function(t) {
                        return this.compare(t) >= 0
                    }, i.prototype.compare = function(t) {
                        if (this.equals(t)) return 0;
                        var e = this.isNegative(),
                            i = t.isNegative();
                        return e && !i ? -1 : !e && i ? 1 : this.unsigned ? t.high >>> 0 > this.high >>> 0 || t.high === this.high && t.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.subtract(t).isNegative() ? -1 : 1
                    }, i.prototype.negate = function() {
                        return !this.unsigned && this.equals(i.MIN_VALUE) ? i.MIN_VALUE : this.not().add(i.ONE)
                    }, i.prototype.add = function(t) {
                        i.isLong(t) || (t = i.fromValue(t));
                        var e = this.high >>> 16,
                            s = 65535 & this.high,
                            n = this.low >>> 16,
                            a = 65535 & this.low,
                            o = t.high >>> 16,
                            r = 65535 & t.high,
                            u = t.low >>> 16,
                            h = 0,
                            d = 0,
                            c = 0,
                            p = 0;
                        return c += (p += a + (65535 & t.low)) >>> 16, d += (c += n + u) >>> 16, h += (d += s + r) >>> 16, h += e + o, i.fromBits((c &= 65535) <<
                            16 | (p &= 65535), (h &= 65535) << 16 | (d &= 65535), this.unsigned)
                    }, i.prototype.subtract = function(t) {
                        return i.isLong(t) || (t = i.fromValue(t)), this.add(t.negate())
                    }, i.prototype.multiply = function(t) {
                        if (this.isZero()) return i.ZERO;
                        if (i.isLong(t) || (t = i.fromValue(t)), t.isZero()) return i.ZERO;
                        if (this.equals(i.MIN_VALUE)) return t.isOdd() ? i.MIN_VALUE : i.ZERO;
                        if (t.equals(i.MIN_VALUE)) return this.isOdd() ? i.MIN_VALUE : i.ZERO;
                        if (this.isNegative()) return t.isNegative() ? this.negate().multiply(t.negate()) : this.negate().multiply(t).negate();
                        if (t.isNegative()) return this.multiply(t.negate()).negate();
                        if (this.lessThan(a) && t.lessThan(a)) return i.fromNumber(this.toNumber() * t.toNumber(), this.unsigned);
                        var e = this.high >>> 16,
                            s = 65535 & this.high,
                            n = this.low >>> 16,
                            o = 65535 & this.low,
                            r = t.high >>> 16,
                            u = 65535 & t.high,
                            h = t.low >>> 16,
                            d = 65535 & t.low,
                            c = 0,
                            p = 0,
                            l = 0,
                            f = 0;
                        return l += (f += o * d) >>> 16, p += (l += n * d) >>> 16, l &= 65535, p += (l += o * h) >>> 16, c += (p += s * d) >>> 16, p &= 65535, c += (p += n * h) >>> 16, p &= 65535, c += (p += o * u) >>> 16, c += e * d + s * h + n * u + o * r, i.fromBits((l &= 65535) << 16 | (f &= 65535), (c &= 65535) << 16 | (p &= 65535), this.unsigned)
                    }, i.prototype.div = function(t) {
                        if (i.isLong(t) || (t = i.fromValue(t)), t.isZero()) throw new Error("division by zero");
                        if (this.isZero()) return this.unsigned ? i.UZERO : i.ZERO;
                        var e, s, n;
                        if (this.equals(i.MIN_VALUE)) return t.equals(i.ONE) || t.equals(i.NEG_ONE) ? i.MIN_VALUE : t.equals(i.MIN_VALUE) ? i.ONE : (e = this.shiftRight(1).div(t).shiftLeft(1)).equals(i.ZERO) ? t.isNegative() ? i.ONE : i.NEG_ONE : (s = this.subtract(t.multiply(e)), n = e.add(s.div(t)));
                        if (t.equals(i.MIN_VALUE)) return this.unsigned ? i.UZERO : i.ZERO;
                        if (this.isNegative()) return t.isNegative() ? this.negate().div(t.negate()) : this.negate().div(t).negate();
                        if (t.isNegative()) return this.div(t.negate()).negate();
                        for (n = i.ZERO, s = this; s.greaterThanOrEqual(t);) {
                            e = Math.max(1, Math.floor(s.toNumber() / t.toNumber()));
                            for (var a = Math.ceil(Math.log(e) / Math.LN2), o = a <= 48 ? 1 : Math.pow(2, a - 48), r = i.fromNumber(e), u = r.multiply(t); u.isNegative() || u.greaterThan(s);) u = (r = i.fromNumber(e -= o, this.unsigned)).multiply(t);
                            r.isZero() && (r = i.ONE), n = n.add(r), s = s.subtract(u)
                        }
                        return n
                    }, i.prototype.not = function() {
                        return i.fromBits(~this.low, ~this.high, this.unsigned)
                    }, i.prototype.shiftLeft = function(t) {
                        return i.isLong(t) && (t = t.toInt()), 0 == (t &= 63) ? this : t < 32 ? i.fromBits(this.low << t, this.high << t | this.low >>> 32 - t, this.unsigned) : i.fromBits(0, this.low << t - 32, this.unsigned)
                    }, i.prototype.shiftRight = function(t) {
                        return i.isLong(t) && (t = t.toInt()), 0 == (t &= 63) ? this : t < 32 ? i.fromBits(this.low >
                            >>
                            t | this.high <<
                            32 - t, this.high >> t, this.unsigned) : i.fromBits(this.high >> t - 32, this.high >= 0 ? 0 : -1, this.unsigned)
                    }, e.default = i
                },
                2939: function(t, e, i) {
                    "use strict";
                    var s = this && this.__assign || function() {
                        return (s = Object.assign || function(t) {
                            for (var e, i = 1, s = arguments.length; i < s; i++)
                                for (var n in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                            return t
                        }).apply(this, arguments)
                    };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var n = i(5605),
                        a = i(5678),
                        o = {
                            iOS: /(iphone|ipad)/i,
                            Win: /windows nt/i,
                            Android: /android/i,
                            Mac: /mac os x/i,
                            Linux: /linux/i
                        },
                        r = function() {
                            function t() {
                                this._owl = null
                            }
                            return t.prototype.init = function() {
                                this._owl = i(25), this._owl.config({
                                    project: "IM-Web-SDK",
                                    devMode: a.default.get("env") !== n.ENV.ONLINE,
                                    autoCatch: {
                                        ajax: !1,
                                        page: !1,
                                        js: !1,
                                        resource: !1,
                                        console: !1,
                                        pv: !0
                                    }
                                })
                            }, t.prototype._getClientInformation = function() {
                                var t, e = window.navigator.userAgent,
                                    i = {
                                        os: "",
                                        pt: "",
                                        ren: "",
                                        rev: ""
                                    };
                                for (var s in o)
                                    if (o[s].test(e)) {
                                        i.os = s, i.pt = -1 === ["iOS", "Android"].indexOf(s) ? "web" : s;
                                        break
                                    } return (t = e.match(/msie ([\d.]+)/i)) && !/opera/i.test(e) ? i.ren = "IE" : (t = e.match(/firefox\/([\d.]+)/i)) ? i.ren = "Firefox" : (t = e.match(/chrome\/([\d.]+)/i)) && /webkit/i.test(e) && /mozilla/i.test(e) ? i.ren = "Chrome" : (t = e.match(/opera.([\d.]+)/)) ? i.ren = "Opera" : !/webkit/i.test(e) || /chrome/i.test(e) && /webkit/i.test(e) && /mozilla/i.test(e) || !(t = e.match(/version\/([\d.]+).*safari/i)) ? i.ren = "Other" : i.ren = "Safari", i.rev = t ? t[1] : "", i
                            }, t.prototype.send = function(t) {
                                var e = t.name,
                                    i = void 0 === e ? "" : e,
                                    n = t.value,
                                    o = t.tag,
                                    r = void 0 === o ? null : o;
                                if (this._owl) {
                                    var u = this._owl.MetricManager();
                                    this._clientInformation = this._getClientInformation(), u.setTags(s({
                                        appId: a.default.get("appId"),
                                        pt: this._clientInformation.pt,
                                        os: this._clientInformation.os
                                    }, r)), u && i && u.setMetric(i, n)
                                }
                            }, t
                        }();
                    e.default = new r
                },
                8554: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(9118),
                        n = i(3550),
                        a = i(7294),
                        o = i(5344),
                        r = i(6583),
                        u = i(5605),
                        h = function(t) {
                            void 0 === t && (t = {}), this.bufferInited = !1, this._capacity = u.PACKAT_CONFIG.PROTO_PACKET_SIZE, this._position = u.PACKAT_CONFIG.PACKET_HEAD_LENGTH, this.fromUnmarshall = !1, this.init(), r.default(this, t), this.initAfter()
                        };
                    h.prototype = {
                        appid: u.APPID.DX,
                        init: function() {},
                        initAfter: function() {},
                        initBuffer: function() {
                            return this.buffer = new s.default(this._capacity), this.buffer.position(this._position), !0
                        },
                        release: function() {
                            this.buffer = null
                        },
                        setUri: function(t) {
                            this.uri = t
                        },
                        clear: function() {},
                        copy: function() {},
                        snapshotBytes: function() {
                            return this.buffer.snapshot ? this.buffer.snapshot : this.getBytes()
                        },
                        setUid: function(t) {},
                        getBytes: function() {
                            return this._marshall(), this.buffer.getBytes()
                        },
                        getArray: function() {
                            return this._marshall(), this.buffer.getArray()
                        },
                        __byteArr: [],
                        serialize: function() {
                            this.__byteArr = [];
                            for (var t = this.getArray(), e = 0; e <
                                t.length; e++) this.__byteArr.push(t[e]);
                            return JSON.stringify(this.__byteArr)
                        },
                        unserialize: function() {
                            return this
                        },
                        getBase64: function() {
                            return a.default.BAtob64(this.getArray())
                        },
                        _marshall: function() {
                            this.bufferInited || (this.bufferInited = this.initBuffer()), this.marshall();
                            var t = this.buffer.position();
                            this.buffer.putInt(t, 0), this.buffer.putInt(this.uri, 4), this.buffer.putShort(this.appid, 8)
                        },
                        toPure: function() {
                            delete this._capacity, delete this._position, delete this.buffer, delete this.fromUnmarshall, delete this.bufferInited
                        },
                        parserFromBuffer: function(t) {
                            return this._unmarshall(t), this
                        },
                        fromBuffer: function(t) {
                            return this._unmarshall(t), console.log(this), this
                        },
                        _unmarshall: function(t) {
                            this.fromUnmarshall = !0, this.buffer = s.default.wrap(t), this.length = this.popInt(), this.uri = this.popInt(), this.appid = this.popShort();
                            try {
                                this.unmarshall()
                            } catch (t) {
                                console.error(t)
                            }
                        },
                        _pushBool: function(t) {
                            this.buffer.writeByte(t ? 1 : 0)
                        },
                        popBool: function() {
                            return 1 == this.popByte()
                        },
                        _pushByte: function(t) {
                            this.buffer.writeByte(t)
                        },
                        popByte: function() {
                            return this.buffer.readByte()
                        },
                        _pushShort: function(t) {
                            this.buffer.putShort(t)
                        },
                        popShort: function() {
                            return this.buffer.popShort()
                        },
                        _pushInt: function(t) {
                            this.buffer.putInt(t || 0)
                        },
                        popInt: function() {
                            return this.buffer.popInt()
                        },
                        _pushDouble: function(t) {
                            this.buffer.putDouble(t || 0)
                        },
                        popDouble: function() {
                            return this.buffer.popDouble()
                        },
                        popLong: function() {
                            return this.buffer.popLong()
                        },
                        _pushLong: function(t) {
                            return this.buffer.putLong(t || 0)
                        },
                        _pushString: function(t) {
                            if (t) {
                                var e = this.buffer.writeUTF8String(t, this.buffer.writeOffset + 2);
                                this._pushShort(e), this.buffer.position(this.buffer.writeOffset + e)
                            } else this._pushShort(0)
                        },
                        _pushArrayLong: function(t) {
                            if (t) {
                                var e = t.length;
                                this._pushShort(e);
                                for (var i = 0; i < e; i++) this._pushLong(t[i])
                            } else this._pushShort(0)
                        },
                        popString: function() {
                            return this.buffer.readUTF8String(this.buffer.popShort())
                        },
                        _pushArrayArray: function(t) {
                            if (t) {
                                var e = t.length;
                                this._pushShort(e);
                                for (var i = 0; i < e; i++) t[i] instanceof h ? this._pushPacket(t[i]) : this._pushBytes(t[i])
                            } else this._pushShort(0)
                        },
                        _popArrayArray: function() {
                            for (var t = this.buffer.popShort(), e = [], i = 0; i < t; i++) e[i] = this.popBytes();
                            return e
                        },
                        _popArrayLong: function() {
                            for (var t = this.buffer.popShort(), e = [], i = 0; i < t; i++) e[i] = this.popLong().value();
                            return e
                        },
                        _pushBytes: function(t) {
                            t && t.byteLength ? (this.buffer.putShort(t.byteLength), this.buffer.putBytes(t)) : this.buffer.putShort(0)
                        },
                        popBytes: function() {
                            return this.buffer.popBytes(this.buffer.popShort())
                        },
                        popMapOfShortAndInt: function() {
                            for (var t = {}, e = this.buffer.popShort(), i = 0; i < e; i++) {
                                var s = this.buffer.popShort(),
                                    n = this.buffer.popInt();
                                t[s] = n
                            }
                            return t
                        },
                        popMapOfLongAndByte: function() {
                            for (var t = {}, e = this.buffer.popShort(), i = 0; i < e; i++) {
                                var s = this.buffer.popLong(),
                                    n = this.popByte();
                                t[s] = n
                            }
                            return t
                        },
                        popUItems: function() {
                            for (var t = [], e = this.popShort(), i = 0; i < e; i++) t.push(this.popUItem());
                            return t
                        },
                        popUItem: function() {
                            var t = {};
                            return t.uid = this.popLong().value(), t.appId = this.popShort(), t
                        },
                        _pushPacket: function(t) {
                            t && this._pushBytes(t.getBytes())
                        },
                        push: function(t, e) {
                            switch (void 0 === e && ("string" == typeof t ? e = o.default.STRING : "number" == typeof t ? e = o.default.INT : t instanceof h ? e = o.default.PACKET : n.default.isLong(t) ? e = o.default.LONG : Array.isArray(t) && (e = o.default.ARRAY_LONG)), e) {
                                case o.default.INT:
                                    this._pushInt(t);
                                    break;
                                case o.default.SHORT:
                                    this._pushShort(t);
                                    break;
                                case o.default.LONG:
                                    this._pushLong(t);
                                    break;
                                case o.default.STRING:
                                    this._pushString(t);
                                    break;
                                case o.default.BOOLEAN:
                                    this._pushBool(t);
                                    break;
                                case o.default.BYTE:
                                    this._pushByte(t);
                                    break;
                                case o.default.BYTES:
                                    this._pushBytes(t);
                                    break;
                                case o.default.PACKET:
                                    this._pushPacket(t);
                                    break;
                                case o.default.ARRAY_LONG:
                                    this._pushArrayLong(t);
                                    break;
                                case o.default.ARRAY_ARRAY:
                                    this._pushArrayArray(t);
                                    break;
                                default:
                                    throw Error("Unsupported data type: " + e)
                            }
                            return this
                        }
                    }, e.default = h
                },
                9972: (t, e, i) => {
                    "use strict";
                    var s;
                    Object.defineProperty(e, "__esModule", {
                            value: !0
                        }),
                        function(t) {
                            t[t.pending = 0] = "pending", t[t.resolving = 1] = "resolving", t[t.rejecting = 2] = "rejecting", t[t.resolved = 3] = "resolved", t[t.rejected = 4] = "rejected"
                        }(s || (s = {}));
                    var n = 0,
                        a = {},
                        o = !1;

                    function r(t) {
                        i.g.setImmediate ? i.g.setImmediate(t) : i.g.postMessage ? (a[++n] = t, i.g.postMessage(n, "*")) : setTimeout(t)
                    }
                    i.g.postMessage && i.g.addEventListener("message", (function(t) {
                        if (t.source === i.g) {
                            var e = t.data;
                            if (o) r(a[e]);
                            else {
                                o = !0;
                                try {
                                    "function" == typeof a[e] && a[e]()
                                } catch (t) {
                                    console.error(t)
                                }
                                o = !1
                            }
                            delete a[e], a[e] = void 0
                        }
                    }));
                    var u = function() {
                        function t(t) {
                            if (this._next = [], this.state = 0, "function" != typeof t && void 0 !== t) throw TypeError();
                            if ("object" != typeof this) throw TypeError();
                            try {
                                "function" == typeof t && t(this.resolve.bind(this), this.reject.bind(this))
                            } catch (t) {
                                this.reject(t)
                            }
                        }
                        return t.resolve = function(e) {
                            if (1 !== t._d) throw TypeError();
                            return e instanceof t ? e : new t((function(t) {
                                t(e)
                            }))
                        }, t.reject = function(e) {
                            if (1 !== t._d) throw TypeError();
                            return new t((function(t, i) {
                                i(e)
                            }))
                        }, t.all = function(e) {
                            if (1 !== t._d) throw TypeError();
                            if (!(e instanceof Array)) return t.reject(new TypeError);
                            var i = new t;
                            return function t() {
                                e.filter((function(t) {
                                    return t && t.then
                                })).length || i.resolve(e), e.map((function(i, s) {
                                    i && i.then && i.then((function(i) {
                                        return e[s] = i, t(), i
                                    }))
                                }))
                            }(), i
                        }, t.race = function(e) {
                            if (1 !== t._d) throw TypeError();
                            if (!(e instanceof Array)) return t.reject(new TypeError);
                            var i = new t;
                            return function t(s) {
                                s && i.resolve(s), e.filter((function(t) {
                                    return t && t.then
                                })).length || i.resolve(e), e.map((function(i, s) {
                                    i && i.then && i.then((function(i) {
                                        return e[s] = i, t(i), i
                                    }))
                                }))
                            }(), i
                        }, t.prototype.resolve = function(t) {
                            return this.state === s.pending && (this._value = t, this.state = s.resolving, r(this._handleNextTick.bind(this))), this
                        }, t.prototype.reject = function(t) {
                            return this.state === s.pending && (this._reason = t, this.state = s.rejecting, this._value = void 0, r(this._handleNextTick.bind(this))), this
                        }, t.prototype.then = function(e, i) {
                            if (1 !== t._d) throw TypeError();
                            var n = new t;
                            return n.fn = e, n.er = i, this.state === s.resolved ? n.resolve(this._value) : this.state === s.rejected ? n.reject(this._reason) : this._next.push(n), n
                        }, t.prototype.catch = function(t) {
                            return this.then(null, t)
                        }, t.prototype._handleNextTick = function() {
                            var t, e = this,
                                i = 0;
                            try {
                                t = this._value && this._value.then
                            } catch (t) {
                                return this.state = s.rejecting, this._reason = t, this._value = void 0, this._handleNextTick()
                            }
                            if (this.state === s.rejecting || "object" != typeof this._value && "function" != typeof this._value || "function" != typeof t) {
                                try {
                                    this.state === s.resolving && "function" == typeof this.fn ? this._value = this.fn.call(h(), this._value) : this.state === s.rejecting && "function" == typeof this.er && (this._value = this.er.call(h(), this._reason), this.state = 1)
                                } catch (t) {
                                    this.state = s.rejecting, this._reason = t, this._value = void 0, this._finishThisTypeScriptPromise()
                                }
                                this._value === this && (this.state = s.rejecting, this._reason = new TypeError, this._value = void 0), this._finishThisTypeScriptPromise()
                            } else try {
                                t.call(this._value, (function(t) {
                                    i++ || (e._value = t, e.state = s.resolving, e._handleNextTick())
                                }), (function(t) {
                                    i++ || (e._reason = t, e.state = s.rejecting, e._value = void 0, e._handleNextTick())
                                }))
                            } catch (t) {
                                this.state = s.rejecting, this._reason = t, this._value = void 0, this._handleNextTick()
                            }
                        }, t.prototype._finishThisTypeScriptPromise = function() {
                            var t = this;
                            this.state === s.resolving ? (this.state = s.resolved, this._next.map((function(e) {
                                e.resolve(t._value)
                            }))) : (this.state = s.rejected, this._next.map((function(e) {
                                e.reject(t._reason)
                            })))
                        }, t._d = 1, t
                    }();

                    function h() {
                        return this
                    }
                    e.default = u
                },
                5509: function(t, e, i) {
                    "use strict";
                    var s = this && this.__assign || function() {
                        return (s = Object.assign || function(t) {
                            for (var e, i = 1, s = arguments.length; i < s; i++)
                                for (var n in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                            return t
                        }).apply(this, arguments)
                    };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var n = i(8554),
                        a = i(9118),
                        o = i(7294),
                        r = i(5344),
                        u = i(8473),
                        h = i(5346),
                        d = i(5605),
                        c = i(5678),
                        p = {},
                        l = {};

                    function f(t, e) {
                        if ("number" == typeof t) l[t] = e;
                        else
                            for (var i = 0; i < t.length; i++) l[t[i]] = e;
                        return e
                    }

                    function _(t, e, i) {
                        t = a.default.wrap(t);
                        var n, o = {
                                length: (n = t.array)[3] + (n[2] << 8) + (n[1] << 16) + (n[0] << 24),
                                uri: n[7] + (n[6] << 8) + (n[5] << 16) + (n[4] << 24),
                                appid: n[9] + (n[8] << 8),
                                buffer: {
                                    array: n
                                }
                            },
                            r = l[o.uri];
                        if (r) try {
                            return (new r).fromBuffer(t)
                        } catch (t) {
                            if (i) throw new Error
                        }
                        return s(s({}, e), o)
                    }

                    function g(t) {
                        if (void 0 === this[t]) throw new Error("[" + t + "] is required~")
                    }
                    p.Request = h.default(n.default, {}), p.Request.extend = function(t) {
                        return g.call(t, "init"), g.call(t, "marshall"), h.default(p.Request, t)
                    }, p.TransUp = h.default(n.default, {
                        uri: d.BASE_URI.URI_UNI_TRANSUP,
                        init: function() {
                            this.svid = 0, this.uid = 0, this.buf = null, this.flag = 0, this.seqId = 0, this.deviceId = c.default.get("deviceId")
                        },
                        marshall: function() {
                            this.push(this.svid, r.default.SHORT), this.push(this.uid, r.default.LONG), this.push(this.buf, r.default.BYTES), this.push(this.flag, r.default.BYTE), this.push(this.seqId, r.default.INT), this.push(this.deviceId, r.default.STRING)
                        },
                        unmarshall: function() {
                            this.svid = this.popShort(), this.uid = this.popLong().value(), this.buf = this.popBytes(), this.flag = this.popByte(), this.seqId = this.popInt(), this.deviceId = this.popString()
                        },
                        unserialize: function() {
                            return _(this.buf)
                        }
                    }), f(d.BASE_URI.URI_UNI_TRANSUP, p.TransUp), p.Response = h.default(n.default, {
                        toPure: function() {
                            return p.Response.superclass.toPure.call(this), this.message && this.message.toPure && this.message.toPure(), this.msgId && (this.msgId = this.msgId.value ? this.msgId.value() : this.msgId), this
                        }
                    }), p.Response.extend = function(t) {
                        return g.call(t, "uri"), g.call(t, "unmarshall"), f(t.uri, h.default(p.Response, t))
                    }, p.Response.fromBuffer = function(t) {
                        return _(t, {
                            text: "unknown response type",
                            type: -1
                        })
                    }, p.Response.fromBase64 = function(t) {
                        return p.Response.fromBuffer(o.default.b64toBA(t).buffer)
                    }, p.Message = h.default(n.default, {
                        toPure: function() {
                            return p.Message.superclass.toPure.call(this), this
                        }
                    }), p.Message.extend = function(t) {
                        return g.call(t, "init"), g.call(t, "marshall"), g.call(t, "unmarshall"), f(t.uri, h.default(p.Message, t))
                    }, p.Message.fromBuffer = function(t) {
                        return _(t, {
                            text: "unknown message type",
                            type: -1
                        }, !0)
                    }, u.default.on("_dataRecv", (function(t) {
                        var e = _(t, {
                            text: "unknown data type",
                            type: -1
                        });
                        u.default.emit(e.uri, e)
                    })), e.default = p
                },
                5251: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var i = function(t, e) {
                        this.strategy = t || [30], this.length = this.strategy.length, this.cursor = 0, this.host = e || this, this.timeoutHandler = null, this.timeoutFun = null
                    };
                    i.prototype = {
                        clearTimeout: function() {
                            this.timeoutHandler && (clearTimeout(this.timeoutHandler), this.timeoutHandler = null)
                        },
                        timeout: function(t) {
                            this.timeoutFun = t
                        },
                        run: function(t, e) {
                            e && e >= 0 && this.clearTimeout(), this.timeoutHandler || (this.timeoutHandler = setTimeout(function() {
                                this.clearTimeout(), this.isEnd() ? this.timeoutFun && this.timeoutFun.call(this.host) : t.call(this.host)
                            }.bind(this), this._value(e)))
                        },
                        reset: function() {
                            this.cursor = 0, this.clearTimeout()
                        },
                        _value: function(t) {
                            if (t && t >= 0) {
                                for (this.cursor = 0; this.cursor < this.length && t > = 1e3 * this.strategy[this.cursor];) this.cursor++;
                                return t
                            }
                            return 1e3 * this.strategy[this.cursor >= this.length ? this.length - 1 : this.cursor++]
                        },
                        isEnd: function() {
                            return this.cursor == this.length
                        }
                    }, e.default = i
                },
                6973: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5678),
                        n = function() {
                            function t() {
                                this._lastCts = 0, this._OFFSET = 18e4
                            }
                            return t.prototype.get = function() {
                                var t = s.default.get("deltaT") || 0,
                                    e = (new Date).getTime() + t;
                                return this._lastCts - this._OFFSET <
                                    e && e < this._lastCts && (e = this._lastCts + 1), this._lastCts = e, this._lastCts
                            }, t
                        }();
                    e.default = new n
                },
                7486: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var i = function() {
                        function t() {
                            this._type = ""
                        }
                        return t.prototype.check = function(t) {
                            this._type = Object.prototype.toString.call(t)
                        }, t.prototype.isUndefined = function(t) {
                            return this.check(t), "[object Undefined]" === this._type
                        }, t.prototype.isNull = function(t) {
                            return this.check(t), "[object Null]" === this._type
                        }, t.prototype.isBoolean = function(t) {
                            return this.check(t), "[object Boolean]" === this._type
                        }, t.prototype.isNumber = function(t) {
                            return this.check(t), "[object Number]" === this._type
                        }, t.prototype.isString = function(t) {
                            return this.check(t), "[object String]" === this._type
                        }, t.prototype.isArray = function(t) {
                            return this.check(t), "[object Array]" === this._type
                        }, t.prototype.isObject = function(t) {
                            return this.check(t), "[object Object]" === this._type
                        }, t.prototype.isFunction = function(t) {
                            return this.check(t), "[object Function]" === this._type
                        }, t.prototype.isRegex = function(t) {
                            return this.check(t), "[object RegExp]" === this._type
                        }, t.prototype.isDate = function(t) {
                            return this.check(t), "[object Date]" === this._type
                        }, t
                    }();
                    e.default = new i
                },
                5678: function(t, e) {
                    "use strict";
                    var i = this && this.__assign || function() {
                        return (i = Object.assign || function(t) {
                            for (var e, i = 1, s = arguments.length; i < s; i++)
                                for (var n in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                            return t
                        }).apply(this, arguments)
                    };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = function() {
                        function t() {
                            this._storageMap = {}
                        }
                        return t.prototype.set = function(t, e) {
                            this._storageMap[t] = e
                        }, t.prototype.setAll = function(t) {
                            this._storageMap = i(i({}, this._storageMap), t)
                        }, t.prototype.get = function(t) {
                            return this._storageMap[t]
                        }, t.prototype.getAll = function() {
                            return i({}, this._storageMap)
                        }, t.prototype.remove = function(t) {
                            this._storageMap[t] = void 0, delete this._storageMap[t]
                        }, t.prototype.removeAll = function() {
                            this._storageMap = {}
                        }, t
                    }();
                    e.default = new s
                },
                4053: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var i = new Array(32),
                        s = new Array(32),
                        n = 4,
                        a = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                        o = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                        r = o.length,
                        u = "";
                    ! function() {
                        for (var t = 0; t <
                            i.length; t++) i[t] = s[t] = t;
                        for (t = 0; t < i.length; t++) i[t] = 6173 * Math.random() % i.length;
                        for (t = s.length - 1; t >= 0; t--) {
                            var e = 6173 * Math.random() % s.length,
                                n = s[t];
                            s[t] = s[e], s[e] = n
                        }
                        var a = (new Date).getTime() / 1e3 % 1e8;
                        do {
                            u = o.charAt(a % r) + u, a /= r
                        } while (a >= r)
                    }(), e.default = {
                        next: function() {
                            ! function t(e) {
                                e >= n && ++n, a[e] = a[e] + 1, a[e] >= o.length && (a[e] = 0, t(e + 1))
                            }(0);
                            var t = 6173 * Math.random() % o.length,
                                e = "" + o.charAt(t);
                            t = s[t % s.length] ^ t >>> 1 ^ t << 9, t = i[t % i.length] ^ t >>> 1 ^ t << 8, t = s[t % s.length] ^ t >>> 1 ^ t << 7;
                            for (var r = 0; r < n; r++) {
                                var h = a[r];
                                h = (h + i[Math.abs(t) % i.length]) % o.length, e += o.charAt(h), t = s[h % s.length] ^ t >
                                    >>
                                    1 ^ t <<
                                    9
                            }
                            return u + e
                        }
                    }
                },
                8255: (t, e, i) => {
                    "use strict";
                    var s = i(1663),
                        n = i(9972),
                        a = {
                            session: {
                                fields: ["uid", "appId", "channelId", "time", "_isCountUnread", "unreads", "type", "message", "readTime", "pubId", "peerUid", "svrTime"]
                            }
                        },
                        o = {
                            initDB: function(t) {
                                for (var e in a) a[e].db = new s.default(t + e, a[e].fields, 52428800)
                            },
                            clearDBs: function() {
                                var t = [];
                                for (var e in a) t.push(this.clearDB(e));
                                return n.default.all(t)
                            },
                            clearDBsExclude: function(t) {
                                var e = [];
                                for (var i in a) - 1 === t.indexOf(i) && e.push(this.clearDB(i));
                                return n.default.all(e)
                            },
                            getData: function(t, e) {
                                if (!a[t].db) return n.default.resolve({});
                                try {
                                    return e ? new n.default((function(i, s) {
                                        a[t].db && a[t].db.get(e, i, s)
                                    })) : n.default.reject({})
                                } catch (t) {
                                    return n.default.reject({})
                                }
                            },
                            _handler: function() {},
                            registerErrHandler: function(t) {
                                this._handler = t
                            },
                            setData: function(t, e, i) {
                                return a[t].db ? new n.default((function(s, n) {
                                    try {
                                        a[t].db && a[t].db.set(e, i, s, n)
                                    } catch (t) {
                                        console.error("setData error", t)
                                    }
                                })) : n.default.resolve({})
                            },
                            setBatch: function(t, e) {
                                return new n.default((function(i, s) {
                                    try {
                                        a[t].db && a[t].db.setBatch(e, i, s)
                                    } catch (t) {
                                        console.error("setBatch error", t)
                                    }
                                }))
                            },
                            removeBatch: function(t, e) {
                                return new n.default((function(i, s) {
                                    try {
                                        a[t].db && a[t].db.removeBatch(e, i, s)
                                    } catch (t) {
                                        console.error("removeBatch error", t)
                                    }
                                }))
                            },
                            filter: function(t, e) {
                                return new n.default((function(i, s) {
                                    e.onSuccess = i, e.onFail = s, a[t].db && a[t].db.filter(e)
                                }))
                            },
                            removeData: function(t, e) {
                                return new n.default((function(i, s) {
                                    try {
                                        a[t].db && (e instanceof Array ? a[t].db.removeBatch(e, i, s) : a[t].db.remove(e, i, s))
                                    } catch (t) {
                                        console.error("removeData error", t)
                                    }
                                }))
                            },
                            getAll: function(t) {
                                return new n.default((function(e, i) {
                                    try {
                                        a[t].db && a[t].db.all(e, i)
                                    } catch (t) {
                                        console.error("getAll", t)
                                    }
                                }))
                            },
                            clearDB: function(t) {
                                return new n.default((function(e, i) {
                                    try {
                                        a[t].db && a[t].db.clear(e, i)
                                    } catch (t) {
                                        console.error("clearDB error", t)
                                    }
                                }))
                            }
                        };
                    e.Z = o
                },
                1663: (t, e) => {
                    "use strict";

                    function i(t, e, s) {
                        var n, a = {};
                        if (Object.prototype.hasOwnProperty.call(a, t)) return a[t];
                        t = t || "_local_", e = e || [], s = s || 209715200;
                        try {
                            n = new i.IndexedDB(t, e, s)
                        } catch (a) {
                            try {
                                n = new i.WebSql(t, e, s)
                            } catch (a) {
                                n = new i.LocalStorage(t, e, s)
                            }
                        }
                        return a[t] = n
                    }
                    Object.defineProperty(e, "__esModule", {
                            value: !0
                        }),
                        function(t) {
                            function e() {
                                this._cbArray = [], this.state = "waiting"
                            }
                            e.prototype = {
                                done: function(t) {
                                    return "waiting" === this.state ? this._cbArray.push(t.bind(this)) : t.call(this), this
                                },
                                resolve: function() {
                                    return this.state = "ready", this._cbArray.forEach((function(t) {
                                        t()
                                    })), this._cbArray = [], this
                                }
                            };
                            var i, s, n, a, o = window.indexedDB || window.msIndexedDB || window.mozIndexedDB || window.webkitIndexedDB,
                                r = (window.IDBTransaction || window.webkitIDBTransaction, window.IDBKeyRange || window.webkitIDBKeyRange),
                                u = (window.IDBCursor || window.webkitIDBCursor, "_id"),
                                h = {
                                    keyPath: "_id"
                                },
                                d = "readwrite";

                            function c(t) {
                                console.error("Web SDK DB 存储异常", t)
                            }

                            function p(t, i, s) {
                                return e.call(this), this.cName = t || "_local_", this.DBName = "_dx_" + this.cName, this.fields = i || "", this.maxSize = s || 209715200, this._create(), this
                            }
                            i = p, s = e, n = {
                                _mapFields: function(t) {
                                    var e = this.fields,
                                        i = e.length,
                                        s = 0,
                                        n = {};
                                    if (!t) return null;
                                    if (i === s) n = t;
                                    else
                                        for (; s < i;) Object.hasOwnProperty.call(t, e[s]) && (n[e[s]] = null == t[e[s]] ? "" : t[e[s]]), s++;
                                    return n
                                },
                                _create: function() {
                                    var t = o.open(this.DBName, 1);
                                    t.onsuccess = function(t) {
                                        this.DB = t.target.result, this.DB.onversionchange = function(t) {
                                            this.DB.close(), c({
                                                code: 101,
                                                message: "database conflict!"
                                            })
                                        }.bind(this), this.resolve()
                                    }.bind(this), t.onerror = function(t) {
                                        c(t.target.error)
                                    }.bind(this), t.onupgradeneeded = function(t) {
                                        t.target.result.createObjectStore(this.cName, h).createIndex("time", "time", {
                                            unique: !1
                                        })
                                    }.bind(this)
                                },
                                _getOs: function() {
                                    var t = this.DB.transaction([this.cName], d);
                                    t.oncomplete = function(t) {}, t.onerror = function(t) {
                                        c(t.target.error)
                                    }, this.objectStore = t.objectStore(this.cName)
                                },
                                _process: function(t, e, i, s) {
                                    this.done((function() {
                                        this._getOs();
                                        var n = this.objectStore[t](e);
                                        n.onerror = function(t) {
                                            s && s(t.target.error)
                                        }, n.onsuccess = function(t) {
                                            var e = t.target.result;
                                            i && i(this._mapFields(e))
                                        }.bind(this)
                                    }))
                                },
                                _batchProcess: function(t, e, i, s) {
                                    this.done((function() {
                                        var n = this,
                                            a = {},
                                            o = e.length,
                                            r = !1;
                                        this._getOs();
                                        var u = function() {
                                            r ? s && s(a) : i && i(a)
                                        };
                                        e.forEach((function(e, i) {
                                            var s = n.objectStore[t](e);
                                            s.onerror = function(t) {
                                                a[e] = null, r = !0, 0 == --o && u()
                                            }, s.onsuccess = function(t) {
                                                a[e] = n._mapFields(t.target.result) || !0, 0 == --o && u()
                                            }
                                        }))
                                    }))
                                },
                                get: function(t, e, i) {
                                    this._process("get", t, e, i)
                                },
                                getBatch: function(t, e, i) {
                                    this._batchProcess("get", t, e, i)
                                },
                                set: function(t, e, i, s) {
                                    var n = this._mapFields(e);
                                    n[u] = t, n.time || (n.time = e.time ? e.time : Date.now()), this._process("put", n, i, s)
                                },
                                setBatch: function(t, e, i) {
                                    var s = this,
                                        n = Object.keys(t),
                                        a = [];
                                    n.forEach((function(e) {
                                        var i = s._mapFields(t[e]);
                                        i.time || (i.time = e.time ? e.time : Date.now()), i[u] = e, a.push(i)
                                    })), this._batchProcess("put", a, e, i)
                                },
                                remove: function(t, e, i) {
                                    this._process("delete", t, e, i)
                                },
                                removeBatch: function(t, e, i) {
                                    this._batchProcess("delete", t, e, i)
                                },
                                all: function(t, e) {
                                    var i = {};
                                    this.done((function() {
                                        var s = this;
                                        this._getOs();
                                        var n = this.objectStore.index("time").openCursor();
                                        n.onsuccess = function(e) {
                                            var n = e.target.result;
                                            n ? (i[n.value[u]] = s._mapFields(n.value), n.continue()) : t && t(i)
                                        }, n.onerror = function(t) {
                                            e && e(t.target.error)
                                        }
                                    }))
                                },
                                clear: function(t, e) {
                                    this._process("clear", null, t, e)
                                },
                                delete: function(t, e) {
                                    this.clear(t, e)
                                },
                                filter: function(t) {
                                    var e = {},
                                        i = t.before ? t.before : Date.now(),
                                        s = t.after ? t.after : new Date(0).getTime(),
                                        n = t.fn ? t.fn : function() {
                                            return !0
                                        },
                                        a = t.limit ? t.limit : Number.MAX_VALUE,
                                        o = 0;
                                    this.done((function() {
                                        var h = this;
                                        this._getOs();
                                        var d = this.objectStore.index("time").openCursor(r.bound(s, i, !0), "prev");
                                        d.onsuccess = function(i) {
                                            var s, r = i.target.result;
                                            r && o < a ? (s = h._mapFields(r.value), n(s) && (e[r.value[u]] = s, o++), r.continue()) : t.onSuccess && t.onSuccess(e)
                                        }, d.onerror = function(e) {
                                            t.onFail && t.onFail(e.target.error)
                                        }
                                    }))
                                }
                            }, a = Object.create(s.prototype), Object.keys(n).forEach((function(t) {
                                a[t] = n[t]
                            })), a.constructor = i, i.prototype = a, t.IndexedDB = p
                        }(i), e.default = i
                },
                7153: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(704),
                        n = i(4864),
                        a = i(3857),
                        o = i(9209),
                        r = i(7923),
                        u = i(8966),
                        h = i(9819),
                        d = i(4053),
                        c = i(6602),
                        p = i(2125),
                        l = i(7294),
                        f = function() {
                            function t(t) {
                                this.mtdx = null, this.MTDX = null, this.constant = null, this.EVENT_NAME = n.EVENT_NAME, this.eventEmitter = n.default, this.HTTP = null, t.channelId || t.multiChannelIds ? (this.mtdx = new s.default(t), this.HTTP = this.mtdx.HTTP, this.constant = this.mtdx.CONSTANT, this._initManagers(this.mtdx), a.default.setInitOpts(t)) : console.error("初始化时缺少 channelId 或 multiChannelIds 参数，会导致 SDK 逻辑异常，已停止初始化，具体初始化参数见文档：https://developers.sankuai.com/mt/xm/dx-sdk-web/master/init/")
                            }
                            return t.getUuid = function() {
                                return d.default.next()
                            }, t.fromBase64ToMessage = function(t) {
                                return (new p.default.MsgHistoryRes).parserFromBuffer(l.default.b64toBA(t).buffer)
                            }, t.parseMessage = function(t) {
                                return c.default(t)
                            }, t.prototype._initManagers = function(t) {
                                var e = {
                                    configManager: a.default,
                                    vcardManager: o.default,
                                    sessionManager: r.default,
                                    messageManager: u.default,
                                    emoticonManager: h.default
                                };
                                for (var i in e) e[i].init(t), this[i] = e[i]
                            }, t
                        }();
                    e.default = f
                },
                3857: function(t, e, i) {
                    "use strict";
                    var s = this && this.__assign || function() {
                        return (s = Object.assign || function(t) {
                            for (var e, i = 1, s = arguments.length; i < s; i++)
                                for (var n in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                            return t
                        }).apply(this, arguments)
                    };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var n, a = i(4864),
                        o = i(5605),
                        r = i(9972);
                    n = i(8255).Z;
                    var u = function() {
                        function t() {
                            this.mtdx = {}, this._config = {}
                        }
                        return t.prototype.init = function(t) {
                            var e = this;
                            this.mtdx = t;
                            var i = o.LOGIN_EVENT.CONNECTING,
                                r = o.LOGIN_EVENT.CONNECTED,
                                u = o.LOGIN_EVENT.AUTHENTICATING,
                                h = o.LOGIN_EVENT.AUTH_SUCCESS,
                                d = o.LOGIN_EVENT.AUTH_FAIL,
                                c = o.LOGIN_EVENT.DISCONNECT;
                            this.mtdx.on(h, (function(t, i, o, r) {
                                void 0 === t && (t = ""), void 0 === i && (i = ""), void 0 === o && (o = ""), void 0 === r && (r = "");
                                var u = {
                                    uid: t,
                                    xsid: i,
                                    appId: o,
                                    altoken: r
                                };
                                e._config = s(s({}, e._config), u), n.initDB(t), a.default.emit(a.EVENT_NAME.AUTH_SUCCESS, u)
                            })), this.mtdx.on(d, (function(t) {
                                a.default.emit(a.EVENT_NAME.AUTH_FAIL, {
                                    rescode: t
                                })
                            })), this.mtdx.on("KickOff", (function() {
                                a.default.emit(a.EVENT_NAME.KICK_OFF)
                            })), this.mtdx.on("KickOffWithSameDeviceId", (function() {
                                a.default.emit(a.EVENT_NAME.KICK_OFF)
                            })), this.mtdx.on("Logout", (function() {
                                a.default.emit(a.EVENT_NAME.LOGOUT)
                            })), this.mtdx.on(i, (function() {
                                a.default.emit(a.EVENT_NAME.CONNECTING)
                            })), this.mtdx.on(r, (function() {
                                a.default.emit(a.EVENT_NAME.CONNECTED)
                            })), this.mtdx.on(u, (function() {
                                a.default.emit(a.EVENT_NAME.AUTHENTICATING)
                            })), this.mtdx.on(c, (function(t) {
                                a.default.emit(a.EVENT_NAME.DISCONNECT)
                            }))
                        }, t.prototype.setInitOpts = function(t) {
                            t.dt = t.dt || t.deviceType, this._config = t
                        }, t.prototype.getConfig = function() {
                            return this._config
                        }, t.prototype.loginWithPassport = function(t) {
                            var e = t.uid,
                                i = void 0 === e ? "" : e,
                                s = t.token,
                                n = void 0 === s ? "" : s,
                                a = t.supportMultiDevices,
                                o = void 0 !== a && a,
                                r = t.pushToken,
                                u = void 0 === r ? "" : r;
                            this.mtdx.login(i, n, o, u)
                        }, t.prototype.loginWithUid = function(t) {
                            var e = t.uid,
                                i = void 0 === e ? "" : e,
                                s = t.token,
                                n = void 0 === s ? "" : s,
                                a = t.supportMultiDevices,
                                o = void 0 !== a && a,
                                r = t.pushToken,
                                u = void 0 === r ? "" : r;
                            this.mtdx.loginWithUidAndToken(i, n, o, u)
                        }, t.prototype.loginWithVisitor = function(t) {
                            var e = t.uid,
                                i = void 0 === e ? "" : e,
                                s = t.token,
                                n = void 0 === s ? "" : s;
                            this.mtdx.loginWithVisitor(i, n)
                        }, t.prototype.getVisitorInfoAndLogin = function() {
                            this.mtdx.getVisitorInfoAndLogin()
                        }, t.prototype.logout = function() {
                            this.mtdx.logout()
                        }, t.prototype.reconnect = function() {
                            this.mtdx.reconnect()
                        }, t.prototype.setPushToken = function(t) {
                            var e = this,
                                i = t.uid,
                                s = void 0 === i ? "" : i,
                                n = t.appId,
                                a = void 0 === n ? 0 : n,
                                o = t.deviceModel,
                                u = void 0 === o ? "" : o,
                                h = t.pushToken,
                                d = void 0 === h ? "" : h;
                            return new r.default((function(t, i) {
                                e.mtdx.HTTP.Common.setPushToken({
                                    data: {
                                        u: s,
                                        ai: a,
                                        dm: u,
                                        tk: d
                                    },
                                    success: function(e) {
                                        0 === e.rescode ? t() : i(e)
                                    },
                                    fail: function(t) {
                                        i(t)
                                    }
                                })
                            }))
                        }, t.prototype.deletePushToken = function(t) {
                            var e = this,
                                i = t.uid,
                                s = void 0 === i ? "" : i,
                                n = t.appId,
                                a = void 0 === n ? 0 : n;
                            return new r.default((function(t, i) {
                                e.mtdx.HTTP.Common.deletePushToken({
                                    data: {
                                        u: s,
                                        ai: a
                                    },
                                    success: function(e) {
                                        0 === e.rescode ? t() : i(e)
                                    },
                                    fail: function(t) {
                                        i(t)
                                    }
                                })
                            }))
                        }, t
                    }();
                    e.default = new u
                },
                9819: function(t, e, i) {
                    "use strict";
                    var s = this && this.__assign || function() {
                        return (s = Object.assign || function(t) {
                            for (var e, i = 1, s = arguments.length; i < s; i++)
                                for (var n in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                            return t
                        }).apply(this, arguments)
                    };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var n = i(9972),
                        a = i(2359),
                        o = function() {
                            function t() {
                                this._emoticonMap = new a.default, this.mtdx = {}
                            }
                            return t.prototype.init = function(t) {
                                this.mtdx = t
                            }, t.prototype.saveEmoticonPackages = function(t) {
                                var e = this;
                                Object.keys(t).forEach((function(i) {
                                    var n = t[i];
                                    if (n && Object.keys(n).length > 0) {
                                        var o = new a.default,
                                            r = n.stickers.map((function(t) {
                                                return s(s({}, t), {
                                                    packageId: i,
                                                    packageName: n.name,
                                                    thumbURL: n.baseUrl + t.thumbMediaId,
                                                    primaryURL: n.baseUrl + t.primaryMediaId
                                                })
                                            }));
                                        r.forEach((function(t) {
                                            o.set(t.stickerId, t)
                                        }));
                                        var u = s(s({}, n), {
                                            iconURL: n.baseUrl + n.iconMediaId,
                                            stickers: r,
                                            stickersMap: o
                                        });
                                        e._emoticonMap.set(i, u)
                                    }
                                }))
                            }, t.prototype.fetchEmoticonPackages = function(t) {
                                var e = this;
                                return new n.default((function(i, s) {
                                    var n = {};
                                    t.forEach((function(t) {
                                        n[t] = {}
                                    })), e.mtdx.HTTP.Common.getEmoticonsPackages({
                                        data: {
                                            packages: n
                                        },
                                        success: function(n) {
                                            var a = n.rescode,
                                                o = n.data;
                                            0 === a && o.packages ? (e.saveEmoticonPackages(o.packages), i(t.map((function(t) {
                                                var i;
                                                return (i = {})[t] = e.getEmoticonPackage({
                                                    packageId: t
                                                }), i
                                            })))) : s(a, o)
                                        },
                                        error: function(t) {
                                            s(t)
                                        }
                                    })
                                }))
                            }, t.prototype.getEmoticonPackage = function(t) {
                                var e = t.packageId;
                                return this._emoticonMap.has(e) ? this._emoticonMap.get(e) : null
                            }, t.prototype.fetchEmoticonSticker = function(t) {
                                var e = this,
                                    i = t.packageId,
                                    a = t.stickerId;
                                return new n.default((function(t, n) {
                                    e.mtdx.HTTP.Common.getOneEmoticonsSticker({
                                        data: {
                                            packageId: i,
                                            stickerId: a
                                        },
                                        success: function(e) {
                                            var a = e.rescode,
                                                o = e.data;
                                            if (0 === a && o.package) {
                                                var r = o.package;
                                                t(s(s({}, r), {
                                                    iconURL: r.baseUrl + r.iconMediaId,
                                                    sticker: s(s({}, r.sticker), {
                                                        packageId: i,
                                                        packageName: r.name
                                                    })
                                                }))
                                            } else n({
                                                rescode: a,
                                                data: o
                                            })
                                        },
                                        error: function(t) {
                                            n(t)
                                        }
                                    })
                                }))
                            }, t.prototype.getEmoticonSticker = function(t) {
                                var e = t.packageId,
                                    i = t.stickerId,
                                    n = this._emoticonMap.get(e);
                                if (n && n.stickersMap.has(i)) {
                                    var a = s({}, this._emoticonMap.get(e));
                                    return delete a.stickers, delete a.stickersMap, delete a.ver, s(s({}, a), {
                                        sticker: n.stickersMap.get(i)
                                    })
                                }
                                return null
                            }, t
                        }();
                    e.default = new o
                },
                8966: function(t, e, i) {
                    "use strict";
                    var s = this && this.__assign || function() {
                            return (s = Object.assign || function(t) {
                                for (var e, i = 1, s = arguments.length; i < s; i++)
                                    for (var n in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                                return t
                            }).apply(this, arguments)
                        },
                        n = this && this.__spreadArrays || function() {
                            for (var t = 0, e = 0, i = arguments.length; e < i; e++) t += arguments[e].length;
                            var s = Array(t),
                                n = 0;
                            for (e = 0; e < i; e++)
                                for (var a = arguments[e], o = 0, r = a.length; o < r; o++, n++) s[n] = a[o];
                            return s
                        };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var a = i(8194),
                        o = i(7349),
                        r = i(8326),
                        u = i(4864),
                        h = i(2359),
                        d = i(4461),
                        c = i(9009),
                        p = i(6602),
                        l = i(903),
                        f = i(1581),
                        _ = i(1938),
                        g = i(1299),
                        m = i(5605),
                        S = i(9972),
                        I = i(5678),
                        T = i(9645),
                        v = i(3857),
                        E = "9223372036854775807",
                        y = function() {
                            function t() {
                                var t = this;
                                this._shouldReceiveMessage = !0, this.mtdx = {}, this._messageMap = new h.default, this._queueMap = new h.default, this._timeoutMessageMap = new h.default, this._cancelMessageMap = new h.default, this._oppositeReadMap = new h.default, u.default.on(u.EVENT_NAME.AUTH_SUCCESS, (function() {
                                    t.deleteAllMessages()
                                }))
                            }
                            return t.prototype.init = function(t) {
                                var e = this;
                                this.mtdx = t;
                                var i = m.LOGIN_EVENT.AUTH_SUCCESS,
                                    s = m.MESSAGE_EVENT.MESSAGE,
                                    n = m.MESSAGE_EVENT.ACK,
                                    a = m.MESSAGE_EVENT.NOTICE,
                                    o = m.MESSAGE_EVENT.OPPOSITE_READ,
                                    r = m.MESSAGE_EVENT.OPPOSITE_READ_ACK,
                                    h = m.MESSAGE_EVENT.PUB_OPPOSITE_READ,
                                    d = m.MESSAGE_EVENT.PUB_OPPOSITE_READ_ACK,
                                    c = m.MESSAGE_EVENT.RECEIPT_GROUP_MESSAGE,
                                    p = m.MESSAGE_EVENT.RECEIPT_GROUP_MESSAGE_ACK;
                                this.mtdx.on(i, (function() {
                                    e._shouldReceiveMessage = !0
                                })), this.mtdx.on(s, (function(t) {
                                    if (e._shouldReceiveMessage)
                                        if (t.data) u.default.emit(u.EVENT_NAME.DATA_MESSAGE, {
                                            message: l.default(t)
                                        });
                                        else if (t.priority) u.default.emit(s, {
                                        message: t
                                    });
                                    else {
                                        t.status = T.Message.STATUS.STATUS_ACK;
                                        var i = e.createMessage(t);
                                        if (!i) return console.log("收到SDK不处理消息", t), void u.default.emit(s, {
                                            message: t
                                        });
                                        i.isTTMessage ? u.default.emit(u.EVENT_NAME.MESSAGE, {
                                            message: i
                                        }) : e.hasLocalMessageInArray(i) ? console.log("消息已经存在") : (i.isCancel ? (i.setMessageToCanceled(), e.putCancelMessageInMap(i)) : e.putMessagesInMap(i.belongTo, i.channelId, [i]), u.default.emit(u.EVENT_NAME.MESSAGE, {
                                            message: i
                                        }, !0))
                                    }
                                })), this.mtdx.on(n, (function(t) {
                                    switch (t.uri) {
                                        case _.default.IM.URI_IM_CANCEL_MSG_RES:
                                        case _.default.IM.URI_IM_CANCEL_GROUP_MSG_RES:
                                        case g.default.PUB.URI_PUB_CANCEL_MSG_RES:
                                            e._ackCancelMessage(t);
                                            break;
                                        default:
                                            e._ackMessage(t)
                                    }
                                })), this.mtdx.on(a, (function(t) {
                                    var i = t.toGuid,
                                        s = t.channel,
                                        n = t.type,
                                        a = t.data;
                                    n === m.GROUP_NOTICE_TYPE.DELETE && e.hasLocalMessages(i, s) && e.saveMessages({
                                        uid: i,
                                        channelId: s,
                                        messages: []
                                    }), u.default.emit(u.EVENT_NAME.NOTICE, {
                                        toGuid: i,
                                        channelId: s,
                                        type: n,
                                        data: a
                                    })
                                })), this.mtdx.on(o, (function(t) {
                                    var e = t.uid,
                                        i = t.deviceType,
                                        s = t.syncReadItems;
                                    u.default.emit(u.EVENT_NAME.OPPOSITE_READ, {
                                        uid: e,
                                        deviceType: i,
                                        items: s.map((function(t) {
                                            return {
                                                chatId: t.chatId,
                                                type: t.type,
                                                peerAppId: t.peerAppId,
                                                channelId: t.channel,
                                                mids: t.msgIds
                                            }
                                        }))
                                    })
                                })), this.mtdx.on(r, (function(t) {
                                    var i = t.msgUuid;
                                    e._oppositeReadMap.has(i) && u.default.emit(u.EVENT_NAME.OPPOSITE_READ_ACK, {
                                        uuid: i
                                    })
                                })), this.mtdx.on(h, (function(t) {
                                    var e = t.uid,
                                        i = t.oppositeUuid,
                                        s = t.deviceType,
                                        n = t.syncReadItems;
                                    u.default.emit(u.EVENT_NAME.PUB_OPPOSITE_READ, {
                                        uid: e,
                                        oppositeUuid: i,
                                        deviceType: s,
                                        items: n.map((function(t) {
                                            var e = t.chatId,
                                                i = t.peerUid,
                                                s = t.peerAppId,
                                                n = t.type,
                                                a = t.channel,
                                                o = t.sts;
                                            return {
                                                chatId: e,
                                                peerUid: i,
                                                peerAppId: s,
                                                type: 1 === n ? m.SESSION_TYPE.PUB_CHAT : m.SESSION_TYPE.CS_CHAT,
                                                channelId: a,
                                                sts: parseInt(o)
                                            }
                                        }))
                                    })
                                })), this.mtdx.on(d, (function(t) {
                                    var i = t.oppositeUuid;
                                    e._oppositeReadMap.has(i) && u.default.emit(u.EVENT_NAME.PUB_OPPOSITE_READ_ACK, {
                                        uuid: i
                                    })
                                })), this.mtdx.on(p, (function(t) {
                                    var e = t.receiptUuid,
                                        i = void 0 === e ? "" : e,
                                        s = t.deviceType,
                                        n = void 0 === s ? 0 : s,
                                        a = t.cts,
                                        o = void 0 === a ? "" : a,
                                        r = t.items,
                                        h = void 0 === r ? [] : r;
                                    h && h.length > 0 && u.default.emit(u.EVENT_NAME.RECEIPT_GROUP_MESSAGE, {
                                        uuid: i,
                                        deviceType: n,
                                        cts: o,
                                        items: h.map((function(t) {
                                            return {
                                                uuid: t.msgUuid,
                                                toUid: t.toUid,
                                                mid: t.msgId
                                            }
                                        }))
                                    })
                                })), this.mtdx.on(c, (function(t) {
                                    var e = t.receiptUuid,
                                        i = void 0 === e ? "" : e,
                                        s = t.fromUid,
                                        n = void 0 === s ? "" : s,
                                        a = t.toGuid,
                                        o = void 0 === a ? "" : a,
                                        r = t.channel,
                                        h = void 0 === r ? 0 : r,
                                        d = t.cts,
                                        c = void 0 === d ? "" : d,
                                        p = t.deviceType,
                                        l = void 0 === p ? 0 : p,
                                        f = t.items;
                                    u.default.emit(u.EVENT_NAME.RECEIPT_GROUP_MESSAGE, {
                                        uuid: i,
                                        fromUid: n,
                                        toGuid: o,
                                        channelId: h,
                                        cts: c,
                                        deviceType: l,
                                        items: f.map((function(t) {
                                            return {
                                                uuid: t.msgUuid,
                                                toUid: t.toUid,
                                                mid: t.msgId
                                            }
                                        }))
                                    })
                                }))
                            }, t.prototype.clearAllMessages = function() {
                                this._messageMap = new h.default, this._queueMap = new h.default, this._timeoutMessageMap = new h.default, this._cancelMessageMap = new h.default, this._oppositeReadMap = new h.default
                            }, t.prototype.createMessage = function(t) {
                                return p.default(t)
                            }, t.prototype.hasLocalMessageInArray = function(t) {
                                return this.getMessages(t.belongTo, t.channelId).filter((function(e) {
                                    return !(e.uuid !== t.uuid || e.mid !== t.mid || !e.isCancel && t.isCancel)
                                })).length > 0
                            }, t.prototype.hasLocalMessages = function(t, e) {
                                void 0 === t && (t = ""), void 0 === e && (e = I.default.get("channelId"));
                                var i = f.default.create({
                                    uid: t,
                                    channelId: e
                                });
                                return this._messageMap.has(i)
                            }, t.prototype.getMessages = function(t, e) {
                                void 0 === t && (t = ""), void 0 === e && (e = I.default.get("channelId"));
                                var i = [];
                                if (this.hasLocalMessages(t, e)) {
                                    var s = f.default.create({
                                        uid: t,
                                        channelId: e
                                    });
                                    i = n(this._messageMap.get(s))
                                }
                                return i
                            }, t.prototype.deleteMessages = function(t, e) {
                                if (void 0 === t && (t = ""), void 0 === e && (e = I.default.get("channelId")), this.hasLocalMessages(t, e)) {
                                    var i = f.default.create({
                                        uid: t,
                                        channelId: e
                                    });
                                    return this._messageMap.delete(i)
                                }
                                return !1
                            }, t.prototype.deleteAllMessages = function() {
                                this._messageMap = new h.default
                            }, t.prototype.neatenMessage = function(t, e) {
                                void 0 === t && (t = ""), void 0 === e && (e = I.default.get("channelId")), console.error("neatenMessage 已废弃")
                            }, t.prototype.getLastMessage = function(t, e) {
                                if (void 0 === t && (t = ""), void 0 === e && (e = I.default.get("channelId")), this.hasLocalMessages(t, e)) {
                                    var i = this.getMessages(t, e);
                                    return i[i.length - 1]
                                }
                                return null
                            }, t.prototype.getFirstMidMessage = function(t, e) {
                                if (void 0 === t && (t = ""), void 0 === e && (e = I.default.get("channelId")), this.hasLocalMessages(t, e)) {
                                    var i = this.getMessages(t, e),
                                        s = null;
                                    return i.forEach((function(t) {
                                        !t.isLocal && t.mid && (!s || s && t.svrTime < s.svrTime) && (s = t)
                                    })), s || null
                                }
                                return null
                            }, t.prototype.getLastMidMessage = function(t, e) {
                                if (void 0 === t && (t = ""), void 0 === e && (e = I.default.get("channelId")), this.hasLocalMessages(t, e)) {
                                    var i = this.getMessages(t, e),
                                        s = i[0];
                                    return i.forEach((function(t) {
                                        t.svrTime >
                                            s.svrTime && (s = t)
                                    })), s
                                }
                                return null
                            }, t.prototype.hasQueueMessage = function(t) {
                                return void 0 === t && (t = ""), this._queueMap.has(t)
                            }, t.prototype.getQueueMessage = function(t) {
                                return void 0 === t && (t = ""), this._queueMap.has(t) ? this._queueMap.get(t) : null
                            }, t.prototype.putMessageInQueue = function(t) {
                                this._queueMap.set(t.uuid, t)
                            }, t.prototype.deleteQueueMessage = function(t) {
                                return void 0 === t && (t = ""), !!this._queueMap.has(t) && this._queueMap.delete(t)
                            }, t.prototype.getTimeoutMessage = function(t) {
                                return void 0 === t && (t = ""), this._timeoutMessageMap.has(t) ? this._timeoutMessageMap.get(t) : null
                            }, t.prototype.putMessageInTimeoutMap = function(t) {
                                this._timeoutMessageMap.set(t.uuid, t)
                            }, t.prototype.deleteTimeoutMessage = function(t) {
                                return void 0 === t && (t = ""), !!this._timeoutMessageMap.has(t) && this._timeoutMessageMap.delete(t)
                            }, t.prototype.putMessagesInMap = function(t, e, i, s) {
                                if (void 0 === t && (t = ""), void 0 === e && (e = I.default.get("channelId")), void 0 === i && (i = []), void 0 === s && (s = m.MESSAGE_SOURCE.ONLINE), i.length > 0) {
                                    var n = this.getMessages(t, e),
                                        a = new h.default;
                                    n.forEach((function(t) {
                                        a.set(t.uuid, t)
                                    })), i.forEach((function(t) {
                                        t && a.set(t.uuid, t)
                                    })), this.saveMessages({
                                        uid: t,
                                        channelId: e,
                                        messages: this.sortMessage(a.values()),
                                        fromSource: s
                                    })
                                } else this.saveMessages({
                                    uid: t,
                                    channelId: e,
                                    messages: this.getMessages(t, e)
                                })
                            }, t.prototype.putCancelMessageInMap = function(t) {
                                for (var e = t.belongTo, i = t.channelId, s = this.getMessages(e, i), n = -1, a = 0; a <
                                    s.length; a++) {
                                    if (s[a].mid === t.mid) {
                                        n = a;
                                        break
                                    }
                                }
                                n > = 0 && (s[n] = t), this.saveMessages({
                                    uid: e,
                                    channelId: i,
                                    messages: s,
                                    needNotice: !0,
                                    fromSource: m.MESSAGE_SOURCE.ONLINE
                                })
                            }, t.prototype.sendMessage = function(t) {
                                var e = this,
                                    i = t.uuid,
                                    n = o.default(s(s({}, t), {
                                        from: v.default.getConfig().uid
                                    }));
                                switch (i && (n.msgUuid = i), t.sessionType) {
                                    case T.Session.TYPE.CHAT:
                                    case T.Session.TYPE.GROUP_CHAT:
                                        this.mtdx.imSDK.send(n);
                                        break;
                                    case T.Session.TYPE.PUB_CHAT:
                                    case T.Session.TYPE.CS_CHAT:
                                        this.mtdx.pubSDK.send(n)
                                }
                                var a = p.default(s(s({}, n), {
                                    status: T.Message.STATUS.STATUS_SENT
                                }));
                                return this.putMessageInQueue(a), this.putMessagesInMap(a.belongTo, a.channelId, [a]), setTimeout((function() {
                                    e.checkSentMessageStatus(a.uuid)
                                }), 5e3), u.default.emit(u.EVENT_NAME.MESSAGE, {
                                    message: a
                                }), a
                            }, t.prototype.sendPubTTMessage = function(t) {
                                var e = r.default(s(s({}, t), {
                                    from: v.default.getConfig().uid
                                }));
                                return this.mtdx.pubSDK.send(e), p.default(e)
                            }, t.prototype.sendCancelMessage = function(t) {
                                var e = a.default(s(s({}, t), {
                                    from: v.default.getConfig().uid
                                }));
                                switch (t.sessionType) {
                                    case T.Session.TYPE.CHAT:
                                    case T.Session.TYPE.GROUP_CHAT:
                                        this.mtdx.imSDK.send(e);
                                        break;
                                    case T.Session.TYPE.PUB_CHAT:
                                    case T.Session.TYPE.CS_CHAT:
                                        this.mtdx.pubSDK.send(e)
                                }
                                var i = p.default(e);
                                return this._cancelMessageMap.set(i.mid, i), this.putCancelMessageInMap(i), u.default.emit(u.EVENT_NAME.MESSAGE, {
                                    message: i
                                }), i
                            }, t.prototype.addFakeMessage = function(t) {
                                var e = o.default(t),
                                    i = p.default(s(s({}, e), {
                                        status: T.Message.STATUS.STATUS_ACK,
                                        isLocal: !0
                                    }));
                                i.svrTime = i.time, this.putMessagesInMap(i.belongTo, i.channelId, [i], m.MESSAGE_SOURCE.LOCAL), u.default.emit(u.EVENT_NAME.ADD_FAKE_MESSAGE, {
                                    message: i
                                })
                            }, t.prototype.checkSentMessageStatus = function(t) {
                                if (void 0 === t && (t = ""), this.hasQueueMessage(t)) {
                                    var e = this.getQueueMessage(t);
                                    e.status = T.Message.STATUS.STATUS_TIMEOUT, this.deleteQueueMessage(t), this.putMessageInTimeoutMap(e), this.putMessagesInMap(e.belongTo, e.channel, [e])
                                }
                            }, t.prototype.resendMessage = function(t) {
                                void 0 === t && (t = "");
                                var e = this.getTimeoutMessage(t);
                                return !!e && this.sendMessage(e)
                            }, t.prototype.saveMessages = function(t) {
                                var e = t.uid,
                                    i = t.channelId,
                                    s = void 0 === i ? I.default.get("channelId") : i,
                                    n = t.messages,
                                    a = void 0 === n ? [] : n,
                                    o = t.needNotice,
                                    r = void 0 === o || o,
                                    h = t.fromSource,
                                    d = void 0 === h ? m.MESSAGE_SOURCE.ONLINE : h,
                                    c = f.default.create({
                                        uid: e,
                                        channelId: s
                                    });
                                this._messageMap.set(c, a), a.length > 0 && r && u.default.emit(u.EVENT_NAME.UPDATE_MESSAGES, {
                                    uid: e,
                                    channelId: s,
                                    messages: a,
                                    fromSource: d
                                })
                            }, t.prototype.sortMessage = function(t) {
                                return void 0 === t && (t = []), t.length > 0 ? d.default.sort(t) : []
                            }, t.prototype._ackMessage = function(t) {
                                var e = t.rescode,
                                    i = t.msgUuid,
                                    s = t.msgId,
                                    n = (t.cts, t.seqId),
                                    a = this.mtdx.CONSTANT.RES_FORBIDDEN_GIM_CHAT,
                                    o = this.getQueueMessage(i);
                                if (o) {
                                    switch (e) {
                                        case 0:
                                            o.status = T.Message.STATUS.STATUS_ACK;
                                            break;
                                        case a:
                                            o.status = T.Message.STATUS.STATUS_SEND_FORBIDDEN;
                                            break;
                                        default:
                                            o.status = T.Message.STATUS.STATUS_SEND_ERR
                                    }
                                    n && o.setSeqId(n), s && "0" !== s && o.setMid(s), this.deleteQueueMessage(i), this.putMessagesInMap(o.belongTo, o.channelId, [o]), u.default.emit(u.EVENT_NAME.MESSAGE, {
                                        message: o
                                    }, !0)
                                }
                            }, t.prototype._ackCancelMessage = function(t) {
                                var e = t.rescode,
                                    i = t.msgId.value(),
                                    s = this._cancelMessageMap.get(i);
                                0 === e && (s.setMessageToCanceled(), this.putCancelMessageInMap(s))
                            }, t.prototype.fetchHistoryMessagesByOrder = function(t) {
                                var e = t.uid,
                                    i = t.type,
                                    s = t.channelId,
                                    n = t.limit,
                                    a = void 0 === n ? 20 : n,
                                    o = this.getFirstMidMessage(e, s);
                                return this.fetchHistoryMessages({
                                    uid: e,
                                    type: i,
                                    channelId: s,
                                    mid: o ? o.mid : E,
                                    limit: a
                                })
                            }, t.prototype.fetchHistoryMessagesByTimeOnly = function(t) {
                                var e = t.uid,
                                    i = void 0 === e ? "" : e,
                                    s = t.type,
                                    n = void 0 === s ? m.SESSION_TYPE.CHAT : s,
                                    a = t.channelId,
                                    o = void 0 === a ? 0 : a,
                                    r = t.startTime,
                                    u = void 0 === r ? 0 : r,
                                    h = t.endTime,
                                    d = void 0 === h ? Date.now() : h,
                                    c = t.limit,
                                    p = void 0 === c ? 20 : c,
                                    l = {};
                                switch (n) {
                                    case m.SESSION_TYPE.CHAT:
                                        l = {
                                            b: i,
                                            ai: I.default.get("appId"),
                                            chid: o,
                                            st: u,
                                            et: d,
                                            g: 0
                                        };
                                        break;
                                    case m.SESSION_TYPE.GROUP_CHAT:
                                        l = {
                                            b: i,
                                            ai: I.default.get("appId"),
                                            chid: o,
                                            st: u,
                                            et: d,
                                            g: 1
                                        };
                                        break;
                                    case m.SESSION_TYPE.PUB_CHAT:
                                        l = {
                                            u: i,
                                            st: u,
                                            et: d
                                        };
                                        break;
                                    case m.SESSION_TYPE.CS_CHAT:
                                        var _ = i.split("_");
                                        l = {
                                            u: _[0],
                                            pu: _[1],
                                            st: u,
                                            et: d
                                        }
                                }
                                return this.fetchMultiSessionsHistoryMessagesByTimeRange({
                                    type: n,
                                    limit: p,
                                    sessionDataArray: [l],
                                    shouldUpdateMessageMap: !1
                                }).then((function(t) {
                                    return {
                                        messages: t[f.default.create({
                                            uid: i,
                                            channelId: o
                                        })]
                                    }
                                }))
                            }, t.prototype.fetchHistoryMessages = function(t) {
                                var e = this,
                                    i = t.uid,
                                    s = t.type,
                                    n = t.channelId,
                                    a = t.mid,
                                    o = void 0 === a ? E : a,
                                    r = t.limit,
                                    u = void 0 === r ? 20 : r;
                                return new S.default((function(t, a) {
                                    var r = v.default.getConfig().appId,
                                        h = {
                                            data: {
                                                lm: u,
                                                ai: r,
                                                od: 0,
                                                pl: 1
                                            },
                                            success: function(i) {
                                                var s = i.rescode,
                                                    n = i.data;
                                                if (0 !== s) return a({
                                                    code: s,
                                                    message: n.message
                                                });
                                                t({
                                                    msgs: e.parseHistoryRes(n.res),
                                                    next: n.next
                                                })
                                            },
                                            error: function(t, e, i) {
                                                return a({
                                                    code: 500,
                                                    message: e + ":" + i
                                                })
                                            }
                                        };
                                    switch (s) {
                                        case m.SESSION_TYPE.CHAT:
                                            h.data.bs = [{
                                                b: i,
                                                ai: r,
                                                g: 0,
                                                chid: n,
                                                msgidS: 0,
                                                msgidB: o
                                            }], e.mtdx.HTTP.Msg.historyOfChannelByRange(h);
                                            break;
                                        case m.SESSION_TYPE.GROUP_CHAT:
                                            h.data.bs = [{
                                                b: i,
                                                ai: r,
                                                g: 1,
                                                chid: n,
                                                msgidS: 0,
                                                msgidB: o
                                            }], e.mtdx.HTTP.Msg.historyOfChannelByRange(h);
                                            break;
                                        case m.SESSION_TYPE.PUB_CHAT:
                                            h.data.ps = [{
                                                u: i,
                                                pu: 0,
                                                chid: n,
                                                msgidS: 0,
                                                msgidB: o
                                            }], e.mtdx.HTTP.Pub.historyOfChannelByRange(h);
                                            break;
                                        case m.SESSION_TYPE.CS_CHAT:
                                            var d = i.split("_"),
                                                c = d[0],
                                                p = d[1];
                                            h.data.ps = [{
                                                u: c,
                                                pu: p,
                                                chid: n,
                                                msgidS: 0,
                                                msgidB: o
                                            }], e.mtdx.HTTP.Pub.historyOfChannelByRange(h)
                                    }
                                })).then((function(t) {
                                    return e.putMessagesInMap(i, n, t.msgs, m.MESSAGE_SOURCE.HISTORY), t
                                }))
                            }, t.prototype.fetchLatterMessages = function(t) {
                                var e = this,
                                    i = t.uid,
                                    s = t.type,
                                    n = t.channelId,
                                    a = t.mid,
                                    o = void 0 === a ? E : a,
                                    r = t.limit,
                                    u = void 0 === r ? 20 : r;
                                return new S.default((function(t, a) {
                                    var r = v.default.getConfig().appId,
                                        h = {
                                            data: {
                                                lm: u,
                                                ai: r,
                                                pl: 1
                                            },
                                            success: function(i) {
                                                var s = i.rescode,
                                                    n = i.data;
                                                if (0 !== s) return a({
                                                    code: s,
                                                    message: n.message
                                                });
                                                t({
                                                    msgs: e.parseHistoryRes(n.res),
                                                    next: n.next
                                                })
                                            },
                                            error: function(t, e, i) {
                                                return a({
                                                    code: 500,
                                                    message: e + ":" + i
                                                })
                                            }
                                        };
                                    switch (s) {
                                        case m.SESSION_TYPE.CHAT:
                                        case m.SESSION_TYPE.GROUP_CHAT:
                                            a({
                                                code: -1,
                                                message: "暂不支持该会话类型"
                                            });
                                            break;
                                        case m.SESSION_TYPE.CS_CHAT:
                                            var d = i.split("_"),
                                                c = [{
                                                    u: d[0],
                                                    pu: d[1],
                                                    chid: n,
                                                    msgidS: o
                                                }];
                                            h.data.ps = c, e.mtdx.HTTP.Pub.historyReverseOfChannelByRange(h);
                                            break;
                                        case m.SESSION_TYPE.PUB_CHAT:
                                            c = [{
                                                u: i,
                                                pu: 0,
                                                chid: n,
                                                msgidS: o
                                            }];
                                            h.data.ps = c, e.mtdx.HTTP.Pub.historyReverseOfChannelByRange(h)
                                    }
                                })).then((function(t) {
                                    return e.putMessagesInMap(i, n, t.msgs, m.MESSAGE_SOURCE.HISTORY), t
                                }))
                            }, t.prototype.parseHistoryRes = function(t) {
                                var e = [];
                                return t.forEach((function(t) {
                                    t.msgs.forEach((function(t) {
                                        -1 !== t.type && t.msgId && e.push(p.default(s(s({}, t), {
                                            status: T.Message.STATUS.STATUS_ACK
                                        })))
                                    }))
                                })), e
                            }, t.prototype.sendOppositeRead = function(t) {
                                var e = t.uid,
                                    i = t.type,
                                    s = void 0 === i ? T.Session.TYPE.CHAT : i,
                                    n = t.peerAppId,
                                    a = t.channelId,
                                    o = t.mids,
                                    r = void 0 === o ? [] : o;
                                if (e) {
                                    var u = c.default.createChatOppositeRead({
                                        myUid: v.default.getConfig().uid,
                                        data: {
                                            uid: e,
                                            type: s === T.Session.TYPE.CHAT ? 1 : 2,
                                            peerAppId: n,
                                            channelId: a,
                                            mids: r
                                        }
                                    });
                                    return this.mtdx.imSDK.send(u), this._oppositeReadMap.set(u.msgUuid, !0), u
                                }
                            }, t.prototype.getOppositeConfig = function(t) {
                                var e = this,
                                    i = t.tenant;
                                return new S.default((function(t, s) {
                                    e.mtdx.HTTP.Msg.getOppositeConfig({
                                        data: {
                                            tenant: i
                                        },
                                        success: function(e) {
                                            var i = e.rescode,
                                                n = e.data;
                                            0 === i ? t(n) : s(i)
                                        },
                                        error: function(t) {
                                            s(t)
                                        }
                                    })
                                }))
                            }, t.prototype.getBothOppositeUnreadMsg = function(t) {
                                var e = this,
                                    i = t.buddy,
                                    s = t.channelId,
                                    n = t.svid,
                                    a = void 0 === n ? 401 : n,
                                    o = t.smsgids,
                                    r = void 0 === o ? [] : o,
                                    u = t.bmsgids,
                                    h = void 0 === u ? [] : u;
                                return new S.default((function(t, n) {
                                    e.mtdx.HTTP.Msg.getBothOppositeUnreadMsg({
                                        data: {
                                            buddy: i,
                                            channel: s,
                                            svid: a,
                                            smsgids: r,
                                            bmsgids: h
                                        },
                                        success: function(e) {
                                            var i = e.rescode,
                                                s = e.data;
                                            0 === i ? t({
                                                selfUnread: s.selfUnreadStr,
                                                oppoUnread: s.oppoUnreadStr
                                            }) : n(i)
                                        },
                                        error: function(t) {
                                            n(t)
                                        }
                                    })
                                }))
                            }, t.prototype.getChannelBothOppositeUnreadMsg = function(t) {
                                var e = this,
                                    i = t.buddy,
                                    s = t.channelId,
                                    n = t.svid,
                                    a = void 0 === n ? 401 : n,
                                    o = t.smsgids,
                                    r = void 0 === o ? [] : o,
                                    u = t.bmsgids,
                                    h = void 0 === u ? [] : u;
                                return new S.default((function(t, n) {
                                    e.mtdx.HTTP.Msg.getChannelBothOppositeUnreadMsg({
                                        data: {
                                            buddy: i,
                                            channel: s,
                                            svid: a,
                                            smsgids: r,
                                            bmsgids: h
                                        },
                                        success: function(e) {
                                            var i = e.rescode,
                                                s = e.data;
                                            0 === i ? t(s) : n(i)
                                        },
                                        error: function(t) {
                                            n(t)
                                        }
                                    })
                                }))
                            }, t.prototype.sendPubOppositeRead = function(t) {
                                var e = t.uid,
                                    i = void 0 === e ? "0" : e,
                                    s = t.peerUid,
                                    n = void 0 === s ? "0" : s,
                                    a = t.type,
                                    o = void 0 === a ? T.Session.TYPE.PUB_CHAT : a,
                                    r = t.peerAppId,
                                    u = void 0 === r ? 0 : r,
                                    h = t.channelId,
                                    d = void 0 === h ? 0 : h,
                                    p = t.sts,
                                    l = void 0 === p ? 0 : p;
                                if (i) {
                                    var f = c.default.createPubOppositeRead({
                                        myUid: v.default.getConfig().uid,
                                        data: {
                                            uid: i,
                                            peerUid: n,
                                            type: o === T.Session.TYPE.PUB_CHAT ? 1 : 2,
                                            peerAppId: u,
                                            channelId: d,
                                            sts: l
                                        }
                                    });
                                    return this.mtdx.pubSDK.send(f), this._oppositeReadMap.set(f.oppositeUuid, !0), f
                                }
                            }, t.prototype.getPubOppositeConfig = function() {
                                var t = this;
                                return new S.default((function(e, i) {
                                    t.mtdx.HTTP.Pub.getOppositeConfig({
                                        success: function(t) {
                                            var s = t.rescode,
                                                n = t.data;
                                            0 === s ? e(n) : i(s)
                                        },
                                        error: function(t) {
                                            i(t)
                                        }
                                    })
                                }))
                            }, t.prototype.getPubOppositeReadTime = function(t) {
                                var e = this,
                                    i = t.chatIds,
                                    s = void 0 === i ? [] : i,
                                    n = t.channelId,
                                    a = void 0 === n ? 0 : n,
                                    o = t.startTime;
                                return new S.default((function(t, i) {
                                    e.mtdx.HTTP.Pub.getOppositeReadTime({
                                        data: {
                                            chatIds: s.map((function(t) {
                                                return t.chatId && !t.peerUid ? {
                                                    chatId: t.chatId,
                                                    peerUid: "0"
                                                } : t
                                            })).filter((function(t) {
                                                return t.chatId && t.peerUid
                                            })),
                                            channelId: a,
                                            startTime: o
                                        },
                                        success: function(e) {
                                            var s = e.rescode,
                                                n = e.data;
                                            0 === s ? t(n) : i(s)
                                        },
                                        error: function(t) {
                                            i(t)
                                        }
                                    })
                                }))
                            }, t.prototype.fetchIMRemoteMessagesByTime = function(t) {
                                var e = this,
                                    i = t.startTime,
                                    s = void 0 === i ? Date.now() - 1296e6 : i,
                                    n = t.endTime,
                                    a = void 0 === n ? "9223372036854775807" : n;
                                return new S.default((function(t, i) {
                                    e.mtdx.HTTP.Msg.chatlistByTime({
                                        data: {
                                            ai: I.default.get("appId"),
                                            st: s,
                                            et: a,
                                            lm: 200,
                                            pl: 1
                                        },
                                        success: function(i) {
                                            var s = i.rescode,
                                                n = i.data,
                                                a = [];
                                            0 === s && (a = e._parseIMRemoteMsgs(n.res)), t({
                                                IMRemoteMessages: a.reverse(),
                                                next: n.next
                                            })
                                        },
                                        error: function(t) {
                                            i(t)
                                        }
                                    })
                                }))
                            }, t.prototype._parseIMRemoteMsgs = function(t) {
                                var e = [];
                                return t && t.forEach((function(t) {
                                    t.msgs && t.msgs.forEach((function(t) {
                                        -1 !== t.type && t.msgId && e.push(p.default(s(s({}, t), {
                                            status: T.Message.STATUS.STATUS_ACK
                                        })))
                                    }))
                                })), e
                            }, t.prototype.fetchPubRemoteMessagesByTime = function(t) {
                                var e = this,
                                    i = t.startTime,
                                    s = void 0 === i ? Date.now() - 1296e6 : i,
                                    n = t.endTime,
                                    a = void 0 === n ? "9223372036854775807" : n;
                                return new S.default((function(t, i) {
                                    e.mtdx.HTTP.Pub.chatlistByTime({
                                        data: {
                                            st: s,
                                            et: a,
                                            lm: 200,
                                            pl: 1
                                        },
                                        success: function(i) {
                                            var s = new h.default,
                                                n = [];
                                            i && 0 === i.rescode && (n = e._parsePubRemoteMsgs(i.data.res)), n.forEach((function(t) {
                                                var e = f.default.create({
                                                    uid: t.belongTo,
                                                    channelId: t.channelId
                                                });
                                                (!s.has(e) || s.get(e).svrTime <
                                                    t.svrTime) && s.set(e, t)
                                            })), t({
                                                PubRemoteMessages: s.values(),
                                                next: i.data.next
                                            })
                                        },
                                        error: function(t) {
                                            i(t)
                                        }
                                    })
                                }))
                            }, t.prototype._parsePubRemoteMsgs = function(t) {
                                var e = [];
                                return t && t.forEach((function(t) {
                                    t.msgs && t.msgs.forEach((function(t) {
                                        -1 !== t.type && t.msgId && e.push(p.default(s(s({}, t), {
                                            status: T.Message.STATUS.STATUS_ACK
                                        })))
                                    }))
                                })), e
                            }, t.prototype.fetchMultiSessionsHistoryMessagesByTimeRange = function(t) {
                                var e = this,
                                    i = t.type,
                                    s = void 0 === i ? m.SESSION_TYPE.CHAT : i,
                                    n = t.limit,
                                    a = void 0 === n ? 20 : n,
                                    o = t.sessionDataArray,
                                    r = void 0 === o ? [] : o,
                                    u = t.shouldUpdateMessageMap,
                                    h = void 0 === u || u;
                                return new S.default((function(t, i) {
                                    var n = {
                                        data: {
                                            u: I.default.get("uid"),
                                            ai: I.default.get("appId"),
                                            lm: a,
                                            od: 1
                                        },
                                        success: function(s) {
                                            var n = s.rescode,
                                                a = s.data;
                                            if (0 !== n) return i({
                                                code: n,
                                                message: a.message
                                            });
                                            t({
                                                msgs: e.parseHistoryRes(a.res),
                                                next: a.next
                                            })
                                        },
                                        error: function(t, e, s) {
                                            return i({
                                                code: 500,
                                                err: t,
                                                message: e + ":" + s
                                            })
                                        }
                                    };
                                    switch (s) {
                                        case m.SESSION_TYPE.CHAT:
                                        case m.SESSION_TYPE.GROUP_CHAT:
                                            n.data.bs = r, e.mtdx.HTTP.Msg.historyOfChannelByRange(n);
                                            break;
                                        case m.SESSION_TYPE.PUB_CHAT:
                                        case m.SESSION_TYPE.CS_CHAT:
                                            n.data.ps = r, e.mtdx.HTTP.Pub.historyOfChannelByRange(n)
                                    }
                                })).then((function(t) {
                                    var i = {};
                                    for (var s in t.msgs.forEach((function(t) {
                                            i[t.sessionId] ? i[t.sessionId].push(t) : i[t.sessionId] = [t]
                                        })), i) {
                                        var n = f.default.parse(s),
                                            a = n.uid,
                                            o = n.channelId;
                                        h && e.putMessagesInMap(a, o, i[s], m.MESSAGE_SOURCE.HISTORY)
                                    }
                                    return i
                                }))
                            }, t.prototype.shouldSetHeadersWhenGetFileBlob = function(t) {
                                var e = t.url,
                                    i = I.default.get("env");
                                return this.mtdx.HTTP.Common.shouldSetHeadersWhenGetFileBlob({
                                    url: e,
                                    env: i
                                })
                            }, t.prototype.getFileBlob = function(t) {
                                var e = t.url,
                                    i = t.token;
                                return this.mtdx.HTTP.Common.getFileBlob({
                                    url: e,
                                    token: i
                                })
                            }, t.prototype.getAuthFreeTempFileURL = function(t) {
                                var e = this,
                                    i = t.url,
                                    s = t.token;
                                return new S.default((function(t, n) {
                                    e.mtdx.HTTP.Common.getAuthFreeTempFileURL({
                                        method: "GET",
                                        headers: {
                                            "X-Xmftk": s
                                        },
                                        data: {
                                            originalUrl: i
                                        },
                                        success: function(e) {
                                            var i = e.rescode,
                                                s = e.data;
                                            0 === i ? t({
                                                url: s.url
                                            }) : n(i)
                                        },
                                        fail: function(t) {
                                            n(t)
                                        }
                                    })
                                }))
                            }, t.prototype.sendGroupReceiptMessage = function(t) {
                                var e = t.toGuid,
                                    i = void 0 === e ? "" : e,
                                    s = t.channelId,
                                    n = void 0 === s ? 0 : s,
                                    a = t.messageItems,
                                    o = void 0 === a ? [] : a,
                                    r = c.default.createGroupReceiptMessage({
                                        fromUid: v.default.getConfig().uid,
                                        toGuid: i,
                                        channelId: n,
                                        messageItems: o
                                    });
                                return this.mtdx.imSDK.send(r), {
                                    uuid: r.receiptUid
                                }
                            }, t.prototype.getGroupReceiptConfig = function(t) {
                                var e = this,
                                    i = t.appId;
                                return new S.default((function(t, s) {
                                    e.mtdx.HTTP.Msg.getGroupReceiptConfig({
                                        data: {
                                            appId: i
                                        },
                                        success: function(e) {
                                            var i = e.rescode,
                                                n = e.data;
                                            if (0 === i) {
                                                var a = {};
                                                n.forEach((function(t) {
                                                    a[t.channel] = 1 === t.isopen
                                                })), t({
                                                    channelMap: a
                                                })
                                            } else s(i)
                                        },
                                        fail: function(t) {
                                            s(t)
                                        }
                                    })
                                }))
                            }, t.prototype.getGroupReceiptMessageList = function(t) {
                                var e = this,
                                    i = t.mids;
                                return new S.default((function(t, s) {
                                    e.mtdx.HTTP.Msg.getGroupReceiptMessageList({
                                        data: {
                                            mids: i
                                        },
                                        success: function(e) {
                                            var i = e.rescode,
                                                n = e.data;
                                            if (0 === i) {
                                                var a = {};
                                                n.forEach((function(t) {
                                                    a[t.msgIdStr] = {
                                                        receiptUid: t.receipt_uid_str,
                                                        unreceiptUid: t.unreceipt_uid_str
                                                    }
                                                })), t({
                                                    uidList: a
                                                })
                                            } else s(i)
                                        },
                                        fail: function(t) {
                                            s(t)
                                        }
                                    })
                                }))
                            }, t.prototype.getGroupReceiptMessageCount = function(t) {
                                var e = this,
                                    i = t.mids;
                                return new S.default((function(t, s) {
                                    e.mtdx.HTTP.Msg.getGroupReceiptMessageCount({
                                        data: {
                                            mids: i
                                        },
                                        success: function(e) {
                                            var i = e.rescode,
                                                n = e.data;
                                            if (0 === i) {
                                                var a = {};
                                                for (var o in n) a[n[o].msgIdStr] = {
                                                    total: n[o].total_count,
                                                    receipt: n[o].total_count
                                                };
                                                t({
                                                    countList: a
                                                })
                                            } else s(i)
                                        },
                                        fail: function(t) {
                                            s(t)
                                        }
                                    })
                                }))
                            }, t.prototype.setNoMoreMessages = function() {
                                this._shouldReceiveMessage = !1, console.warn("不在接受消息,如果需要重新接受消息请重新登录")
                            }, t
                        }();
                    e.default = new y
                },
                7923: function(t, e, i) {
                    "use strict";
                    var s = this && this.__assign || function() {
                            return (s = Object.assign || function(t) {
                                for (var e, i = 1, s = arguments.length; i < s; i++)
                                    for (var n in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                                return t
                            }).apply(this, arguments)
                        },
                        n = this && this.__spreadArrays || function() {
                            for (var t = 0, e = 0, i = arguments.length; e < i; e++) t += arguments[e].length;
                            var s = Array(t),
                                n = 0;
                            for (e = 0; e < i; e++)
                                for (var a = arguments[e], o = 0, r = a.length; o < r; o++, n++) s[n] = a[o];
                            return s
                        };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), this._initStartTime = Date.now();
                    var a, o = i(4625),
                        r = i(4864),
                        u = i(2359),
                        h = i(1581),
                        d = i(5605),
                        c = i(9972),
                        p = i(5678),
                        l = i(9645),
                        f = i(3857),
                        _ = i(8966),
                        g = i(7486),
                        m = i(3257),
                        S = "9223372036854775807";
                    a = i(8255).Z;
                    var I = function() {
                        function t() {
                            this._isFirstInit = !0, this._sessionMap = new u.default, this._readSendMap = new u.default, this._IMTimeRange = 0, this._PubTimeRange = 0, this._lastFetchIMSessionListTime = Date.now(), this._lastFetchPubSessionListTime = Date.now(), this._imSessionListRetryTime = 0, this._pubSessionListRetryTime = 0, this.mtdx = {}, this._sessionMap = new u.default
                        }
                        return t.prototype.init = function(t) {
                            var e = this;
                            this.mtdx = t, r.default.on(r.EVENT_NAME.AUTH_SUCCESS, (function() {
                                var t = Date.now();
                                e._IMTimeRange || console.warn("没有设置 IM 会话列表获取时间,如果为已知情况请忽略本提示"), e._PubTimeRange || console.warn("没有设置 PUB 会话列表获取时间,如果为已知情况请忽略本提示"), e._imSessionListRetryTime = 0, e._pubSessionListRetryTime = 0, e.fetchRemoteSessionListAndCountUnreadByHistoryMessages({}).then((function() {
                                    r.default.emit(r.EVENT_NAME.UNREADS_COUNT_FINISHED), m.default.report({
                                        nm: "session_init_success",
                                        val: {
                                            time: Date.now() - t
                                        }
                                    })
                                }))
                            })), r.default.on(r.EVENT_NAME.LOGOUT, (function() {
                                e.clearAllSessionsAndMessages()
                            })), r.default.on(r.EVENT_NAME.MESSAGE, (function(t, i) {
                                var s = t.message;
                                void 0 === i && (i = !1), i && e.updateSessionByMessageAndSave(s)
                            })), r.default.on(r.EVENT_NAME.UPDATE_MESSAGES, (function(t) {
                                var i = t.uid,
                                    s = t.channelId,
                                    n = (t.messages, t.fromSource),
                                    a = _.default.getMessages(i, s);
                                if (a && a.length >
                                    0) {
                                    var o = a[a.length - 1],
                                        r = e.getSession(i, s);
                                    r && n === d.MESSAGE_SOURCE.HISTORY && (!r.message || r.message.svrTime <
                                        o.svrTime) && (r.message = o, e.saveSessions([r]))
                                }
                            })), r.default.on(r.EVENT_NAME.ADD_FAKE_MESSAGE, (function(t) {
                                var i = t.message;
                                e.updateSessionByMessageAndSave(i)
                            })), this.mtdx.on(d.MESSAGE_EVENT.IM_READ, (function(t) {
                                e.updateSessionsByReadsAndSave(e._parseIMRead(t))
                            })), this.mtdx.on(d.MESSAGE_EVENT.PUB_READ, (function(t) {
                                e.updateSessionsByReadsAndSave(e._parsePubRead(t))
                            })), this.mtdx.on(d.MESSAGE_EVENT.IM_READ_ACK, this.handleReadAck.bind(this)), this.mtdx.on(d.MESSAGE_EVENT.PUB_READ_ACK, this.handleReadAck.bind(this))
                        }, t.prototype.clearAllSessionsAndMessages = function() {
                            this._sessionMap = new u.default, this._readSendMap = new u.default, this._lastFetchIMSessionListTime = Date.now(), this._lastFetchPubSessionListTime = Date.now(), this._imSessionListRetryTime = 0, this._pubSessionListRetryTime = 0, _.default.clearAllMessages()
                        }, t.prototype.setInitData = function() {
                            console.warn("setInitData 已废弃,请使用 setInitialTimeRange,具体使用方式见文档: https://km.sankuai.com/page/172625954")
                        }, t.prototype.setInitialTimeRange = function(t) {
                            var e = t.IMTimeRange,
                                i = void 0 === e ? 0 : e,
                                s = t.PubTimeRange,
                                n = void 0 === s ? 0 : s;
                            this._IMTimeRange = i, this._PubTimeRange = n
                        }, t.prototype.hasLocalSession = function(t, e) {
                            void 0 === t && (t = ""), void 0 === e && (e = p.default.get("channelId"));
                            var i = h.default.create({
                                uid: t,
                                channelId: e
                            });
                            return this._sessionMap.has(i)
                        }, t.prototype.getSession = function(t, e) {
                            if (void 0 === t && (t = ""), void 0 === e && (e = p.default.get("channelId")), this.hasLocalSession(t, e)) {
                                var i = h.default.create({
                                    uid: t,
                                    channelId: e
                                });
                                return this._sessionMap.get(i)
                            }
                            return null
                        }, t.prototype.exchangeId = function(t) {
                            void 0 === t && (t = "");
                            var e = t.split("_");
                            return {
                                pubId: e[0],
                                peerUid: e[1]
                            }
                        }, t.prototype.composeId = function(t) {
                            return t.pid + "_" + t.peerUid
                        }, t.prototype.deleteRemoteSession = function(t, e) {
                            var i = this;
                            if (void 0 === t && (t = ""), void 0 === e && (e = p.default.get("channelId")), !this.hasLocalSession(t, e)) return c.default.resolve();
                            var s = this.getSession(t, e),
                                n = f.default.getConfig(),
                                a = _.default.getLastMidMessage(t, e),
                                o = c.default.resolve();
                            return a || (o = o.then((function() {
                                return _.default.fetchHistoryMessages({
                                    uid: t,
                                    type: s.type,
                                    channelId: s.channelId,
                                    limit: 1
                                })
                            }))), o.catch((function() {})).then((function() {
                                if (!(a = _.default.getLastMidMessage(t, e))) return c.default.resolve(0);
                                var o = {
                                    u: n.uid,
                                    ai: n.appId,
                                    dt: n.dt,
                                    chat: [{
                                        u: t,
                                        ai: s.appId,
                                        chid: s.channelId,
                                        type: i.getDeleteSessionType(s.type),
                                        mid: a ? a.mid : s.message.mid
                                    }]
                                };
                                return s.isPubChat() && (o.chat[0].pu = "0"), s.isCSChat() && (o.chat[0].u = s.pubId, o.chat[0].pu = s.peerUid), new c.default((function(t, e) {
                                    i.mtdx.HTTP.Common.deleteRemoteSession({
                                        data: o,
                                        success: function(i) {
                                            0 === i.rescode ? t() : e()
                                        }
                                    })
                                }))
                            })).then((function() {
                                return i.deleteLocalSession(t, e)
                            }))
                        }, t.prototype.getDeleteSessionType = function(t) {
                            switch (t) {
                                case d.SESSION_TYPE.CHAT:
                                    return 10;
                                case d.SESSION_TYPE.GROUP_CHAT:
                                    return 11;
                                case d.SESSION_TYPE.PUB_CHAT:
                                case d.SESSION_TYPE.CS_CHAT:
                                    return 20
                            }
                        }, t.prototype.deleteLocalSession = function(t, e) {
                            if (void 0 === t && (t = ""), void 0 === e && (e = p.default.get("channelId")), this.hasLocalSession(t, e)) {
                                var i = h.default.create({
                                        uid: t,
                                        channelId: e
                                    }),
                                    s = this._sessionMap.get(i);
                                return this._sessionMap.delete(i), a.removeData("session", i), _.default.deleteMessages(t, e), r.default.emit(r.EVENT_NAME.DELETE_SESSIONS, {
                                    sessions: [s]
                                }), s
                            }
                            return null
                        }, t.prototype.deleteLocalSessions = function(t, e) {
                            var i = this;
                            void 0 === t && (t = []), void 0 === e && (e = !0), t.length >
                                0 && (t.map((function(t) {
                                    i._sessionMap.delete(t.sessionId), _.default.deleteMessages(t.uid, t.channelId)
                                })), e && a.removeBatch("session", t.map((function(t) {
                                    return t.sessionId
                                }))), r.default.emit(r.EVENT_NAME.DELETE_SESSIONS, {
                                    sessions: t,
                                    shouldDeleteDBSessions: e
                                }))
                        }, t.prototype.deleteLocalSessionsByTime = function(t, e) {
                            if (void 0 === e && (e = !0), g.default.isNumber(t) && !(t <=
                                    0)) {
                                var i = this._sessionMap.values(),
                                    s = [];
                                return i.forEach((function(e) {
                                    e.svrTime < t && s.push(e)
                                })), this.deleteLocalSessions(s, e), s
                            }
                        }, t.prototype.retainSessionsByLength = function(t, e) {
                            void 0 === t && (t = 1e3), void 0 === e && (e = !0);
                            var i = this.getSortedSessionList().slice(t);
                            return this.deleteLocalSessions(i, e), i
                        }, t.prototype.saveSessions = function(t, e, i) {
                            var s = this;
                            void 0 === t && (t = []), void 0 === e && (e = !0), void 0 === i && (i = !0);
                            var n = [];
                            t && 0 !== t.length && (t.forEach((function(t) {
                                t && (n.push(t), s._sessionMap.set(t.sessionId, t))
                            })), i && this._saveSessionsToDB(n), e && r.default.emit(r.EVENT_NAME.UPDATE_SESSIONS, {
                                sessions: n
                            }))
                        }, t.prototype._saveSessionsToDB = function(t) {
                            void 0 === t && (t = []);
                            var e = {};
                            return t.forEach((function(t) {
                                t && (e[t.sessionId] = t)
                            })), a.setBatch("session", e)
                        }, t.prototype.sortSessionArray = function(t, e) {
                            return void 0 === e && (e = !1), t.sort((function(t, i) {
                                return e ? t.time - i.time : i.time - t.time
                            }))
                        }, t.prototype.getSortedSessionList = function() {
                            for (var t = [], e = 0, i = this._sessionMap.values(); e < i.length; e++) {
                                var s = i[e];
                                s && t.push(s)
                            }
                            return this.sortSessionArray(t)
                        }, t.prototype.getSortedSessionListByRange = function(t) {
                            var e = t.start,
                                i = void 0 === e ? 0 : e,
                                s = t.end,
                                n = void 0 === s ? void 0 : s;
                            return this.getSortedSessionList().slice(i, n)
                        }, t.prototype.fetchSessionList = function() {
                            return console.warn("fetchSessionList 已废弃,具体使用方式建议使用初始化配置参数"), c.default.resolve([])
                        }, t.prototype.createSession = function(t) {
                            return l.Session.create(t)
                        }, t.prototype.createSessionByDatum = function(t) {
                            if (!t.uid || !t.type || !t.appId || void 0 === !t.channelId) return console.error("uid|type|appId|channelId不存在，无法创建会话"), null;
                            var e = this.createSession(t);
                            return this.saveSessions([e]), e
                        }, t.prototype.createSessionByMessage = function(t) {
                            if (!t) return null;
                            var e = t.belongTo,
                                i = t.svrTime,
                                s = t.time;
                            if (t.isChatMessage && t.isChatMessage()) return this.createSession({
                                appId: t.appId,
                                channelId: t.channelId,
                                uid: e,
                                type: d.SESSION_TYPE.CHAT,
                                time: s,
                                svrTime: i,
                                message: t
                            });
                            if (t.isGroupChatMessage && t.isGroupChatMessage()) return this.createSession({
                                appId: t.appId,
                                channelId: t.channelId,
                                uid: e,
                                type: d.SESSION_TYPE.GROUP_CHAT,
                                time: s,
                                svrTime: i,
                                message: t
                            });
                            if (t.isPubChatMessage && t.isPubChatMessage()) return this.createSession({
                                appId: 0,
                                channelId: t.channelId,
                                uid: e,
                                type: d.SESSION_TYPE.PUB_CHAT,
                                time: s,
                                svrTime: i,
                                message: t
                            });
                            if (t.isCSChatMessage && t.isCSChatMessage()) {
                                var n = t.pubId,
                                    a = t.peerUid;
                                return this.createSession({
                                    appId: 0,
                                    channelId: t.channelId,
                                    uid: e,
                                    type: d.SESSION_TYPE.CS_CHAT,
                                    time: s,
                                    svrTime: i,
                                    pubId: n,
                                    peerUid: a,
                                    message: t
                                })
                            }
                        }, t.prototype.updateSessionByMessageAndSave = function(t) {
                            var e = this.updateSessionByMessage(t);
                            this.saveSessions([e])
                        }, t.prototype.updateSessionByMessage = function(t) {
                            var e = t.belongTo,
                                i = t.channelId,
                                s = null;
                            if (t.status !== l.Message.STATUS.STATUS_SENT) {
                                if (this.hasLocalSession(e, i)) s = this.getSession(e, i);
                                else {
                                    if (!(s = this.createSessionByMessage(t))) return;
                                    this.saveSessions([s], !1)
                                }
                                _.default.getMessages(s.uid, s.channelId).length < s.unreads && t.svrTime > s.readTime ? (t.isCancel ? s.unreads > 0 && (s.unreads -= 1) : s.unreads += 1, s.setCountUnreadFlag(!1)) : s.unreads = this.countUnreadByMessages({
                                    session: s
                                }), s.time < t.time && (s.time = t.time), s.svrTime < t.svrTime && (s.svrTime = t.svrTime);
                                var n = _.default.getLastMessage(e, i);
                                return s.message = n || t, s
                            }
                        }, t.prototype._parseIMRead = function(t) {
                            var e = t.uid,
                                i = void 0 === e ? "" : e,
                                s = t.deviceType,
                                n = void 0 === s ? 0 : s,
                                a = t.msgUuid,
                                o = void 0 === a ? "" : a,
                                r = t.syncReadItems,
                                u = void 0 === r ? [] : r;
                            return new l.Read({
                                uid: i,
                                deviceType: n,
                                msgUuid: o,
                                syncReadItems: u.map((function(t) {
                                    return {
                                        uid: t.chatId,
                                        channelId: t.channel,
                                        peerAppId: t.peerAppId,
                                        time: parseInt(t.stamp),
                                        svrTime: parseInt(t.sts),
                                        sessionType: 1 === t.type ? d.SESSION_TYPE.CHAT : d.SESSION_TYPE.GROUP_CHAT
                                    }
                                }))
                            })
                        }, t.prototype._parsePubRead = function(t) {
                            var e = t.uid,
                                i = void 0 === e ? "" : e,
                                n = t.deviceType,
                                a = void 0 === n ? 0 : n,
                                o = t.msgUuid,
                                r = void 0 === o ? "" : o,
                                u = t.syncReadItems,
                                h = void 0 === u ? [] : u;
                            return new l.Read({
                                uid: i,
                                deviceType: a,
                                msgUuid: r,
                                syncReadItems: h.map((function(t) {
                                    var e = {
                                        channelId: t.channel,
                                        pubId: t.chatId,
                                        peerUid: t.peerUid,
                                        peerAppId: t.peerAppId,
                                        time: parseInt(t.stamp),
                                        svrTime: parseInt(t.sts),
                                        sessionType: 1 === t.type ? d.SESSION_TYPE.PUB_CHAT : d.SESSION_TYPE.CS_CHAT
                                    };
                                    return s(s({}, e), {
                                        uid: e.sessionType === d.SESSION_TYPE.PUB_CHAT ? t.chatId : t.chatId + "_" + t.peerUid
                                    })
                                }))
                            })
                        }, t.prototype.isShouldCountUnread = function(t, e) {
                            return !(!t || !this.hasLocalSession(t.uid, t.channelId)) && (!e.isCancel && e.type !== d.MESSAGE_TYPE.MSG_TYPE_EVENT && (e.svrTime > t.readTime && e.from !== f.default.getConfig().uid && t.channelId === e.channelId))
                        }, t.prototype.updateSessionsByReadsAndSave = function(t) {
                            var e = this,
                                i = t.readItems,
                                s = [];
                            (void 0 === i ? [] : i).forEach((function(t) {
                                var i = h.default.parse(t.sessionId),
                                    n = i.uid,
                                    a = i.channelId;
                                e.hasLocalSession(n, a) && s.push(e.updateSessionByRead(t))
                            })), this.saveSessions(s)
                        }, t.prototype.updateSessionByRead = function(t) {
                            var e = t.sessionId,
                                i = h.default.parse(e),
                                s = i.uid,
                                n = i.channelId,
                                a = this.getSession(s, n);
                            return t.svrTime > a.readTime && (a.readTime = t.svrTime, a.unreads = this.countUnreadByMessages({
                                session: a
                            })), a
                        }, t.prototype.updateEmptySession = function(t, e) {
                            void 0 === t && (t = ""), void 0 === e && (e = p.default.get("channelId"));
                            var i = this.getSession(t, e);
                            i.unreads = i.unreads = this.countUnreadByMessages({
                                session: i
                            }), i.readTime = i.svrTime, this.saveSessions([i])
                        }, t.prototype.readSession = function(t) {
                            var e = this,
                                i = t.uid,
                                s = void 0 === i ? "" : i,
                                n = t.peerAppId,
                                a = void 0 === n ? 0 : n,
                                o = t.channelId,
                                r = void 0 === o ? p.default.get("channelId") : o;
                            if (this.hasLocalSession(s, r)) {
                                var u = this.getSession(s, r),
                                    h = _.default.getLastMidMessage(s, r),
                                    d = c.default.resolve();
                                h || (h = u.message), h && h.svrTime || (d = d.then((function() {
                                    return _.default.fetchHistoryMessages({
                                        uid: s,
                                        type: u.type,
                                        channelId: r,
                                        limit: 1
                                    })
                                }))), d.then((function() {
                                    h || (h = h = _.default.getLastMidMessage(s, r)), h ? e.sendRead({
                                        sessionType: h.sessionType,
                                        readArray: [{
                                            chatId: s,
                                            channelId: r,
                                            sessionType: h.sessionType,
                                            time: h.svrTime,
                                            svrTime: h.svrTime,
                                            peerAppId: a || u.appId
                                        }]
                                    }) : e.updateEmptySession(s, r)
                                }))
                            }
                        }, t.prototype.sendRead = function(t) {
                            var e = this,
                                i = t.sessionType,
                                s = void 0 === i ? d.SESSION_TYPE.CHAT : i,
                                n = t.uuid,
                                a = void 0 === n ? void 0 : n,
                                o = t.readArray,
                                r = void 0 === o ? [] : o;
                            if (0 !== r.length) {
                                var u;
                                switch (s) {
                                    case d.SESSION_TYPE.CHAT:
                                    case d.SESSION_TYPE.GROUP_CHAT:
                                        u = this.sendIMRead({
                                            uuid: a,
                                            readArray: r
                                        });
                                        break;
                                    case d.SESSION_TYPE.PUB_CHAT:
                                    case d.SESSION_TYPE.CS_CHAT:
                                        u = this.sendPubRead({
                                            uuid: a,
                                            readArray: r
                                        })
                                }
                                this.updateSessionsByReadsAndSave(u);
                                var h = this._readSendMap.get(u.uuid),
                                    c = 1;
                                h && (h.timer && clearTimeout(h.timer), c = h.count + 1), c < 3 && this._readSendMap.set(u.uuid, {
                                    count: c,
                                    uuid: u.uuid,
                                    readArray: r,
                                    timer: setTimeout((function() {
                                        e.sendRead({
                                            sessionType: s,
                                            uuid: u.uuid,
                                            readArray: r
                                        })
                                    }), 5e3)
                                })
                            }
                        }, t.prototype.sendIMRead = function(t) {
                            var e = t.uuid,
                                i = void 0 === e ? void 0 : e,
                                s = t.readArray,
                                n = void 0 === s ? [] : s,
                                a = o.createIMReadProtocol({
                                    uuid: i,
                                    readData: n
                                });
                            return this.mtdx.imSDK ? (this.mtdx.imSDK.send(a), this._parseIMRead(a)) : {}
                        }, t.prototype.sendPubRead = function(t) {
                            var e = this,
                                i = t.uuid,
                                n = void 0 === i ? void 0 : i,
                                a = t.readArray,
                                r = void 0 === a ? [] : a,
                                u = o.createPubReadProtocol({
                                    uuid: n,
                                    readData: r.map((function(t) {
                                        var i = e.exchangeId(t.chatId),
                                            n = i.pubId,
                                            a = i.peerUid;
                                        return s(s({}, t), {
                                            chatId: n,
                                            peerUid: a
                                        })
                                    }))
                                });
                            return this.mtdx.pubSDK ? (this.mtdx.pubSDK.send(u), this._parsePubRead(u)) : {}
                        }, t.prototype.handleReadAck = function(t) {
                            var e = t.uuid,
                                i = void 0 === e ? void 0 : e,
                                s = this._readSendMap.get(i);
                            s && (clearTimeout(s.timer), this._readSendMap.delete(i))
                        }, t.prototype.fetchRemoteSessionListAndCountUnreadByHistoryMessages = function(t) {
                            var e = this,
                                i = t.IMStartTime,
                                s = void 0 === i ? Date.now() - this._IMTimeRange : i,
                                n = t.PubStartTime,
                                a = void 0 === n ? Date.now() - this._PubTimeRange : n,
                                o = this._sessionMap.entries(),
                                u = {};
                            return o.forEach((function(t) {
                                var e = t[0],
                                    i = t[1];
                                u[e] = {
                                    sessionId: e,
                                    sessionType: i.sessionType,
                                    svrTime: i.readTime
                                }
                            })), c.default.all([this._isFirstInit ? this.getSessionFromDB() : c.default.resolve(this._sessionMap.values()), this.fetchRemoteSessionListByTime({
                                IMStartTime: s,
                                PubStartTime: a
                            }), this.fetchRemoteReadTimeByTime({
                                IMStartTime: s,
                                PubStartTime: a
                            })]).then((function(t) {
                                var i = t[0],
                                    s = t[1],
                                    n = t[2];
                                e._isFirstInit = !1;
                                var a = e.mergeLocalAndRemoteReadItemDataAndUpdateServer({
                                        existReadTime: u,
                                        remoteReadItemData: n
                                    }),
                                    o = e.getUnreadSessions({
                                        sessions: s,
                                        localSessions: i,
                                        readItemData: a
                                    });
                                return !1 !== p.default.get("shouldGetSessionFromDB") && e._loadNotExistSessionFromDB({
                                        localSessions: i
                                    }), 0 === e._sessionMap.size && r.default.emit(r.EVENT_NAME.EMPTY_SESSIONS), r.default.emit(r.EVENT_NAME.SESSIONS_LOAD_FINISHED), o.length >
                                    0 ? e.fetchHistoryMessagesAndCountUnread({
                                        unreadSessions: o
                                    }) : c.default.resolve()
                            })).catch((function(t) {
                                console.warn(t)
                            }))
                        }, t.prototype.getUnreadSessions = function(t) {
                            var e = t.sessions,
                                i = void 0 === e ? [] : e,
                                s = t.localSessions,
                                n = void 0 === s ? [] : s,
                                a = t.readItemData,
                                o = void 0 === a ? {} : a,
                                r = [],
                                u = [],
                                h = [];
                            return i.forEach((function(t) {
                                var e = o[t.sessionId],
                                    i = n.find((function(e) {
                                        return t.sessionId === e.sessionId
                                    }));
                                i && i.isCountUnread() && i.svrTime === t.svrTime && (e && e.svrTime === i.readTime || !e) ? i.unreads > 0 ? u.push(i) : r.push(i) : (e && e.svrTime > t.readTime && (t.readTime = e.svrTime), t.svrTime > t.readTime && (t.setCountUnreadFlag(!1), h.push(t)), i && i.unreads > 0 && (!e || i.readTime === e.readTime) ? (t.unreads = i.unreads, u.push(t)) : r.push(t))
                            })), this.saveSessions(r, !1), this.saveSessions(u), h
                        }, t.prototype._loadNotExistSessionFromDB = function(t) {
                            var e = this,
                                i = t.localSessions.filter((function(t) {
                                    return !e.hasLocalSession(t.uid, t.channelId)
                                })),
                                s = p.default.get("localSessionNumber");
                            if (s && g.default.isNumber(s) && s <
                                i.length) {
                                var n = this.sortSessionArray(i);
                                this.deleteLocalSessions(n.slice(s)), i = n.slice(0, s)
                            }
                            this.saveSessions(i, !0, !1)
                        }, t.prototype.fetchRemoteSessionListByTime = function(t) {
                            var e = t.IMStartTime,
                                i = void 0 === e ? Date.now() - this._IMTimeRange : e,
                                s = t.PubStartTime,
                                a = void 0 === s ? Date.now() - this._PubTimeRange : s;
                            return c.default.all([this.fetchIMRemoteSessionListByTime({
                                startTime: i
                            }), this.fetchPubRemoteSessionListByTime({
                                startTime: a
                            })]).then((function(t) {
                                var e = t[0],
                                    i = t[1];
                                return n(e, i)
                            })).catch((function(t) {
                                return console.error("会话列表加载失败"), []
                            }))
                        }, t.prototype.fetchIMRemoteSessionListByTime = function(t) {
                            var e = this,
                                i = t.startTime,
                                s = t.endTime,
                                n = void 0 === s ? S : s;
                            return 0 === this._IMTimeRange ? c.default.resolve([]) : (this._lastFetchIMSessionListTime = i, new c.default((function(t, s) {
                                e.fetchIMRemoteSessionListByTimeByCycle({
                                    prev: new u.default,
                                    startTime: i,
                                    endTime: n,
                                    resolve: t,
                                    reject: s
                                })
                            })).then((function(t) {
                                return t.values()
                            })))
                        }, t.prototype.fetchIMRemoteSessionListByTimeByCycle = function(t) {
                            var e = this,
                                i = t.prev,
                                s = t.startTime,
                                n = t.endTime,
                                a = t.resolve,
                                o = t.reject;
                            _.default.fetchIMRemoteMessagesByTime({
                                startTime: s,
                                endTime: n
                            }).then((function(t) {
                                var n = t.IMRemoteMessages,
                                    r = void 0 === n ? [] : n,
                                    u = t.next,
                                    h = [];
                                r.forEach((function(t) {
                                    if (!i.has(t.sessionId) || i.has(t.sessionId) && i.get(t.sessionId).svrTime < t.svrTime) {
                                        var s = e.createSessionByMessage(t);
                                        i.set(t.sessionId, s), h.push(s)
                                    }
                                })), e.saveSessions(h), u > 0 ? e.fetchIMRemoteSessionListByTimeByCycle({
                                    prev: i,
                                    startTime: s,
                                    endTime: u,
                                    resolve: a,
                                    reject: o
                                }) : a(i)
                            })).catch((function(t) {
                                console.error("IM 会话列表获取失败", t), e._imSessionListRetryTime < 3 ? (e._imSessionListRetryTime++, e.fetchIMRemoteSessionListByTimeByCycle({
                                    prev: i,
                                    startTime: s,
                                    endTime: n,
                                    resolve: a,
                                    reject: o
                                })) : a(i)
                            }))
                        }, t.prototype.fetchPubRemoteSessionListByTime = function(t) {
                            var e = this,
                                i = t.startTime,
                                s = t.endTime,
                                n = void 0 === s ? S : s;
                            return 0 === this._PubTimeRange ? c.default.resolve([]) : (this._lastFetchPubSessionListTime = i, new c.default((function(t, s) {
                                e.fetchPUBRemoteSessionListByTimeByCycle({
                                    prev: new u.default,
                                    startTime: i,
                                    endTime: n,
                                    resolve: t,
                                    reject: s
                                })
                            })).then((function(t) {
                                return t.values()
                            })))
                        }, t.prototype.fetchPUBRemoteSessionListByTimeByCycle = function(t) {
                            var e = this,
                                i = t.prev,
                                s = t.startTime,
                                n = t.endTime,
                                a = t.resolve,
                                o = t.reject;
                            _.default.fetchPubRemoteMessagesByTime({
                                startTime: s,
                                endTime: n
                            }).then((function(t) {
                                var n = t.PubRemoteMessages,
                                    r = void 0 === n ? [] : n,
                                    u = t.next,
                                    h = [];
                                r.forEach((function(t) {
                                    if (!i.has(t.sessionId) || i.has(t.sessionId) && i.get(t.sessionId).svrTime < t.svrTime) {
                                        var s = e.createSessionByMessage(t);
                                        i.set(t.sessionId, s), h.push(s)
                                    }
                                })), e.saveSessions(h), u > 0 ? e.fetchPUBRemoteSessionListByTimeByCycle({
                                    prev: i,
                                    startTime: s,
                                    endTime: u,
                                    resolve: a,
                                    reject: o
                                }) : a(i)
                            })).catch((function(t) {
                                console.error("PUB 会话列表获取失败", t), e._pubSessionListRetryTime < 3 ? (e._pubSessionListRetryTime++, e.fetchPUBRemoteSessionListByTimeByCycle({
                                    prev: i,
                                    startTime: s,
                                    endTime: n,
                                    resolve: a,
                                    reject: o
                                })) : a(i)
                            }))
                        }, t.prototype.getSessionFromDB = function() {
                            var t = this;
                            return a.getAll("session").then((function(e) {
                                var i = [],
                                    s = [],
                                    n = [];
                                for (var o in e) {
                                    var r = e[o],
                                        u = t.createSession(r);
                                    u && (i.push(u), h.default.isSessionId(o) || (s.push(u.uid), n.push(u)))
                                }
                                return n.length >
                                    0 ? a.removeBatch("session", s).then((function() {
                                        return t._saveSessionsToDB(n), i
                                    })) : i
                            }))
                        }, t.prototype.fetchRemoteReadTimeByTime = function(t) {
                            var e = t.IMStartTime,
                                i = void 0 === e ? Date.now() - this._IMTimeRange : e,
                                s = t.PubStartTime,
                                n = void 0 === s ? Date.now() - this._PubTimeRange : s;
                            return c.default.all([this.fetchIMRemoteReadTimeByTime({
                                startTime: i
                            }), this.fetchPubRemoteReadTimeByTime({
                                startTime: n
                            })]).then((function(t) {
                                var e = t[0],
                                    i = t[1],
                                    s = {};
                                return e && e.readItems && e.readItems.forEach((function(t) {
                                    s[t.sessionId] = t
                                })), i && i.readItems && i.readItems.forEach((function(t) {
                                    s[t.sessionId] = t
                                })), s
                            })).catch((function(t) {
                                return console.error("已读时间加载失败", t), {}
                            }))
                        }, t.prototype.fetchIMRemoteReadTimeByTime = function(t) {
                            var e = this,
                                i = t.startTime,
                                s = void 0 === i ? Date.now() - this._IMTimeRange : i;
                            return 0 === this._IMTimeRange ? c.default.resolve({}) : new c.default((function(t, i) {
                                e.mtdx.HTTP.Msg.chats({
                                    data: {
                                        ts: s
                                    },
                                    success: function(s) {
                                        if (0 !== s.rescode) return i({
                                            code: s.rescode,
                                            message: s
                                        });
                                        t(e._parseIMRead(s.data.sync_data))
                                    },
                                    error: function(t, e, s) {
                                        return i({
                                            code: 500,
                                            message: e + ":" + s
                                        })
                                    }
                                })
                            }))
                        }, t.prototype.fetchPubRemoteReadTimeByTime = function(t) {
                            var e = this,
                                i = t.startTime,
                                s = void 0 === i ? Date.now() - this._PubTimeRange : i;
                            return 0 === this._PubTimeRange ? c.default.resolve({}) : new c.default((function(t, i) {
                                e.mtdx.HTTP.Pub.unreads({
                                    data: {
                                        ts: s
                                    },
                                    success: function(s) {
                                        if (0 !== s.rescode) return i({
                                            code: s.rescode,
                                            message: s
                                        });
                                        t(e._parsePubRead(s.data.sync_data))
                                    },
                                    error: function(t, e, s) {
                                        return i({
                                            code: 500,
                                            message: e + ":" + s
                                        })
                                    }
                                })
                            }))
                        }, t.prototype.mergeLocalAndRemoteReadItemDataAndUpdateServer = function(t) {
                            var e = t.existReadTime,
                                i = t.remoteReadItemData,
                                n = s({}, i),
                                a = [],
                                o = [];
                            for (var r in e)(!n[r] && e[r].svrTime > 0 && e[r].svrTime > Date.now() - 2592e5 || n[r] && e[r].svrTime > n[r].svrTime) && (e[r].sessionType !== d.SESSION_TYPE.CHAT && e[r].sessionType !== d.SESSION_TYPE.GROUP_CHAT || a.push(e[r]), e[r].sessionType !== d.SESSION_TYPE.PUB_CHAT && e[r].sessionType !== d.SESSION_TYPE.CS_CHAT || o.push(e[r]), n[r] = s(s({}, n[r]), {
                                svrTime: e[r].svrTime,
                                time: e[r].svrTime
                            }));
                            return this.sendRead({
                                sessionType: d.SESSION_TYPE.CHAT,
                                readArray: a.map((function(t) {
                                    var e = h.default.parse(t.sessionId);
                                    return {
                                        chatId: e.uid,
                                        channelId: e.channelId,
                                        sessionType: t.sessionType,
                                        time: t.svrTime,
                                        svrTime: t.svrTime,
                                        peerAppId: p.default.get("appId")
                                    }
                                }))
                            }), this.sendRead({
                                sessionType: d.SESSION_TYPE.PUB_CHAT,
                                readArray: o.map((function(t) {
                                    var e = h.default.parse(t.sessionId);
                                    return {
                                        chatId: e.uid,
                                        channelId: e.channelId,
                                        sessionType: t.sessionType,
                                        time: t.svrTime,
                                        svrTime: t.svrTime,
                                        peerAppId: p.default.get("appId")
                                    }
                                }))
                            }), n
                        }, t.prototype.fetchHistoryMessagesAndCountUnread = function(t) {
                            var e = t.unreadSessions,
                                i = [],
                                s = [];
                            return (void 0 === e ? [] : e).forEach((function(t) {
                                switch (t.type) {
                                    case d.SESSION_TYPE.CHAT:
                                    case d.SESSION_TYPE.GROUP_CHAT:
                                        t.svrTime > Date.now() - 2592e6 && i.push(t);
                                        break;
                                    case d.SESSION_TYPE.PUB_CHAT:
                                    case d.SESSION_TYPE.CS_CHAT:
                                        t.svrTime > Date.now() - 6048e5 && s.push(t)
                                }
                            })), c.default.all([this.fetchIMHistoryMessagesAndCountUnread({
                                sessions: i
                            }), this.fetchPubHistoryMessagesAndCountUnread({
                                sessions: s
                            })])
                        }, t.prototype.fetchIMHistoryMessagesAndCountUnread = function(t) {
                            var e = this,
                                i = t.sessions;
                            return new c.default((function(t, s) {
                                e.fetchIMHistoryMessagesByCycleAndCountUnread({
                                    sessions: i,
                                    resolve: t,
                                    reject: s
                                })
                            }))
                        }, t.prototype.fetchIMHistoryMessagesByCycleAndCountUnread = function(t) {
                            var e = this,
                                i = t.sessions,
                                s = void 0 === i ? [] : i,
                                a = t.resolve,
                                o = t.reject,
                                r = n(s),
                                u = r.splice(0, 10);
                            if (0 === u.length) a();
                            else {
                                var h = u.map((function(t) {
                                    return {
                                        b: t.uid,
                                        ai: t.peerAppId,
                                        chid: p.default.get("channelId"),
                                        st: t.readTime && t.readTime > Date.now() - 2592e6 ? t.readTime : Date.now() - 2592e6,
                                        et: S,
                                        g: t.isChat() ? 0 : 1
                                    }
                                }));
                                _.default.fetchMultiSessionsHistoryMessagesByTimeRange({
                                    type: d.SESSION_TYPE.CHAT,
                                    limit: 100,
                                    sessionDataArray: h
                                }).then((function() {
                                    e.countUnreadSessions({
                                        sessions: u
                                    }), e.fetchIMHistoryMessagesByCycleAndCountUnread({
                                        sessions: r,
                                        resolve: a,
                                        reject: o
                                    })
                                })).catch((function(t) {
                                    console.error("fetchIMHistoryMessagesByCycle", t), e.fetchIMHistoryMessagesByCycleAndCountUnread({
                                        sessions: r,
                                        resolve: a,
                                        reject: o
                                    })
                                }))
                            }
                        }, t.prototype.fetchPubHistoryMessagesAndCountUnread = function(t) {
                            var e = this,
                                i = t.sessions;
                            return new c.default((function(t, s) {
                                e.fetchPubHistoryMessagesByCycleAndCountUnread({
                                    sessions: i,
                                    resolve: t,
                                    reject: s
                                })
                            }))
                        }, t.prototype.fetchPubHistoryMessagesByCycleAndCountUnread = function(t) {
                            var e = this,
                                i = t.sessions,
                                s = void 0 === i ? [] : i,
                                a = t.resolve,
                                o = t.reject,
                                r = n(s),
                                u = r.splice(0, 10);
                            if (0 === u.length) a();
                            else {
                                var h = u.map((function(t) {
                                    return {
                                        u: t.pubId,
                                        pu: t.peerUid,
                                        st: t.readTime && t.readTime > Date.now() - 6048e5 ? t.readTime : Date.now() - 6048e5,
                                        et: S
                                    }
                                }));
                                _.default.fetchMultiSessionsHistoryMessagesByTimeRange({
                                    type: d.SESSION_TYPE.PUB_CHAT,
                                    limit: 100,
                                    sessionDataArray: h
                                }).then((function() {
                                    e.countUnreadSessions({
                                        sessions: u
                                    }), e.fetchPubHistoryMessagesByCycleAndCountUnread({
                                        sessions: r,
                                        resolve: a,
                                        reject: o
                                    })
                                })).catch((function(t) {
                                    console.error("fetchPubHistoryMessagesByCycle", t), e.fetchPubHistoryMessagesByCycleAndCountUnread({
                                        sessions: r,
                                        resolve: a,
                                        reject: o
                                    })
                                }))
                            }
                        }, t.prototype.countUnreadSessions = function(t) {
                            var e = this,
                                i = t.sessions.map((function(t) {
                                    return t.unreads = e.countUnreadByMessages({
                                        session: t
                                    }), t.setCountUnreadFlag(!0), t
                                }));
                            this.saveSessions(i)
                        }, t.prototype.countUnreadByMessages = function(t) {
                            var e = this,
                                i = t.session,
                                s = h.default.parse(i.sessionId),
                                n = s.uid,
                                a = s.channelId;
                            return _.default.getMessages(n, a).reduce((function(t, s) {
                                return e.isShouldCountUnread(i, s) ? t + 1 : t
                            }), 0)
                        }, t.prototype.fetchIMRemoteSessionListByTimeByOrder = function(t) {
                            var e = t.day,
                                i = void 0 === e ? 5 : e,
                                s = this.getSortedSessionList().reverse().find((function(t) {
                                    if (t.isChat() || t.isGroupChat()) return !0
                                })),
                                n = s && s.svrTime ? s.svrTime : void 0,
                                a = this._lastFetchIMSessionListTime - 24 * i * 60 * 60 * 1e3;
                            return this.fetchIMRemoteSessionListByTime({
                                startTime: a,
                                endTime: n
                            })
                        }, t.prototype.fetchPubRemoteSessionListByTimeByOrder = function(t) {
                            var e = t.day,
                                i = void 0 === e ? 5 : e,
                                s = this.getSortedSessionList().reverse().find((function(t) {
                                    if (t.isPubChat() || t.isCSChat()) return !0
                                })),
                                n = s && s.svrTime ? s.svrTime : void 0,
                                a = this._lastFetchPubSessionListTime - 24 * i * 60 * 60 * 1e3;
                            return this.fetchPubRemoteSessionListByTime({
                                startTime: a,
                                endTime: n
                            })
                        }, t.prototype.getTotalUnreadNumber = function() {
                            return this._sessionMap.values().reduce((function(t, e) {
                                return t + e.unreads
                            }), 0)
                        }, t
                    }();
                    e.default = new I
                },
                9209: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(9972),
                        n = function() {
                            function t() {
                                this.mtdx = null
                            }
                            return t.prototype.init = function(t) {
                                this.mtdx = t
                            }, t.prototype.getUserVcard = function(t) {
                                var e = this;
                                return void 0 === t && (t = []), Array.isArray(t) && 0 !== t.length ? new s.default((function(i, s) {
                                    e.mtdx.HTTP.Msg.getUserVcard({
                                        data: {
                                            ul: t
                                        },
                                        success: function(t) {
                                            var e = t.rescode,
                                                n = t.data;
                                            0 === e ? i(n) : s(e)
                                        }
                                    })
                                })) : s.default.resolve([])
                            }, t.prototype.getPubVcard = function(t) {
                                var e = this;
                                return Array.isArray(t) && 0 !== t.length ? new s.default((function(i, s) {
                                    e.mtdx.HTTP.Pub.getPubVcard({
                                        data: {
                                            pubIds: t
                                        },
                                        success: function(t) {
                                            var e = t.rescode,
                                                n = t.data;
                                            0 === e ? i(n) : s(e)
                                        }
                                    })
                                })) : s.default.resolve([])
                            }, t
                        }();
                    e.default = new n
                },
                771: function(t, e, i) {
                    "use strict";
                    var s, n = this && this.__extends || (s = function(t, e) {
                        return (s = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(t, e) {
                                t.__proto__ = e
                            } || function(t, e) {
                                for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i])
                            })(t, e)
                    }, function(t, e) {
                        function i() {
                            this.constructor = t
                        }
                        s(t, e), t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i)
                    });
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), e.PubChatCancelMessage = e.GroupChatCancelMessage = e.ChatCancelMessage = void 0;
                    var a = i(3550),
                        o = i(5605),
                        r = i(1581),
                        u = function() {
                            function t(t) {
                                var e = t.appId,
                                    i = void 0 === e ? 0 : e,
                                    s = t.deviceType,
                                    n = void 0 === s ? 0 : s,
                                    u = t.belongTo,
                                    h = void 0 === u ? "" : u,
                                    d = t.from,
                                    c = void 0 === d ? "" : d,
                                    p = t.to,
                                    l = void 0 === p ? "" : p,
                                    f = t.fromName,
                                    _ = void 0 === f ? "" : f,
                                    g = t.toAppId,
                                    m = void 0 === g ? 0 : g,
                                    S = t.extension,
                                    I = void 0 === S ? "" : S,
                                    T = t.channelId,
                                    v = void 0 === T ? 0 : T,
                                    E = t.isForce,
                                    y = void 0 !== E && E,
                                    R = t.time,
                                    M = void 0 === R ? 0 : R,
                                    N = t.uuid,
                                    U = void 0 === N ? "" : N,
                                    A = t.mid,
                                    O = void 0 === A ? "" : A;
                                this.isCancel = !0, this.sessionId = "", this.appId = 0, this.deviceType = 0, this.sessionType = "", this.belongTo = "", this.from = "", this.to = "", this.fromName = "", this.toAppId = 0, this.extension = "", this.channelId = 0, this.isForce = !1, this.status = o.CANCEL_STATUS.DEFAULT, this.time = 0, this.mid = "", this.uuid = "", this.svrTime = 0, this.isTTMessage = !1, this.appId = i, this.deviceType = n, this.belongTo = h, this.from = c, this.to = l, this.fromName = _, this.toAppId = m, this.extension = I, this.channelId = v, this.isForce = y, this.status = o.CANCEL_STATUS.CANCELING, this.time = M, this.mid = O, this.uuid = U, this.svrTime = O ? a.default.fromString(O).shiftRight(22).toNumber() + 1361753741828 : 0, this.sessionId = r.default.create({
                                    channelId: this.channelId,
                                    uid: this.belongTo
                                })
                            }
                            return t.prototype.setMid = function(t) {
                                var e = t.toString ? t.toString() : t;
                                this.mid = e, this.svrTime = e ? a.default.fromString(e).shiftRight(22).toNumber() + 1361753741828 : 0
                            }, t.prototype.isChatMessage = function() {
                                return this.sessionType === o.SESSION_TYPE.CHAT
                            }, t.prototype.isGroupChatMessage = function() {
                                return this.sessionType === o.SESSION_TYPE.GROUP_CHAT
                            }, t.prototype.isPubChatMessage = function() {
                                return this.sessionType === o.SESSION_TYPE.PUB_CHAT
                            }, t.prototype.isCSChatMessage = function() {
                                return this.sessionType === o.SESSION_TYPE.CS_CHAT
                            }, t.prototype.setMessageToCanceled = function() {
                                this.status = o.CANCEL_STATUS.CANCELED
                            }, t
                        }(),
                        h = function(t) {
                            function e(e) {
                                var i = t.call(this, e) || this;
                                return i.sessionType = o.SESSION_TYPE.CHAT, i
                            }
                            return n(e, t), e
                        }(u);
                    e.ChatCancelMessage = h;
                    var d = function(t) {
                        function e(e) {
                            var i = t.call(this, e) || this;
                            return i.groupName = "", i.adminUid = "", i.groupName = e.groupName || "", i.sessionType = o.SESSION_TYPE.GROUP_CHAT, i.adminUid = void 0 !== e.adminUid ? e.adminUid : 0, i
                        }
                        return n(e, t), e
                    }(u);
                    e.GroupChatCancelMessage = d;
                    var c = function(t) {
                        function e(e) {
                            var i = t.call(this, e) || this;
                            return i.direction = "", i.direction = e.direction, i.sessionType = o.SESSION_TYPE.PUB_CHAT, i
                        }
                        return n(e, t), e
                    }(u);
                    e.PubChatCancelMessage = c
                },
                4510: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var i = function() {
                        function t(t) {
                            var e = t.type,
                                i = t.mid,
                                s = t.data,
                                n = t.channelId;
                            t.deviceId;
                            this.type = 0, this.mid = "", this.data = "", this.channelId = 0, this.deviceId = 0, this.type = e, this.mid = i, this.data = s, this.channelId = n
                        }
                        return t.prototype.isDataMessage = function() {
                            return !0
                        }, t
                    }();
                    e.default = i
                },
                9645: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(5647);
                    Object.defineProperty(e, "Session", {
                        enumerable: !0,
                        get: function() {
                            return s.default
                        }
                    });
                    var n = i(1845);
                    Object.defineProperty(e, "Message", {
                        enumerable: !0,
                        get: function() {
                            return n.default
                        }
                    });
                    var a = i(9262);
                    Object.defineProperty(e, "Read", {
                        enumerable: !0,
                        get: function() {
                            return a.default
                        }
                    })
                },
                1845: function(t, e, i) {
                    "use strict";
                    var s, n = this && this.__extends || (s = function(t, e) {
                        return (s = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(t, e) {
                                t.__proto__ = e
                            } || function(t, e) {
                                for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i])
                            })(t, e)
                    }, function(t, e) {
                        function i() {
                            this.constructor = t
                        }
                        s(t, e), t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i)
                    });
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), e.PubTTMessage = e.CSChatMessage = e.PubChatMessage = e.GroupChatMessage = e.ChatMessage = void 0;
                    var a = i(1581),
                        o = i(5605),
                        r = i(3550),
                        u = function() {
                            function t(e) {
                                var i = e.appId,
                                    s = void 0 === i ? 0 : i,
                                    n = e.channelId,
                                    u = void 0 === n ? 0 : n,
                                    h = e.type,
                                    d = void 0 === h ? t.TYPE.MSG_TYPE_TEXT : h,
                                    c = e.uuid,
                                    p = void 0 === c ? "" : c,
                                    l = e.from,
                                    f = void 0 === l ? "" : l,
                                    _ = e.fromName,
                                    g = void 0 === _ ? "" : _,
                                    m = e.to,
                                    S = void 0 === m ? "" : m,
                                    I = e.time,
                                    T = void 0 === I ? 0 : I,
                                    v = e.status,
                                    E = void 0 === v ? o.MESSAGE_STATUS.STATUS_CREATED : v,
                                    y = e.belongTo,
                                    R = void 0 === y ? "" : y,
                                    M = e.mid,
                                    N = void 0 === M ? "" : M,
                                    U = e.extension,
                                    A = void 0 === U ? "" : U,
                                    O = e.deviceType,
                                    C = void 0 === O ? 0 : O,
                                    P = e.message,
                                    L = e.isLocal,
                                    b = void 0 !== L && L,
                                    G = e.toAppId,
                                    w = void 0 === G ? 0 : G,
                                    D = e.sessionSeqId,
                                    B = e.compatible,
                                    k = e.receipt,
                                    x = void 0 !== k && k;
                                this.sessionId = "", this.appId = 0, this.channelId = 0, this.type = 0, this.uuid = "", this.from = "0", this.fromName = "", this.to = "0", this.time = 0, this.status = 0, this.deviceType = 0, this.belongTo = "0", this.mid = "", this.extension = "", this.sessionType = "", this.body = {}, this.svrTime = 0, this.isLocal = !1, this.seqId = 0, this.isCancel = !1, this.isTTMessage = !1, this.toAppId = 0, this.pubId = "", this.peerUid = "", this.sessionSeqId = "", this.compatible = "", this.receipt = !1, this.appId = s, this.channelId = u, this.type = d, this.uuid = p, this.from = f, this.fromName = g, this.to = S, this.time = T, this.status = E, this.deviceType = C, this.belongTo = R, this.mid = N, this.extension = A, this.sessionType = null, this.body = t.getMessageBody(d, P), this.svrTime = N ? r.default.fromString(N).shiftRight(22).toNumber() + 1361753741828 : 0, this.isLocal = b, this.toAppId = w, this.sessionSeqId = D, this.compatible = B, this.receipt = x, this.sessionId = a.default.create({
                                    uid: this.belongTo,
                                    channelId: this.channelId
                                })
                            }
                            return t.getMessageBody = function(e, i) {
                                if (void 0 === i && (i = {}), !e || !i) return {};
                                switch (e) {
                                    case t.TYPE.MSG_TYPE_TEXT:
                                        return {
                                            text: i.text
                                        };
                                    case t.TYPE.MSG_TYPE_VOICE:
                                        return {
                                            url: i.url, codec: i.codec, duration: i.duration, stamp: i.stamp, token: i.token, custom: i.custom
                                        };
                                    case t.TYPE.MSG_TYPE_VIDEO:
                                        return {
                                            videoUrl: i.videoUrl, screenshotUrl: i.screenshotUrl, duration: i.duration, size: i.size, width: i.width, height: i.height, timestamp: i.timestamp, token: i.token
                                        };
                                    case t.TYPE.MSG_TYPE_IMAGE:
                                        return {
                                            thumbnail: i.thumbnail, normal: i.normal, original: i.original, imgType: i.type, token: i.token, originSize: i.originSize, uploadImageType: i.uploadImageType
                                        };
                                    case t.TYPE.MSG_TYPE_CALENDAR:
                                        return {
                                            cid: i.calendarID, dtstart: i.dtstart, dtend: i.dtend, summary: i.summary, location: i.location, participant: (i.participant, i.participant ? JSON.parse(i.participant) : []), remark: i.remark || "", trigger: i.trigger
                                        };
                                    case t.TYPE.MSG_TYPE_LINK:
                                        return {
                                            title: i.title, content: i.content, image: i.image, link: i.link
                                        };
                                    case t.TYPE.MSG_TYPE_MULTI_LINK:
                                        return {
                                            num: i.num, content: "string" == typeof i.content && i.content ? JSON.parse(i.content) : []
                                        };
                                    case t.TYPE.MSG_TYPE_FILE:
                                        return {
                                            id: i.id, url: i.url, name: i.name, format: i.format, size: i.size, token: i.token, lsize: i.lsize, custom: i.custom
                                        };
                                    case t.TYPE.MSG_TYPE_GPS:
                                        return {
                                            latitude: i.latitude, longitude: i.longitude, name: i.name
                                        };
                                    case t.TYPE.MSG_TYPE_VCARD:
                                        return {
                                            uid: i.uid, name: i.name, account: i.account, type: i.type, subType: i.subtype
                                        };
                                    case t.TYPE.MSG_TYPE_EMOTION:
                                        return {
                                            category: i.category, eType: i.type, name: i.name
                                        };
                                    case t.TYPE.MSG_TYPE_EVENT:
                                        return {
                                            eType: i.type, text: i.text
                                        };
                                    case t.TYPE.MSG_TYPE_CUSTOM:
                                        return {
                                            templateName: i.templateName, contentTitle: i.contentTitle, content: i.content, linkName: i.linkName, link: i.link
                                        };
                                    case t.TYPE.MSG_TYPE_GENERAL:
                                        return {
                                            data: i.data, type: i.type
                                        };
                                    case t.TYPE.MSG_TYPE_NEWEMOTION:
                                        return {
                                            category: i.category, packageId: i.packageId, packageName: i.packageName, id: i.id, name: i.name, type: i.type, params: i.params
                                        }
                                }
                            }, t.prototype.setSeqId = function(t) {
                                this.seqId = r.default.fromString(t) || null
                            }, t.prototype.setMid = function(t) {
                                if ("0" !== t) {
                                    var e = t.toString ? t.toString() : t;
                                    this.mid = e, this.svrTime = e ? r.default.fromString(e).shiftRight(22).toNumber() + 1361753741828 : 0
                                }
                            }, t.prototype.isChatMessage = function() {
                                return this.sessionType === o.SESSION_TYPE.CHAT
                            }, t.prototype.isGroupChatMessage = function() {
                                return this.sessionType === o.SESSION_TYPE.GROUP_CHAT
                            }, t.prototype.isPubChatMessage = function() {
                                return this.sessionType === o.SESSION_TYPE.PUB_CHAT
                            }, t.prototype.isCSChatMessage = function() {
                                return this.sessionType === o.SESSION_TYPE.CS_CHAT
                            }, t.prototype.setMessageToCanceled = function() {
                                console.error("此方法没有被覆盖,请勿使用")
                            }, t.prototype.isDataMessage = function() {
                                return !1
                            }, t.TYPE = o.MESSAGE_TYPE, t.STATUS = o.MESSAGE_STATUS, t
                        }();
                    e.default = u;
                    var h = function(t) {
                        function e(e) {
                            var i = t.call(this, e) || this;
                            return i.sessionType = o.SESSION_TYPE.CHAT, i.seqId = e.seqId, i
                        }
                        return n(e, t), e
                    }(u);
                    e.ChatMessage = h;
                    var d = function(t) {
                        function e(e) {
                            var i = t.call(this, e) || this;
                            return i.sessionType = o.SESSION_TYPE.GROUP_CHAT, i.seqId = e.seqId, i
                        }
                        return n(e, t), e
                    }(u);
                    e.GroupChatMessage = d;
                    var c = function(t) {
                        function e(e) {
                            var i = t.call(this, e) || this;
                            return i.sessionType = o.SESSION_TYPE.PUB_CHAT, i
                        }
                        return n(e, t), e
                    }(u);
                    e.PubChatMessage = c;
                    var p = function(t) {
                        function e(e) {
                            var i = t.call(this, e) || this;
                            return i.sessionType = o.SESSION_TYPE.CS_CHAT, i.pubId = e.pubId, i.peerUid = e.peerUid, i
                        }
                        return n(e, t), e
                    }(u);
                    e.CSChatMessage = p;
                    var l = function(t) {
                        function e(e) {
                            var i = t.call(this, e) || this;
                            return i.isTTMessage = !0, i.body = e.message, i
                        }
                        return n(e, t), e
                    }(u);
                    e.PubTTMessage = l
                },
                9262: function(t, e, i) {
                    "use strict";
                    var s, n = this && this.__extends || (s = function(t, e) {
                        return (s = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(t, e) {
                                t.__proto__ = e
                            } || function(t, e) {
                                for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i])
                            })(t, e)
                    }, function(t, e) {
                        function i() {
                            this.constructor = t
                        }
                        s(t, e), t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i)
                    });
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var a = i(5605),
                        o = i(1581),
                        r = i(5678),
                        u = function(t) {
                            var e = t.uid,
                                i = t.deviceType,
                                s = t.msgUuid,
                                n = t.syncReadItems;
                            this.uid = "", this.deviceType = 0, this.uuid = "", this.readItems = [], this.uid = e, this.deviceType = i, this.uuid = s, this.readItems = n.map((function(t) {
                                return h.createReadItem(t)
                            }))
                        };
                    e.default = u;
                    var h = function() {
                            function t(t) {
                                var e = t.uid,
                                    i = t.sessionType,
                                    s = t.channelId,
                                    n = void 0 === s ? r.default.get("channelId") : s,
                                    a = t.type,
                                    u = t.peerAppId,
                                    h = t.time,
                                    d = void 0 === h ? 0 : h,
                                    c = t.svrTime,
                                    p = void 0 === c ? 0 : c;
                                t.uuid;
                                this.sessionId = "", this.uid = "0", this.channelId = 0, this.type = "", this.peerAppId = 0, this.time = 0, this.svrTime = 0, this.sessionId = o.default.create({
                                    uid: e,
                                    channelId: n
                                }), this.sessionType = i, this.uid = e, this.channelId = n, this.type = a, this.peerAppId = u, this.time = d, this.svrTime = p
                            }
                            return t.createReadItem = function(t) {
                                switch (t.sessionType) {
                                    case a.SESSION_TYPE.CHAT:
                                    case a.SESSION_TYPE.GROUP_CHAT:
                                        return new d(t);
                                    case a.SESSION_TYPE.PUB_CHAT:
                                    case a.SESSION_TYPE.CS_CHAT:
                                        return new c(t)
                                }
                            }, t
                        }(),
                        d = function(t) {
                            function e(e) {
                                return t.call(this, e) || this
                            }
                            return n(e, t), e
                        }(h),
                        c = function(t) {
                            function e(e) {
                                var i = t.call(this, e) || this;
                                return i.pubId = "", i.peerUid = "", i.pubId = e.pubId, i.peerUid = e.peerUid, i
                            }
                            return n(e, t), e
                        }(h)
                },
                5647: function(t, e, i) {
                    "use strict";
                    var s, n = this && this.__extends || (s = function(t, e) {
                        return (s = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(t, e) {
                                t.__proto__ = e
                            } || function(t, e) {
                                for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i])
                            })(t, e)
                    }, function(t, e) {
                        function i() {
                            this.constructor = t
                        }
                        s(t, e), t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i)
                    });
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var a = i(1581),
                        o = i(5605),
                        r = function() {
                            function t(t) {
                                var e = t.appId,
                                    i = void 0 === e ? 0 : e,
                                    s = t.channelId,
                                    n = void 0 === s ? 0 : s,
                                    o = t.uid,
                                    r = void 0 === o ? "0" : o,
                                    u = t.type,
                                    h = void 0 === u ? "" : u,
                                    d = t.time,
                                    c = void 0 === d ? 0 : d,
                                    p = t.unreads,
                                    l = void 0 === p ? 0 : p,
                                    f = t.readTime,
                                    _ = void 0 === f ? 0 : f,
                                    g = t.svrTime,
                                    m = void 0 === g ? 0 : g,
                                    S = t.message,
                                    I = void 0 === S ? null : S,
                                    T = t._isCountUnread,
                                    v = void 0 === T || T;
                                this._isCountUnread = !1, this.sessionId = "", this.appId = 0, this.channelId = 0, this.uid = "0", this.type = "", this.svrTime = 0, this.time = 0, this.unreads = 0, this.readTime = 0, this.appId = i, this.channelId = n, this.uid = r, this.type = h, this.svrTime = m, this.time = c, this.unreads = l, this.readTime = _, this.message = I, this._isCountUnread = v, this.sessionId = a.default.create({
                                    uid: this.uid,
                                    channelId: this.channelId
                                })
                            }
                            return t.create = function(e) {
                                switch (e.type) {
                                    case t.TYPE.CHAT:
                                        return new u(e);
                                    case t.TYPE.GROUP_CHAT:
                                        return new h(e);
                                    case t.TYPE.PUB_CHAT:
                                        return new d(e);
                                    case t.TYPE.CS_CHAT:
                                        return new c(e);
                                    default:
                                        return null
                                }
                            }, t.prototype.isChat = function() {
                                return this.type === t.TYPE.CHAT
                            }, t.prototype.isGroupChat = function() {
                                return this.type === t.TYPE.GROUP_CHAT
                            }, t.prototype.isPubChat = function() {
                                return this.type === t.TYPE.PUB_CHAT
                            }, t.prototype.isCSChat = function() {
                                return this.type === t.TYPE.CS_CHAT
                            }, t.prototype.isCountUnread = function() {
                                return this._isCountUnread
                            }, t.prototype.setCountUnreadFlag = function(t) {
                                void 0 === t && (t = !0), this._isCountUnread = t
                            }, t.TYPE = o.SESSION_TYPE, t
                        }();
                    e.default = r;
                    var u = function(t) {
                            function e(e) {
                                return t.call(this, e) || this
                            }
                            return n(e, t), e
                        }(r),
                        h = function(t) {
                            function e(e) {
                                return t.call(this, e) || this
                            }
                            return n(e, t), e
                        }(r),
                        d = function(t) {
                            function e(e) {
                                var i = t.call(this, e) || this;
                                return i.pubId = "", i.pubId = e.uid || "", i
                            }
                            return n(e, t), e
                        }(r),
                        c = function(t) {
                            function e(e) {
                                var i = t.call(this, e) || this;
                                return i.pubId = "", i.peerUid = "", i.pubId = e.pubId || "", i.peerUid = e.peerUid || "", i
                            }
                            return n(e, t), e
                        }(r)
                },
                8194: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(9645);
                    e.default = function(t) {
                        var e, n, a, o, r, u, h, d, c;
                        switch (t.sessionType) {
                            case s.Session.TYPE.CHAT:
                                return n = (e = t).from, a = e.to, o = e.fromName, r = e.mid, u = e.toAppId, h = e.extension, d = e.channelId, c = e.uuid, new(i(1545).Z.Session.IMCancelMsg)({
                                    fromUid: n,
                                    toUid: a,
                                    fromName: o,
                                    toAppId: u,
                                    extension: h,
                                    channel: d,
                                    msgId: r,
                                    msgUuid: c
                                });
                            case s.Session.TYPE.GROUP_CHAT:
                                return function(t) {
                                    var e = t.from,
                                        s = t.to,
                                        n = t.fromName,
                                        a = t.groupName,
                                        o = t.mid,
                                        r = t.extension,
                                        u = t.channelId,
                                        h = t.uuid,
                                        d = t.adminUid;
                                    return new(i(1545).Z.Session.IMCancelGroupMsg)({
                                        fromUid: e,
                                        toGuid: s,
                                        fromName: n,
                                        groupName: a,
                                        extension: r,
                                        channel: u,
                                        msgId: o,
                                        msgUuid: h,
                                        adminUid: d
                                    })
                                }(t);
                            case s.Session.TYPE.PUB_CHAT:
                                return function(t) {
                                    var e = t.from,
                                        s = t.to,
                                        n = t.fromName,
                                        a = t.mid,
                                        o = (t.toAppId, t.extension),
                                        r = t.channelId,
                                        u = t.uuid;
                                    return new(i(326).default.Session.PubCancelMsg)({
                                        fromUid: e,
                                        toUid: s,
                                        toAppId: 0,
                                        fromName: n,
                                        extension: o,
                                        channel: r,
                                        msgId: a,
                                        msgUuid: u
                                    })
                                }(t)
                        }
                    }
                },
                7349: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(9645);

                    function n(t, e) {
                        switch (t) {
                            case s.Message.TYPE.MSG_TYPE_TEXT:
                                return new(i(1545).Z.Message.IMTextMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_VOICE:
                                return new(i(1545).Z.Message.IMAudioMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_VIDEO:
                                return new(i(1545).Z.Message.IMVideoMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_IMAGE:
                                return new(i(1545).Z.Message.IMImageMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_CALENDAR:
                                return new(i(1545).Z.Message.IMCalendarMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_LINK:
                                return new(i(1545).Z.Message.IMLinkMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_MULTI_LINK:
                                return new(i(1545).Z.Message.IMMultiLinkMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_FILE:
                                return new(i(1545).Z.Message.IMFileMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_GPS:
                                return new(i(1545).Z.Message.IMGPSMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_VCARD:
                                return new(i(1545).Z.Message.IMVCardMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_EMOTION:
                            case s.Message.TYPE.MSG_TYPE_EVENT:
                                return new(i(1545).Z.Message.IMEmotionMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_CUSTOM:
                                return new(i(1545).Z.Message.IMCustomInfo)(e);
                            case s.Message.TYPE.MSG_TYPE_GENERAL:
                                return new(i(1545).Z.Message.IMGeneralMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_NEWEMOTION:
                                return new(i(1545).Z.Message.IMNewEmotionMessage)(e)
                        }
                    }

                    function a(t, e) {
                        switch (t) {
                            case s.Message.TYPE.MSG_TYPE_TEXT:
                                return new(i(326).default.Message.PubTextMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_VOICE:
                                return new(i(326).default.Message.PubAudioMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_VIDEO:
                                return new(i(326).default.Message.PubVideoMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_IMAGE:
                                return new(i(326).default.Message.PubImageMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_CALENDAR:
                                return new(i(326).default.Message.PubCalendarMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_LINK:
                                return new(i(326).default.Message.PubLinkMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_MULTI_LINK:
                                return new(i(326).default.Message.PubMultiLinkMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_FILE:
                                return new(i(326).default.Message.PubFileMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_GPS:
                                return new(i(326).default.Message.PubGPSMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_VCARD:
                                return new(i(326).default.Message.PubVCardMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_EMOTION:
                            case s.Message.TYPE.MSG_TYPE_EVENT:
                                return new(i(326).default.Message.PubEmotionMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_CUSTOM:
                                return new(i(326).default.Message.PubCustomInfo)(e);
                            case s.Message.TYPE.MSG_TYPE_GENERAL:
                                return new(i(326).default.Message.PubGeneralMessage)(e);
                            case s.Message.TYPE.MSG_TYPE_NEWEMOTION:
                                return new(i(326).default.Message.PubNewEmotionMessage)(e)
                        }
                    }
                    e.default = function(t) {
                        var e, o, r, u, h, d, c, p, l, f, _;
                        switch (t.sessionType) {
                            case s.Session.TYPE.CHAT:
                                return o = (e = t).body, r = e.from, u = e.to, h = e.fromName, d = e.type, c = e.toAppId, p = e.extension, l = e.channelId, f = e.uuid, _ = n(d, o), new(i(1545).Z.Session.IMSendMsgReq)({
                                    fromUid: r,
                                    toUid: u,
                                    type: d,
                                    message: _,
                                    fromName: h,
                                    toAppId: c,
                                    extension: p,
                                    channel: l,
                                    uuid: f
                                });
                            case s.Session.TYPE.GROUP_CHAT:
                                return function(t) {
                                    var e = t.body,
                                        s = t.from,
                                        a = t.to,
                                        o = t.fromName,
                                        r = t.groupName,
                                        u = t.type,
                                        h = t.extension,
                                        d = t.channelId,
                                        c = t.uuid,
                                        p = t.receipt,
                                        l = n(u, e);
                                    return new(i(1545).Z.Session.IMSendGroupMsgReq)({
                                        fromUid: s,
                                        toGuid: a,
                                        type: u,
                                        message: l,
                                        fromName: o,
                                        groupName: r,
                                        extension: h,
                                        channel: d,
                                        uuid: c,
                                        receipt: p
                                    })
                                }(t);
                            case s.Session.TYPE.PUB_CHAT:
                                return function(t) {
                                    var e = t.body,
                                        s = t.from,
                                        n = t.to,
                                        o = t.fromName,
                                        r = t.type,
                                        u = (t.toAppId, t.extension),
                                        h = t.channelId,
                                        d = t.uuid,
                                        c = t.direction,
                                        p = void 0 === c ? 1 : c,
                                        l = a(r, e);
                                    return new(i(326).default.Session.PubSendMsgReq)({
                                        fromUid: s,
                                        toUid: n,
                                        toAppId: 0,
                                        type: r,
                                        message: l,
                                        fromName: o,
                                        extension: u,
                                        channel: h,
                                        uuid: d,
                                        direction: p
                                    })
                                }(t);
                            case s.Session.TYPE.CS_CHAT:
                                return function(t) {
                                    var e = t.body,
                                        s = t.from,
                                        n = t.to,
                                        o = t.fromName,
                                        r = t.type,
                                        u = (t.toAppId, t.extension),
                                        h = t.channelId,
                                        d = t.uuid,
                                        c = t.direction,
                                        p = void 0 === c ? 1 : c,
                                        l = (1 === p ? n : s).split("_"),
                                        f = l[0],
                                        _ = l[1],
                                        g = a(r, e);
                                    return new(i(326).default.Session.PubSendMsgKFReq)({
                                        senderUid: 1 === p ? s : _,
                                        receiverUid: 1 === p ? _ : n,
                                        receiverAppId: 0,
                                        pubUid: f,
                                        type: r,
                                        message: g,
                                        fromName: o,
                                        extension: u,
                                        channel: h,
                                        uuid: d,
                                        direction: p
                                    })
                                }(t)
                        }
                    }
                },
                8326: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(326);
                    e.default = function(t) {
                        var e = t.from,
                            i = void 0 === e ? "" : e,
                            n = t.to,
                            a = void 0 === n ? "" : n,
                            o = t.body,
                            r = void 0 === o ? {} : o;
                        return new s.default.Session.PubSendTTReq({
                            fromUid: i,
                            toUid: a,
                            message: r
                        })
                    }
                },
                4625: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), e.createPubReadProtocol = e.createIMReadProtocol = void 0;
                    var s = i(5678),
                        n = i(5605);
                    e.createIMReadProtocol = function(t) {
                        var e = t.uid,
                            a = void 0 === e ? s.default.get("uid") : e,
                            o = t.uuid,
                            r = void 0 === o ? void 0 : o,
                            u = t.readData,
                            h = void 0 === u ? [] : u,
                            d = i(1545).Z,
                            c = h.map((function(t) {
                                var e = t.chatId,
                                    i = t.channelId,
                                    s = t.sessionType,
                                    a = t.peerAppId,
                                    o = t.svrTime,
                                    r = t.time;
                                return new d.Session.IMSyncReadItem({
                                    chatId: e,
                                    channel: i,
                                    type: s === n.SESSION_TYPE.CHAT ? n.CHAT_TYPE.CHAT_TYPE_ONE_VS_ONE : n.CHAT_TYPE.CHAT_TYPE_GROUP,
                                    peerAppId: a,
                                    stamp: r,
                                    sts: o
                                })
                            }));
                        return new d.Session.IMSyncRead({
                            uid: a,
                            msgUuid: r,
                            syncReadItems: c
                        })
                    }, e.createPubReadProtocol = function(t) {
                        var e = t.uid,
                            a = void 0 === e ? s.default.get("uid") : e,
                            o = t.uuid,
                            r = void 0 === o ? void 0 : o,
                            u = t.readData,
                            h = void 0 === u ? [] : u,
                            d = i(326).default,
                            c = h.map((function(t) {
                                var e = t.chatId,
                                    i = t.peerUid,
                                    s = t.channelId,
                                    a = t.sessionType,
                                    o = t.peerAppId,
                                    r = t.svrTime,
                                    u = t.time;
                                return new d.Session.PubSyncReadItem({
                                    chatId: e,
                                    peerUid: i,
                                    peerAppId: o,
                                    channel: s,
                                    type: a === n.SESSION_TYPE.PUB_CHAT ? n.CHAT_TYPE.CHAT_TYPE_PUB : n.CHAT_TYPE.CHAT_TYPE_CS,
                                    stamp: u,
                                    sts: r
                                })
                            }));
                        return new d.Session.PubSyncRead({
                            uid: a,
                            msgUuid: r,
                            syncReadItems: c
                        })
                    }
                },
                4864: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), e.EVENT_NAME = void 0;
                    var s = i(6729);
                    e.default = new s,
                        function(t) {
                            t.CONNECTING = "connecting", t.CONNECTED = "connected", t.AUTHENTICATING = "authenticating", t.AUTH_SUCCESS = "auth_success", t.AUTH_FAIL = "auth_fail", t.DISCONNECT = "disconnect", t.KICK_OFF = "kick_off", t.LOGOUT = "logout", t.MESSAGE = "message", t.DATA_MESSAGE = "data_message", t.NOTICE = "notice", t.SEND_MESSAGE_ERROR = "send_message_error", t.UPDATE_MESSAGES = "update_messages", t.EMPTY_SESSIONS = "empty_sessions", t.SESSIONS_LOAD_FINISHED = "sessions_load_finished", t.UPDATE_SESSIONS = "update_sessions", t.DELETE_SESSIONS = "delete_sessions", t.UNREADS_COUNT_FINISHED = "unreads_count_finished", t.OPPOSITE_READ = "opposite_read", t.OPPOSITE_READ_ACK = "opposite_read_ack", t.ADD_FAKE_MESSAGE = "add_fake_message", t.PUB_OPPOSITE_READ = "pub_opposite_read", t.PUB_OPPOSITE_READ_ACK = "pub_opposite_read_ack", t.RECEIPT_GROUP_MESSAGE = "receipt_group_messages", t.RECEIPT_GROUP_MESSAGE_ACK = "receipt_group_messages_ack"
                        }(e.EVENT_NAME || (e.EVENT_NAME = {}))
                },
                2359: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var i = function() {
                        function t(t) {
                            if (this._map = {}, this.size = 0, Array.isArray(t)) {
                                for (var e = 0, i = t; e < i.length; e++) {
                                    var s = i[e];
                                    this.set(s[0], s[1])
                                }
                                this.size = Object.keys(this._map).length
                            }
                        }
                        return t.prototype.has = function(t) {
                            return Object.prototype.hasOwnProperty.call(this._map, t)
                        }, t.prototype.get = function(t) {
                            if (this.has(t)) return this._map[t]
                        }, t.prototype.set = function(t, e) {
                            this._map[t] = e, this.size = Object.keys(this._map).length
                        }, t.prototype.delete = function(t) {
                            return this.has(t) && (delete this._map[t], this.size = Object.keys(this._map).length), !0
                        }, t.prototype.keys = function() {
                            return Object.keys(this._map)
                        }, t.prototype.values = function() {
                            var t = this;
                            return this.keys().map((function(e) {
                                return t._map[e]
                            }))
                        }, t.prototype.entries = function() {
                            for (var t = [], e = 0, i = this.keys(); e < i.length; e++) {
                                var s = i[e];
                                t.push([s, this.get(s)])
                            }
                            return t
                        }, t
                    }();
                    e.default = i
                },
                4461: function(t, e) {
                    "use strict";
                    var i = this && this.__spreadArrays || function() {
                        for (var t = 0, e = 0, i = arguments.length; e < i; e++) t += arguments[e].length;
                        var s = Array(t),
                            n = 0;
                        for (e = 0; e < i; e++)
                            for (var a = arguments[e], o = 0, r = a.length; o < r; o++, n++) s[n] = a[o];
                        return s
                    };
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = function() {
                        function t() {}
                        return t.prototype.sort = function(t) {
                            if (void 0 === t && (t = []), !t || 0 === t.length) return [];
                            var e = i(t);
                            return e.sort(this._msgsMidCompare), e
                        }, t.prototype._msgsMidCompare = function(t, e) {
                            return t.svrTime && e.svrTime ? t.svrTime - e.svrTime : t.time - e.time
                        }, t
                    }();
                    e.default = new s
                },
                9009: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = function() {
                        function t() {}
                        return t.prototype.createChatOppositeRead = function(t) {
                            var e = t.myUid,
                                s = t.data,
                                n = s.uid,
                                a = s.type,
                                o = s.peerAppId,
                                r = s.channelId,
                                u = s.mids,
                                h = i(1545).Z,
                                d = new h.Session.IMOppositeSyncReadItem({
                                    chatId: n,
                                    type: a,
                                    peerAppId: o,
                                    channel: r,
                                    msgIds: u
                                });
                            return new h.Session.IMOppositeSyncRead({
                                uid: e,
                                syncReadItems: [d]
                            })
                        }, t.prototype.createGroupReceiptMessage = function(t) {
                            var e = t.fromUid,
                                s = void 0 === e ? "" : e,
                                n = t.toGuid,
                                a = void 0 === n ? "" : n,
                                o = t.channelId,
                                r = void 0 === o ? 0 : o,
                                u = t.messageItems,
                                h = void 0 === u ? [] : u,
                                d = i(1545).Z,
                                c = h.map((function(t) {
                                    return new d.Session.IMReceiptGroupItem({
                                        msgUuid: t.uuid,
                                        toUid: t.toUid,
                                        msgId: t.mid
                                    })
                                }));
                            return new d.Session.IMReceiptGroupMsgs({
                                fromUid: s,
                                toGuid: a,
                                channel: r,
                                items: c
                            })
                        }, t.prototype.createPubOppositeRead = function(t) {
                            var e = t.myUid,
                                s = t.data,
                                n = s.uid,
                                a = void 0 === n ? "0" : n,
                                o = s.peerUid,
                                r = void 0 === o ? "0" : o,
                                u = s.type,
                                h = void 0 === u ? 1 : u,
                                d = s.peerAppId,
                                c = void 0 === d ? 0 : d,
                                p = s.channelId,
                                l = void 0 === p ? 0 : p,
                                f = s.sts,
                                _ = void 0 === f ? 0 : f,
                                g = i(326).default,
                                m = new g.Session.PubOppositeSyncReadItem({
                                    chatId: a,
                                    peerUid: r,
                                    type: h,
                                    peerAppId: c,
                                    channel: l,
                                    sts: _
                                });
                            return new g.Session.PubOppositeSyncRead({
                                uid: e,
                                syncReadItems: [m]
                            })
                        }, t
                    }();
                    e.default = new s
                },
                903: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(4510);
                    e.default = function(t) {
                        var e = t.type,
                            i = t.msgId,
                            n = t.data,
                            a = t.channel,
                            o = t.deviceId;
                        return new s.default({
                            type: e,
                            mid: i,
                            data: n,
                            channelId: a,
                            deviceId: o
                        })
                    }
                },
                6602: (t, e, i) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var s = i(1845),
                        n = i(771),
                        a = i(5605),
                        o = i(5678);
                    e.default = function(t) {
                        switch (t.messageReceivedType) {
                            case a.MESSAGE_RECEIVED_TYPE.CHAT_MESSAGE:
                                var e = t.appid,
                                    i = t.channel,
                                    r = t.cts,
                                    u = t.deviceType,
                                    h = t.extension,
                                    d = t.fromName,
                                    c = t.fromUid,
                                    p = t.message,
                                    l = t.msgId,
                                    f = t.msgUuid,
                                    _ = t.receipt,
                                    g = t.seqId,
                                    m = t.toUid,
                                    S = t.type,
                                    I = t.status,
                                    T = t.isLocal,
                                    v = t.toAppId;
                                return new s.ChatMessage({
                                    appId: e,
                                    channelId: i,
                                    deviceType: u,
                                    fromName: d,
                                    uuid: f,
                                    time: parseInt(r),
                                    mid: l.value ? l.value() : l,
                                    extension: h,
                                    receipt: _,
                                    seqId: g,
                                    from: c,
                                    to: m,
                                    belongTo: c && c !== o.default.get("uid") ? c : m,
                                    type: S,
                                    status: I,
                                    message: p,
                                    isLocal: T,
                                    toAppId: v
                                });
                            case a.MESSAGE_RECEIVED_TYPE.GROUP_MESSAGE:
                                e = t.appid, i = t.channel, r = t.cts, u = t.deviceType, h = t.extension, d = t.fromName, c = t.fromUid, p = t.message, l = t.msgId, f = t.msgUuid, _ = t.receipt, g = t.seqId;
                                var E = t.toGuid;
                                S = t.type, I = t.status, T = t.isLocal;
                                return new s.GroupChatMessage({
                                    appId: e,
                                    channelId: i,
                                    deviceType: u,
                                    fromName: d,
                                    uuid: f,
                                    time: parseInt(r),
                                    mid: l.value ? l.value() : l,
                                    extension: h,
                                    receipt: _,
                                    seqId: g,
                                    from: c,
                                    to: E,
                                    belongTo: E,
                                    type: S,
                                    status: I,
                                    message: p,
                                    isLocal: T
                                });
                            case a.MESSAGE_RECEIVED_TYPE.CANCEL_CHAT_MESSAGE:
                                u = t.deviceType, f = t.msgUuid, c = t.fromUid, m = t.toUid, d = t.fromName, r = t.cts, l = t.msgId, v = t.toAppId, h = t.extension, i = t.channel;
                                var y = t.isforce;
                                return new n.ChatCancelMessage({
                                    appId: o.default.get("appId"),
                                    deviceType: u,
                                    uuid: f,
                                    from: c,
                                    to: m,
                                    belongTo: c && c !== o.default.get("uid") ? c : m,
                                    fromName: d,
                                    time: parseInt(r),
                                    mid: "string" != typeof l ? l.value() : l,
                                    toAppId: v,
                                    extension: h,
                                    channelId: i,
                                    isForce: y
                                });
                            case a.MESSAGE_RECEIVED_TYPE.CANCEL_GROUP_MESSAGE:
                                u = t.deviceType, f = t.msgUuid, c = t.fromUid, E = t.toGuid, d = t.fromName;
                                var R = t.groupName,
                                    M = (r = t.cts, l = t.msgId, h = t.extension, i = t.channel, y = t.isforce, t.adminUid);
                                return new n.GroupChatCancelMessage({
                                    appId: o.default.get("appId"),
                                    deviceType: u,
                                    uuid: f,
                                    from: c,
                                    to: E,
                                    belongTo: E,
                                    fromName: d,
                                    groupName: R,
                                    time: parseInt(r),
                                    mid: "string" != typeof l ? l.value() : l,
                                    extension: h,
                                    channelId: i,
                                    isForce: y,
                                    adminUid: M
                                });
                            case a.MESSAGE_RECEIVED_TYPE.PUB_MESSAGE:
                                e = t.appid, i = t.channel, r = t.cts, u = t.deviceType, h = t.extension, d = t.fromName, c = t.fromUid, p = t.message, l = t.msgId, f = t.msgUuid, m = t.toUid;
                                var N = t.direction,
                                    U = (S = t.type, I = t.status, t.pubTTMessage),
                                    A = (T = t.isLocal, t.sessionSeqId),
                                    O = t.compatible;
                                return U ? new s.PubTTMessage({
                                    channelId: i,
                                    deviceType: u,
                                    fromName: d,
                                    uuid: f,
                                    time: parseInt(r),
                                    mid: l.value ? l.value() : l,
                                    extension: h,
                                    from: c,
                                    to: m,
                                    toAppId: 0,
                                    belongTo: 1 === N ? m : c,
                                    type: S,
                                    direction: N,
                                    status: I,
                                    message: p,
                                    sessionSeqId: A,
                                    compatible: O
                                }) : new s.PubChatMessage({
                                    appId: e,
                                    channelId: i,
                                    deviceType: u,
                                    fromName: d,
                                    uuid: f,
                                    time: parseInt(r),
                                    mid: l.value ? l.value() : l,
                                    extension: h,
                                    from: c,
                                    to: m,
                                    toAppId: 0,
                                    belongTo: 1 === N ? m : c,
                                    type: S,
                                    direction: N,
                                    status: I,
                                    message: p,
                                    isLocal: T,
                                    sessionSeqId: A,
                                    compatible: O
                                });
                            case a.MESSAGE_RECEIVED_TYPE.KEFU_MESSAGE:
                                e = t.appid, i = t.channel, r = t.cts, u = t.deviceType, h = t.extension, d = t.fromName;
                                var C = t.senderUid,
                                    P = (p = t.message, l = t.msgId, f = t.msgUuid, t.pubUid),
                                    L = t.receiverUid;
                                N = t.direction, S = t.type, I = t.status, T = t.isLocal;
                                return new s.CSChatMessage({
                                    appId: e,
                                    channelId: i,
                                    deviceType: u,
                                    fromName: d,
                                    uuid: f,
                                    time: parseInt(r),
                                    mid: l.value ? l.value() : l,
                                    extension: h,
                                    from: C,
                                    to: L,
                                    toAppId: 0,
                                    belongTo: P + "_" + (1 === N ? L : C),
                                    pubId: P,
                                    peerUid: 1 === N ? L : C,
                                    type: S,
                                    direction: N,
                                    status: I,
                                    message: p,
                                    isLocal: T
                                });
                            case a.MESSAGE_RECEIVED_TYPE.CANCEL_PUB_MESSAGE:
                                u = t.deviceType, f = t.msgUuid, c = t.fromUid, m = t.toUid, d = t.fromName, r = t.cts, l = t.msgId, v = t.toAppId, N = t.direction, h = t.extension, i = t.channel, y = t.isforce;
                                return new n.PubChatCancelMessage({
                                    appId: o.default.get("appId"),
                                    deviceType: u,
                                    uuid: f,
                                    from: c,
                                    to: m,
                                    belongTo: c && c !== o.default.get("uid") ? c : m,
                                    fromName: d,
                                    time: parseInt(r),
                                    mid: "string" != typeof l ? l.value() : l,
                                    toAppId: v,
                                    direction: N,
                                    extension: h,
                                    channelId: i,
                                    isForce: y
                                });
                            default:
                                return null
                        }
                    }
                },
                1581: (t, e) => {
                    "use strict";
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var i = function() {
                        function t() {
                            this._separtor = "-", this._sessionIdReg = new RegExp("\\d" + this._separtor + "\\d")
                        }
                        return t.prototype.isSessionId = function(t) {
                            return this._sessionIdReg.test(t)
                        }, t.prototype.create = function(t) {
                            var e = t.uid;
                            return "" + t.channelId + this._separtor + e
                        }, t.prototype.parse = function(t) {
                            var e = t.split(this._separtor);
                            return {
                                channelId: this._getInt(e[0], 0),
                                uid: e[1]
                            }
                        }, t.prototype._getInt = function(t, e) {
                            var i = parseInt(t);
                            return isNaN(i) ? e : i
                        }, t
                    }();
                    e.default = new i
                },
                306: t => {
                    "use strict";
                    t.exports = JSON.parse('{"name":"@mtfe/xm-web-sdk","title":"@mtfe/xm-web-sdk","description":"Javascript SDK For Communication Service of daxiang","version":"4.7.7","main":"/lib/dxSDK.src.min.js","author":"huangjue","engines":{"node":">=0.10.0"},"repository":{"type":"git","url":"ssh://git@git.sankuai.com/xm/xm-msg-sdk-web.git"},"keywords":["IMSDK","webSDK","javascript","browser","library"],"bugs":{"url":"https://x.sankuai.com/chat/171259?type=chat","email":"huangjue@meituan.com"},"license":"MIT","dependencies":{"@dp/owl":"^1.9.2-1","@mtfe/knb-core":"^0.4.9","@xm/analytics":"^1.3.24","axios":"^0.19.2","eventemitter3":"^4.0.4"},"devDependencies":{"@typescript-eslint/eslint-plugin":"^3.5.0","@typescript-eslint/parser":"^3.5.0","cache-loader":"^4.1.0","eslint":"^7.4.0","prettier":"^2.0.5","prettier-eslint":"^11.0.0","ts-loader":"^7.0.5","tsconfig-paths-webpack-plugin":"^3.2.0","typescript":"^3.9.6","webpack":"^5.0.0-beta.20","webpack-bundle-analyzer":"^3.8.0","webpack-cli":"^3.3.12"},"scripts":{"build":"webpack --config tasks/webpack.config.js","dev":"webpack --config tasks/webpack.config.js --watch","knb":"dest=demo webpack --config tasks/webpack.config.knb.js --watch","wx":"type=wx webpack --config tasks/webpack.config.js --watch","mrn":"type=mrn webpack --config tasks/webpack.config.js --watch","build.all":"webpack --config tasks/webpack.config.all.js","build.im":"webpack --config tasks/webpack.config.im.js","build.pub":"webpack --config tasks/webpack.config.pub.js","build.data":"webpack --config tasks/webpack.config.data.js","build.chatroom":"webpack --config tasks/webpack.config.chatroom.js","build.wx":"webpack --config tasks/webpack.config.wx.js","build.mrn":"webpack --config tasks/webpack.config.mrn.js","build.webworker":"webpack --config tasks/webpack.config.webworker.js","build.all.min":"env=production webpack --config tasks/webpack.config.all.js","build.im.min":"env=production webpack --config tasks/webpack.config.im.js","build.pub.min":"env=production webpack --config tasks/webpack.config.pub.js","build.data.min":"env=production webpack --config tasks/webpack.config.data.js","build.chatroom.min":"env=production webpack --config tasks/webpack.config.chatroom.js","build.wx.min":"env=production webpack --config tasks/webpack.config.wx.js","build.webworker.min":"env=production webpack --config tasks/webpack.config.webworker.js","build.mrn.min":"env=production webpack --config tasks/webpack.config.mrn.js","test":"jest --watch","watch.test":"jest --watch","lint":"eslint --fix --ext .ts,.tsx,.js,.jsx ./src","prettier":"prettier --write \'src/**/*.ts\'","pack":"./build.sh"}}')
                }
            },
            e = {};

        function i(s) {
            if (e[s]) return e[s].exports;
            var n = e[s] = {
                exports: {}
            };
            return t[s].call(n.exports, n, n.exports, i), n.exports
        }
        return i.g = function() {
            if ("object" == typeof globalThis) return globalThis;
            try {
                return this || new Function("return this")()
            } catch (t) {
                if ("object" == typeof window) return window
            }
        }(), i(7153)
    })()
}));